/*
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

/**
 * The model that is sent in response to a GET request for Flow
 *
 */
class FlowModel {
  /**
   * Create a FlowModel.
   * @member {number} [id] Gets or sets the identifier.
   * @member {number} [drawerID] Gets or sets the drawer identifier.
   * @member {number} [entityID] Gets or sets the entity identifier.
   * @member {string} [type] Gets or sets the type. Possible values include:
   * 'None', 'Workflow', 'Fatal', 'Warning', 'Info', 'Debug', 'Process', 'Rpc',
   * 'Sql', 'Dde'
   * @member {number} [queueID] Gets or sets the queue identifier.
   * @member {date} [workflowTime] Gets or sets the workflow time.
   * @member {date} [insertionTime] Gets or sets the insertion time.
   * @member {number} [workflowUserID] Gets or sets the workflow user
   * identifier.
   * @member {string} [workflowUserFullName] Gets or sets the full name of the
   * workflow user.
   * @member {number} [workflowGroupID] Gets or sets the workflow group
   * identifier.
   * @member {string} [workflowGroupName] Gets or sets the name of the workflow
   * group.
   * @member {string} [operation] Gets or sets the operation. Possible values
   * include: 'None', 'Update', 'Reset', 'Override', 'Null'
   * @member {string} [category] Gets or sets the category. Possible values
   * include: 'None', 'Direct', 'AdHoc', 'Production', 'Review', 'Reset',
   * 'RoutingSlip', 'ReviewRoutingSlip', 'Override'
   * @member {string} [status] Gets or sets the status. Possible values
   * include: 'None', 'Approved', 'Rejected', 'Suspended', 'ApprovedR', 'NoneR'
   * @member {string} [state] Gets or sets the state. Possible values include:
   * 'None', 'Processed', 'Pending', 'Waiting', 'ProcessedR', 'Override',
   * 'OverrideR', 'WaitingR'
   * @member {string} [source] Gets or sets the source.
   * @member {string} [iPAddress] Gets or sets the ip address.
   * @member {string} [computer] Gets or sets the computer.
   * @member {string} [description] Gets or sets the description.
   * @member {number} [index1] Gets or sets the index1.
   * @member {number} [index2] Gets or sets the index2.
   */
  constructor() {
  }

  /**
   * Defines the metadata of FlowModel
   *
   * @returns {object} metadata of FlowModel
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'FlowModel',
      type: {
        name: 'Composite',
        className: 'FlowModel',
        modelProperties: {
          id: {
            required: false,
            serializedName: 'ID',
            type: {
              name: 'Number'
            }
          },
          drawerID: {
            required: false,
            serializedName: 'DrawerID',
            type: {
              name: 'Number'
            }
          },
          entityID: {
            required: false,
            serializedName: 'EntityID',
            type: {
              name: 'Number'
            }
          },
          type: {
            required: false,
            serializedName: 'Type',
            type: {
              name: 'String'
            }
          },
          queueID: {
            required: false,
            serializedName: 'QueueID',
            type: {
              name: 'Number'
            }
          },
          workflowTime: {
            required: false,
            serializedName: 'WorkflowTime',
            type: {
              name: 'DateTime'
            }
          },
          insertionTime: {
            required: false,
            serializedName: 'InsertionTime',
            type: {
              name: 'DateTime'
            }
          },
          workflowUserID: {
            required: false,
            serializedName: 'WorkflowUserID',
            type: {
              name: 'Number'
            }
          },
          workflowUserFullName: {
            required: false,
            serializedName: 'WorkflowUserFullName',
            type: {
              name: 'String'
            }
          },
          workflowGroupID: {
            required: false,
            serializedName: 'WorkflowGroupID',
            type: {
              name: 'Number'
            }
          },
          workflowGroupName: {
            required: false,
            serializedName: 'WorkflowGroupName',
            type: {
              name: 'String'
            }
          },
          operation: {
            required: false,
            serializedName: 'Operation',
            type: {
              name: 'String'
            }
          },
          category: {
            required: false,
            serializedName: 'Category',
            type: {
              name: 'String'
            }
          },
          status: {
            required: false,
            serializedName: 'Status',
            type: {
              name: 'String'
            }
          },
          state: {
            required: false,
            serializedName: 'State',
            type: {
              name: 'String'
            }
          },
          source: {
            required: false,
            serializedName: 'Source',
            type: {
              name: 'String'
            }
          },
          iPAddress: {
            required: false,
            serializedName: 'IPAddress',
            type: {
              name: 'String'
            }
          },
          computer: {
            required: false,
            serializedName: 'Computer',
            type: {
              name: 'String'
            }
          },
          description: {
            required: false,
            serializedName: 'Description',
            type: {
              name: 'String'
            }
          },
          index1: {
            required: false,
            serializedName: 'Index1',
            type: {
              name: 'Number'
            }
          },
          index2: {
            required: false,
            serializedName: 'Index2',
            type: {
              name: 'Number'
            }
          }
        }
      }
    };
  }
}

module.exports = FlowModel;
