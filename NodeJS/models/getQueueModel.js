/*
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

/**
 * Defines the criteria to perform a query on queues
 *
 */
class GetQueueModel {
  /**
   * Create a GetQueueModel.
   * @member {number} [id] Gets or sets the queue identifier.
   * @member {string} [name] Gets or sets the name.
   * @member {string} [alias] Gets or sets the alias.
   * @member {string} [type] Gets or sets the type. Possible values include:
   * 'Inbound', 'Outbound', 'Access', 'Any', 'Shared', 'Public', 'Recycle',
   * 'Fax', 'Print', 'Scan', 'Ocr', 'Workflow', 'Schedule', 'System', 'Other',
   * 'CdoInfostore', 'CdoFolder'
   * @member {number} [access] Gets or sets the access level.
   * @member {boolean} [bypassSecurity] Gets or sets a value indicating whether
   * to bypass security checks.
   * @member {number} [page] Gets or sets the page number.
   * @member {number} [pageSize] Gets or sets the size of the page.
   * @member {string} [sortOrder] Gets or sets the order. Possible values
   * include: 'Unspecified', 'Ascending', 'Descending'
   * @member {string} [sortBy] Gets or sets the column to order by. Possible
   * values include: 'ID', 'Type', 'Name', 'Alias'
   */
  constructor() {
  }

  /**
   * Defines the metadata of GetQueueModel
   *
   * @returns {object} metadata of GetQueueModel
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'GetQueueModel',
      type: {
        name: 'Composite',
        className: 'GetQueueModel',
        modelProperties: {
          id: {
            required: false,
            serializedName: 'ID',
            constraints: {
              InclusiveMaximum: 2147483647,
              InclusiveMinimum: 1
            },
            type: {
              name: 'Number'
            }
          },
          name: {
            required: false,
            serializedName: 'Name',
            constraints: {
              MaxLength: 255,
              MinLength: 0
            },
            type: {
              name: 'String'
            }
          },
          alias: {
            required: false,
            serializedName: 'Alias',
            constraints: {
              MaxLength: 255,
              MinLength: 0
            },
            type: {
              name: 'String'
            }
          },
          type: {
            required: false,
            serializedName: 'Type',
            type: {
              name: 'String'
            }
          },
          access: {
            required: false,
            serializedName: 'Access',
            type: {
              name: 'Number'
            }
          },
          bypassSecurity: {
            required: false,
            serializedName: 'BypassSecurity',
            type: {
              name: 'Boolean'
            }
          },
          page: {
            required: false,
            serializedName: 'Page',
            constraints: {
              InclusiveMaximum: 2147483647,
              InclusiveMinimum: 1
            },
            type: {
              name: 'Number'
            }
          },
          pageSize: {
            required: false,
            serializedName: 'PageSize',
            constraints: {
              InclusiveMaximum: 1000,
              InclusiveMinimum: 1
            },
            type: {
              name: 'Number'
            }
          },
          sortOrder: {
            required: false,
            serializedName: 'SortOrder',
            type: {
              name: 'String'
            }
          },
          sortBy: {
            required: false,
            serializedName: 'SortBy',
            type: {
              name: 'String'
            }
          }
        }
      }
    };
  }
}

module.exports = GetQueueModel;
