/*
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

/**
 * The model that is sent in response to a GET request for Drawers
 *
 */
class DrawerModel {
  /**
   * Create a DrawerModel.
   * @member {number} [id] Gets or sets the identifier.
   * @member {number} [cabinetID] Gets or sets the cabinet identifier.
   * @member {number} [userID] Gets or sets the user identifier.
   * @member {string} [userFullName] Gets or sets the full name of the user.
   * @member {string} name Gets or sets the name.
   * @member {number} [edition] Gets or sets the edition.
   * @member {number} [state] Gets or sets the state.
   * @member {number} [entityFeature] Gets or sets the entity feature.
   * @member {number} [attachmentFeature] Gets or sets the attachment feature.
   * @member {number} [noteFeature] Gets or sets the note feature.
   * @member {number} [reservedInt1] Gets or sets the reserved integer 1.
   * @member {number} [reservedInt2] Gets or sets the reserved integer 2.
   * @member {string} [reservedString1] Gets or sets the reserved string1.
   * @member {string} [reservedString2] Gets or sets the reserved string2.
   */
  constructor() {
  }

  /**
   * Defines the metadata of DrawerModel
   *
   * @returns {object} metadata of DrawerModel
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'DrawerModel',
      type: {
        name: 'Composite',
        className: 'DrawerModel',
        modelProperties: {
          id: {
            required: false,
            serializedName: 'ID',
            type: {
              name: 'Number'
            }
          },
          cabinetID: {
            required: false,
            serializedName: 'CabinetID',
            type: {
              name: 'Number'
            }
          },
          userID: {
            required: false,
            serializedName: 'UserID',
            type: {
              name: 'Number'
            }
          },
          userFullName: {
            required: false,
            serializedName: 'UserFullName',
            type: {
              name: 'String'
            }
          },
          name: {
            required: true,
            serializedName: 'Name',
            constraints: {
              MaxLength: 255,
              MinLength: 0
            },
            type: {
              name: 'String'
            }
          },
          edition: {
            required: false,
            serializedName: 'Edition',
            constraints: {
              InclusiveMaximum: 2147483647,
              InclusiveMinimum: 0
            },
            type: {
              name: 'Number'
            }
          },
          state: {
            required: false,
            serializedName: 'State',
            type: {
              name: 'Number'
            }
          },
          entityFeature: {
            required: false,
            serializedName: 'EntityFeature',
            type: {
              name: 'Number'
            }
          },
          attachmentFeature: {
            required: false,
            serializedName: 'AttachmentFeature',
            type: {
              name: 'Number'
            }
          },
          noteFeature: {
            required: false,
            serializedName: 'NoteFeature',
            type: {
              name: 'Number'
            }
          },
          reservedInt1: {
            required: false,
            serializedName: 'ReservedInt1',
            type: {
              name: 'Number'
            }
          },
          reservedInt2: {
            required: false,
            serializedName: 'ReservedInt2',
            type: {
              name: 'Number'
            }
          },
          reservedString1: {
            required: false,
            serializedName: 'ReservedString1',
            constraints: {
              MaxLength: 255,
              MinLength: 0
            },
            type: {
              name: 'String'
            }
          },
          reservedString2: {
            required: false,
            serializedName: 'ReservedString2',
            constraints: {
              MaxLength: 255,
              MinLength: 0
            },
            type: {
              name: 'String'
            }
          }
        }
      }
    };
  }
}

module.exports = DrawerModel;
