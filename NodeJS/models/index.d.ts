/*
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import * as moment from "moment";


/**
 * @class
 * Initializes a new instance of the WorkflowActionModel class.
 * @constructor
 * Defines properties and methods for Workflow Action Model
 *
 * @member {number} [taskID] Gets or sets the task identifier.
 * @member {number} [targetID] Gets or sets the target id.
 * @member {string} [queueName] Gets or sets the name of the queue.
 * @member {string} [source] Gets or sets the source.
 * @member {string} [computer] Gets or sets the name of the computer.
 * @member {string} [iPAddress] Gets or sets the IP address.
 */
export interface WorkflowActionModel {
  taskID?: number;
  targetID?: number;
  queueName?: string;
  source?: string;
  computer?: string;
  iPAddress?: string;
}

/**
 * @class
 * Initializes a new instance of the WorkflowActionRouteModel class.
 * @constructor
 * Defines properties and methods for Workflow Action Route Model
 *
 * @member {number} [drawerID] Gets or sets the drawer identifier.
 * @member {number} [entityID] Gets or sets the entity identifier.
 * @member {boolean} [keepOriginalTask] Gets or sets a value indicating whether
 * [keep original task].
 * @member {number} [taskID] Gets or sets the task identifier.
 * @member {number} [targetID] Gets or sets the target id.
 * @member {string} [queueName] Gets or sets the name of the queue.
 * @member {string} [source] Gets or sets the source.
 * @member {string} [computer] Gets or sets the name of the computer.
 * @member {string} [iPAddress] Gets or sets the IP address.
 */
export interface WorkflowActionRouteModel {
  drawerID?: number;
  entityID?: number;
  keepOriginalTask?: boolean;
  taskID?: number;
  targetID?: number;
  queueName?: string;
  source?: string;
  computer?: string;
  iPAddress?: string;
}

/**
 * @class
 * Initializes a new instance of the WorkflowActionInitializeModel class.
 * @constructor
 * Defines properties and methods for Workflow Initialize
 *
 * @member {number} [drawerID] Gets or sets the drawer identifier.
 * @member {number} [entityID] Gets or sets the entity identifier.
 * @member {array} [queueID] Gets or sets the queue identifier.
 * @member {array} [queueName] Gets or sets the name of the queue.
 * @member {string} [source] Gets or sets the source.
 * @member {string} [computer] Gets or sets the name of the computer.
 * @member {string} [iPAddress] Gets or sets the IP address.
 */
export interface WorkflowActionInitializeModel {
  drawerID?: number;
  entityID?: number;
  queueID?: number[];
  queueName?: string[];
  source?: string;
  computer?: string;
  iPAddress?: string;
}

/**
 * @class
 * Initializes a new instance of the ApplicationModel class.
 * @constructor
 * The model that is sent in response to a GET request for Application
 *
 * @member {number} [id] Gets or sets the identifier.
 * @member {string} [name] Gets or sets the name.
 */
export interface ApplicationModel {
  id?: number;
  name?: string;
}

/**
 * @class
 * Initializes a new instance of the GetAssociationRequestModel class.
 * @constructor
 * Model for the GET Association input parameters
 *
 * @member {number} [acl] Gets or sets the access control level permissions.
 * @member {number} [page] Gets or sets the page number.
 * @member {number} [pageSize] Gets or sets the size of the page.
 * @member {string} [sortOrder] Gets or sets the order. Possible values
 * include: 'Unspecified', 'Ascending', 'Descending'
 * @member {string} [sortBy] Gets or sets the column to order by. Possible
 * values include: 'Unspecified', 'DrawerID', 'ApplicationID', 'GroupID',
 * 'UserID', 'QueueID', 'Acl'
 */
export interface GetAssociationRequestModel {
  acl?: number;
  page?: number;
  pageSize?: number;
  sortOrder?: string;
  sortBy?: string;
}

/**
 * @class
 * Initializes a new instance of the GroupDrawerModel class.
 * @constructor
 * The model that is sent in response to a GET request for GroupsDrawer
 * associations
 *
 * @member {number} [groupID] Gets or sets the group identifier.
 * @member {string} [groupName] Gets or sets the name of the group.
 * @member {number} [drawerID] Gets or sets the drawer identifier.
 * @member {string} [drawerName] Gets or sets the name of the drawer.
 * @member {number} [acl] Gets or sets the access control level permissions.
 */
export interface GroupDrawerModel {
  groupID?: number;
  groupName?: string;
  drawerID?: number;
  drawerName?: string;
  acl?: number;
}

/**
 * @class
 * Initializes a new instance of the GroupUserModel class.
 * @constructor
 * The model that is sent in response to a GET request for GroupUser
 * associations
 *
 * @member {number} [groupID] Gets or sets the group identifier.
 * @member {string} [groupName] Gets or sets the name of the group.
 * @member {number} [userID] Gets or sets the user identifier.
 * @member {string} [userFullName] Gets or sets the full name of the user.
 */
export interface GroupUserModel {
  groupID?: number;
  groupName?: string;
  userID?: number;
  userFullName?: string;
}

/**
 * @class
 * Initializes a new instance of the GroupQueueModel class.
 * @constructor
 * The model that is sent in response to a GET request for GroupsQueue
 * associations
 *
 * @member {number} [groupID] Gets or sets the group identifier.
 * @member {string} [groupName] Gets or sets the name of the group.
 * @member {number} [queueID] Gets or sets the queue identifier.
 * @member {string} [queueName] Gets or sets the name of the queue.
 * @member {number} [acl] Gets or sets the access control level permissions.
 */
export interface GroupQueueModel {
  groupID?: number;
  groupName?: string;
  queueID?: number;
  queueName?: string;
  acl?: number;
}

/**
 * @class
 * Initializes a new instance of the GroupApplicationModel class.
 * @constructor
 * The model that is sent in response to a GET request for GroupsApplication
 * associations
 *
 * @member {number} [groupID] Gets or sets the group identifier.
 * @member {string} [groupName] Gets or sets the name of the group.
 * @member {number} [applicationID] Gets or sets the application identifier.
 * @member {string} [applicationName] Gets or sets the name of the application.
 * @member {number} [acl] Gets or sets the acl.
 */
export interface GroupApplicationModel {
  groupID?: number;
  groupName?: string;
  applicationID?: number;
  applicationName?: string;
  acl?: number;
}

/**
 * @class
 * Initializes a new instance of the UserDrawerModel class.
 * @constructor
 * The model that is sent in response to a GET request for UserDrawer
 * associations
 *
 * @member {number} [userID] Gets or sets the user identifier.
 * @member {string} [userFullName] Gets or sets the full name of the user.
 * @member {number} [drawerID] Gets or sets the drawer identifier.
 * @member {string} [drawerName] Gets or sets the name of the drawer.
 * @member {number} [acl] Gets or sets the access control level permissions.
 */
export interface UserDrawerModel {
  userID?: number;
  userFullName?: string;
  drawerID?: number;
  drawerName?: string;
  acl?: number;
}

/**
 * @class
 * Initializes a new instance of the UserQueueModel class.
 * @constructor
 * The model that is sent in response to a GET request for UserQueue
 * associations
 *
 * @member {number} [userID] Gets or sets the user identifier.
 * @member {string} [userFullName] Gets or sets the full name of the user.
 * @member {number} [queueID] Gets or sets the queue identifier.
 * @member {string} [queueName] Gets or sets the name of the queue.
 * @member {number} [acl] Gets or sets the access control level permissions.
 */
export interface UserQueueModel {
  userID?: number;
  userFullName?: string;
  queueID?: number;
  queueName?: string;
  acl?: number;
}

/**
 * @class
 * Initializes a new instance of the UserApplicationModel class.
 * @constructor
 * The model that is sent in response to a GET request for UserApplication
 * associations
 *
 * @member {number} [userID] Gets or sets the user identifier.
 * @member {string} [userFullName] Gets or sets the full name of the user.
 * @member {number} [applicationID] Gets or sets the application identifier.
 * @member {string} [applicationName] Gets or sets the name of the application.
 * @member {number} [acl] Gets or sets the access control level permissions.
 */
export interface UserApplicationModel {
  userID?: number;
  userFullName?: string;
  applicationID?: number;
  applicationName?: string;
  acl?: number;
}

/**
 * @class
 * Initializes a new instance of the GetAttachmentRequestModel class.
 * @constructor
 * Model for the GET Attachment input parameters
 *
 * @member {string} [type] Gets or sets the type. Possible values include:
 * 'Standard', 'EntityLink', 'WebLink'
 * @member {string} [extension] Gets or sets the extension.
 * @member {number} [minSize] Gets or sets the minimum size.
 * @member {number} [maxSize] Gets or sets the maximum size.
 * @member {number} [acl] Gets or sets the access control list.
 * @member {number} [entityID] Gets or sets the entity identifier.
 * @member {number} [drawerID] Gets or sets the drawer identifier.
 * @member {string} [name] Gets or sets the name.
 * @member {number} [creatorUserID] Gets or sets the creator user identifier.
 * @member {number} [modifierUserID] Gets or sets the modifier user identifier.
 * @member {date} [minInsertionTime] Gets or sets the minimum insertion time.
 * @member {date} [maxInsertionTime] Gets or sets the maximum insertion time.
 * @member {date} [minModificationTime] Gets or sets the minimum modification
 * time.
 * @member {date} [maxModificationTime] Gets or sets the maximum modification
 * time.
 * @member {number} [page] Gets or sets the page number.
 * @member {number} [pageSize] Gets or sets the size of the page.
 * @member {string} [sortOrder] Gets or sets the order. Possible values
 * include: 'Unspecified', 'Ascending', 'Descending'
 * @member {string} [sortBy] Gets or sets the column to order by. Possible
 * values include: 'PageNumber', 'ID', 'Type', 'InsertionTime',
 * 'ModificationTime', 'CrossReferenceID', 'SubType', 'Extension', 'Name'
 */
export interface GetAttachmentRequestModel {
  type?: string;
  extension?: string;
  minSize?: number;
  maxSize?: number;
  acl?: number;
  entityID?: number;
  drawerID?: number;
  name?: string;
  creatorUserID?: number;
  modifierUserID?: number;
  minInsertionTime?: Date;
  maxInsertionTime?: Date;
  minModificationTime?: Date;
  maxModificationTime?: Date;
  page?: number;
  pageSize?: number;
  sortOrder?: string;
  sortBy?: string;
}

/**
 * @class
 * Initializes a new instance of the AttachmentModel class.
 * @constructor
 * The model that is sent in response to a GET request for Attachment
 *
 * @member {string} [type] Gets or sets the type. Possible values include:
 * 'Standard', 'EntityLink', 'WebLink'
 * @member {number} [size] Gets or sets the size.
 * @member {string} [extension] Gets or sets the extension.
 * @member {string} [fileName] Gets or sets the filename.
 * @member {number} [version] Gets or sets the version.
 * @member {number} [release] Gets or sets the release.
 * @member {number} [category] Gets or sets the category.
 * @member {number} [id] Gets or sets the identifier.
 * @member {number} [drawerID] Gets or sets the drawer identifier.
 * @member {number} [entityID] Gets or sets the entity identifier.
 * @member {number} [ownerUserID] Gets or sets the owner user identifier.
 * @member {string} [ownerUserFullName] Gets or sets the full name of the owner
 * user.
 * @member {number} [ownerGroupID] Gets or sets the owner group identifier.
 * @member {string} [ownerGroupName] Gets or sets the name of the owner group.
 * @member {number} [includerUserID] Gets or sets the includer user identifier.
 * @member {string} [includerUserFullName] Gets or sets the full name of the
 * includer user.
 * @member {number} [modifierUserID] Gets or sets the modifier user identifier.
 * @member {string} [modifierUserFullName] Gets or sets the full name of the
 * modifier user.
 * @member {date} [insertionTime] Gets or sets the insertion time.
 * @member {date} [modificationTime] Gets or sets the modification time.
 * @member {number} [classProperty] Gets or sets the class.
 * @member {string} [name] Gets or sets the name.
 * @member {number} [acl] Gets or sets the acl.
 * @member {number} [pageNumber] Gets or sets the page number.
 * @member {string} [state] Gets or sets the state. Possible values include:
 * 'Undefined', 'MaxStates', 'Reserved', 'UserDefined', 'Dynamic', 'Static',
 * 'New', 'CheckedOut', 'Internal', 'Statres5', 'Linked', 'Statres4',
 * 'Statres3', 'Statres2', 'Statres1', 'Locked', 'OnServerCache',
 * 'OnClientCache', 'Fetching', 'Dynres4', 'Dynres3', 'Dynres2', 'Dynres1',
 * 'User1', 'User2', 'User3', 'User4', 'User5', 'User6', 'User7', 'User8',
 * 'User9', 'User10', 'User11', 'User12', 'User13', 'User14', 'User15',
 * 'User16'
 * @member {string} [note] Gets or sets the note.
 */
export interface AttachmentModel {
  type?: string;
  size?: number;
  extension?: string;
  fileName?: string;
  version?: number;
  release?: number;
  category?: number;
  id?: number;
  drawerID?: number;
  entityID?: number;
  ownerUserID?: number;
  ownerUserFullName?: string;
  ownerGroupID?: number;
  ownerGroupName?: string;
  includerUserID?: number;
  includerUserFullName?: string;
  modifierUserID?: number;
  modifierUserFullName?: string;
  insertionTime?: Date;
  modificationTime?: Date;
  classProperty?: number;
  name?: string;
  acl?: number;
  pageNumber?: number;
  state?: string;
  note?: string;
}

/**
 * @class
 * Initializes a new instance of the UpdateAttachmentRequestModel class.
 * @constructor
 * Model for the PUT Attachment input parameters.
 *
 * @member {number} [category] Gets or sets the category.
 * @member {number} [classProperty] Gets or sets the class.
 * @member {string} [name] Gets or sets the name.
 * @member {number} [acl] Gets or sets the acl.
 * @member {number} [pageNumber] Gets or sets the page number.
 * @member {string} [state] Gets or sets the state. Possible values include:
 * 'Undefined', 'MaxStates', 'Reserved', 'UserDefined', 'Dynamic', 'Static',
 * 'New', 'CheckedOut', 'Internal', 'Statres5', 'Linked', 'Statres4',
 * 'Statres3', 'Statres2', 'Statres1', 'Locked', 'OnServerCache',
 * 'OnClientCache', 'Fetching', 'Dynres4', 'Dynres3', 'Dynres2', 'Dynres1',
 * 'User1', 'User2', 'User3', 'User4', 'User5', 'User6', 'User7', 'User8',
 * 'User9', 'User10', 'User11', 'User12', 'User13', 'User14', 'User15',
 * 'User16'
 * @member {string} [note] Gets or sets the note.
 */
export interface UpdateAttachmentRequestModel {
  category?: number;
  classProperty?: number;
  name?: string;
  acl?: number;
  pageNumber?: number;
  state?: string;
  note?: string;
}

/**
 * @class
 * Initializes a new instance of the GetAttachmentVersionRequestModel class.
 * @constructor
 * Model for the GET Attachment Version input parameters
 *
 * @member {number} [version] Gets or sets the indexed version value.
 * @member {number} [creatorUserID] Gets or sets the creator identifier.
 * @member {number} [accessorUserID] Gets or sets the identifier of the user
 * who accessed the attachment version.
 * @member {date} [minAccessTime] Gets or sets the min time the version was
 * last accessed.
 * @member {date} [maxAccessTime] Gets or sets the max time the version was
 * last accessed.
 * @member {date} [minCreationTime] Gets or sets the min creation time of the
 * attachment version.
 * @member {date} [maxCreationTime] Gets or sets the max creation time of the
 * attachment version.
 * @member {date} [minModificationTime] Gets or sets the min modification time
 * of the attachment version.
 * @member {date} [maxModificationTime] Gets or sets the max modification time
 * of the attachment version.
 * @member {number} [page] Gets or sets the page number.
 * @member {number} [pageSize] Gets or sets the size of the page.
 * @member {string} [sortOrder] Gets or sets the order. Possible values
 * include: 'Unspecified', 'Ascending', 'Descending'
 * @member {string} [sortBy] Gets or sets the column to order by. Possible
 * values include: 'Version', 'CreatorUserID', 'AccessorUserID', 'AccessTime',
 * 'CreationTime', 'ModificationTime'
 */
export interface GetAttachmentVersionRequestModel {
  version?: number;
  creatorUserID?: number;
  accessorUserID?: number;
  minAccessTime?: Date;
  maxAccessTime?: Date;
  minCreationTime?: Date;
  maxCreationTime?: Date;
  minModificationTime?: Date;
  maxModificationTime?: Date;
  page?: number;
  pageSize?: number;
  sortOrder?: string;
  sortBy?: string;
}

/**
 * @class
 * Initializes a new instance of the AttachmentVersionModel class.
 * @constructor
 * Attachment Version Model
 *
 * @member {number} [version] Gets or sets the indexed version value.
 * @member {number} [attachmentID] Gets or sets the attachment identifier.
 * @member {string} [name] Gets or sets the string.
 * @member {number} [creatorUserID] Gets or sets the creator identifier.
 * @member {number} [accessorUserID] Gets or sets the identifier of the user
 * who accessed the attachment version.
 * @member {date} [accessTime] Gets or sets the time the version was last
 * accessed.
 * @member {date} [creationTime] Gets or sets the creation time of the
 * attachment version.
 * @member {date} [modificationTime] Gets or sets the modification time of the
 * attachment version.
 * @member {string} [comment] Gets or sets the description comment of changes
 * that were made.
 * @member {number} [reservedInt1] Gets or sets the reserved int1.
 * @member {number} [reservedInt2] Gets or sets the reserved int2.
 * @member {number} [reservedInt3] Gets or sets the reserved int3.
 * @member {number} [reservedInt4] Gets or sets the reserved int4.
 * @member {string} [reservedString1] Gets or sets the reserved string1.
 * @member {string} [reservedString2] Gets or sets the reserved string2.
 */
export interface AttachmentVersionModel {
  version?: number;
  attachmentID?: number;
  name?: string;
  creatorUserID?: number;
  accessorUserID?: number;
  accessTime?: Date;
  creationTime?: Date;
  modificationTime?: Date;
  comment?: string;
  reservedInt1?: number;
  reservedInt2?: number;
  reservedInt3?: number;
  reservedInt4?: number;
  reservedString1?: string;
  reservedString2?: string;
}

/**
 * @class
 * Initializes a new instance of the DrawerModel class.
 * @constructor
 * The model that is sent in response to a GET request for Drawers
 *
 * @member {number} [id] Gets or sets the identifier.
 * @member {number} [cabinetID] Gets or sets the cabinet identifier.
 * @member {number} [userID] Gets or sets the user identifier.
 * @member {string} [userFullName] Gets or sets the full name of the user.
 * @member {string} name Gets or sets the name.
 * @member {number} [edition] Gets or sets the edition.
 * @member {number} [state] Gets or sets the state.
 * @member {number} [entityFeature] Gets or sets the entity feature.
 * @member {number} [attachmentFeature] Gets or sets the attachment feature.
 * @member {number} [noteFeature] Gets or sets the note feature.
 * @member {number} [reservedInt1] Gets or sets the reserved integer 1.
 * @member {number} [reservedInt2] Gets or sets the reserved integer 2.
 * @member {string} [reservedString1] Gets or sets the reserved string1.
 * @member {string} [reservedString2] Gets or sets the reserved string2.
 */
export interface DrawerModel {
  id?: number;
  cabinetID?: number;
  userID?: number;
  userFullName?: string;
  name: string;
  edition?: number;
  state?: number;
  entityFeature?: number;
  attachmentFeature?: number;
  noteFeature?: number;
  reservedInt1?: number;
  reservedInt2?: number;
  reservedString1?: string;
  reservedString2?: string;
}

/**
 * @class
 * Initializes a new instance of the DrawerBase class.
 * @constructor
 * The Drawer Base class.
 *
 * @member {string} name Gets or sets the name.
 * @member {number} [edition] Gets or sets the edition.
 * @member {number} [state] Gets or sets the state.
 * @member {number} [entityFeature] Gets or sets the entity feature.
 * @member {number} [attachmentFeature] Gets or sets the attachment feature.
 * @member {number} [noteFeature] Gets or sets the note feature.
 * @member {number} [reservedInt1] Gets or sets the reserved integer 1.
 * @member {number} [reservedInt2] Gets or sets the reserved integer 2.
 * @member {string} [reservedString1] Gets or sets the reserved string1.
 * @member {string} [reservedString2] Gets or sets the reserved string2.
 */
export interface DrawerBase {
  name: string;
  edition?: number;
  state?: number;
  entityFeature?: number;
  attachmentFeature?: number;
  noteFeature?: number;
  reservedInt1?: number;
  reservedInt2?: number;
  reservedString1?: string;
  reservedString2?: string;
}

/**
 * @class
 * Initializes a new instance of the GetProfileFieldRequestModel class.
 * @constructor
 * Represents a profile search field
 *
 * @member {number} profileType Gets or sets the type of the profile.
 * @member {string} fieldType Gets or sets the type of the field. Possible
 * values include: 'String', 'Integer', 'Double', 'DateTime'
 * @member {number} fieldIndex Gets or sets the index of the field.
 * @member {string} fieldValue Gets or sets the field value.
 */
export interface GetProfileFieldRequestModel {
  profileType: number;
  fieldType: string;
  fieldIndex: number;
  fieldValue: string;
}

/**
 * @class
 * Initializes a new instance of the GetEntityRequestModel class.
 * @constructor
 * Model for the GET Entity input parameters
 *
 * @member {number} drawerID Gets or sets the drawer identifier.
 * @member {number} [acl] Gets or sets the access control list.
 * @member {number} [type] Gets or sets the type of the entity.
 * @member {string} [name] Gets or sets the name.
 * @member {string} [state] Gets or sets the state. Possible values include:
 * 'Undefined', 'Available', 'Locked', 'Suspended', 'Archived', 'Deleted',
 * 'Canceled', 'Complete', 'Reviewed', 'ReviewedSuspended', 'ReviewedComplete',
 * 'Rejected', 'RoutingSlipOpen', 'ReviewedRoutingSlipOpen'
 * @member {number} [referenceCount] Gets or sets the reference count.
 * @member {number} [attachCount] Gets or sets the attach count.
 * @member {number} [noteCount] Gets or sets the note count.
 * @member {number} [ownerUserID] Gets or sets the owner user identifier.
 * @member {number} [ownerGroupID] Gets or sets the owner group identifier.
 * @member {number} [creatorUserID] Gets or sets the creator user identifier.
 * @member {number} [creatorGroupID] Gets or sets the creator group identifier.
 * @member {number} [modifierUserID] Gets or sets the modifier user identifier.
 * @member {number} [modifierGroupID] Gets or sets the modifier group
 * identifier.
 * @member {date} [minCreationTime] Gets or sets the minimum creation time.
 * @member {date} [maxCreationTime] Gets or sets the maximum creation time.
 * @member {date} [minModificationTime] Gets or sets the minimum modification
 * time.
 * @member {date} [maxModificationTime] Gets or sets the maximum modification
 * time.
 * @member {array} [metadata] Gets or sets the metadata.
 * @member {number} [page] Gets or sets the page number.
 * @member {number} [pageSize] Gets or sets the size of the page.
 * @member {string} [sortOrder] Gets or sets the order. Possible values
 * include: 'Unspecified', 'Ascending', 'Descending'
 * @member {string} [sortBy] Gets or sets the column to order by. Possible
 * values include: 'ID', 'Type', 'CreationTime', 'ModificationTime', 'State',
 * 'Name'
 */
export interface GetEntityRequestModel {
  drawerID: number;
  acl?: number;
  type?: number;
  name?: string;
  state?: string;
  referenceCount?: number;
  attachCount?: number;
  noteCount?: number;
  ownerUserID?: number;
  ownerGroupID?: number;
  creatorUserID?: number;
  creatorGroupID?: number;
  modifierUserID?: number;
  modifierGroupID?: number;
  minCreationTime?: Date;
  maxCreationTime?: Date;
  minModificationTime?: Date;
  maxModificationTime?: Date;
  metadata?: GetProfileFieldRequestModel[];
  page?: number;
  pageSize?: number;
  sortOrder?: string;
  sortBy?: string;
}

/**
 * @class
 * Initializes a new instance of the GetEntityBaseResponse class.
 * @constructor
 * The summary model that is sent in response to a GET request for Entity
 *
 * @member {number} [id] Gets or sets the entity identifier.
 * @member {number} [drawerID] Gets or sets the drawer identifier.
 * @member {number} [acl] Gets or sets the access control list.
 * @member {number} [type] Gets or sets the type.
 * @member {number} [subtype] Gets or sets the subtype.
 * @member {number} [age] Gets or sets the age.
 * @member {number} [referenceCount] Gets or sets the reference identifier.
 * @member {number} [accessCount] Gets or sets the access count.
 * @member {number} [profileCount] Gets or sets the profile count.
 * @member {number} [attachCount] Gets or sets the attach count.
 * @member {number} [noteCount] Gets or sets the note count.
 * @member {number} [ownerUserID] Gets or sets the owner user identifier.
 * @member {string} [ownerUserFullName] Gets or sets the full name of the owner
 * user.
 * @member {number} [ownerGroupID] Gets or sets the owner group identifier.
 * @member {string} [ownerGroupName] Gets or sets the name of the owner group.
 * @member {number} [creatorUserID] Gets or sets the creator user identifier.
 * @member {string} [creatorUserFullName] Gets or sets the full name of the
 * creator user.
 * @member {number} [creatorGroupID] Gets or sets the creator group identifier.
 * @member {string} [creatorGroupName] Gets or sets the name of the creator
 * group.
 * @member {number} [modifierUserID] Gets or sets the modifier user identifier.
 * @member {string} [modifierUserFullName] Gets or sets the full name of the
 * modifier user.
 * @member {number} [modifierGroupID] Gets or sets the modifier group
 * identifier.
 * @member {string} [modifierGroupName] Gets or sets the name of the modifier
 * group.
 * @member {date} [creationTime] Gets or sets the creation time.
 * @member {date} [modificationTime] Gets or sets the modification time.
 * @member {date} [accessTime] Gets or sets the access time.
 * @member {date} [resolutionTime] Gets or sets the resolution time.
 * @member {number} [category] Gets or sets the category.
 * @member {number} [reservedInt1] Gets or sets the reserved int1.
 * @member {number} [reservedInt2] Gets or sets the reserved int2.
 * @member {string} [reservedString1] Gets or sets the reserved string1.
 * @member {string} [state] Gets or sets the state. Possible values include:
 * 'Undefined', 'Available', 'Locked', 'Suspended', 'Archived', 'Deleted',
 * 'Canceled', 'Complete', 'Reviewed', 'ReviewedSuspended', 'ReviewedComplete',
 * 'Rejected', 'RoutingSlipOpen', 'ReviewedRoutingSlipOpen'
 * @member {string} [name] Gets or sets the name.
 */
export interface GetEntityBaseResponse {
  id?: number;
  drawerID?: number;
  acl?: number;
  type?: number;
  subtype?: number;
  age?: number;
  referenceCount?: number;
  accessCount?: number;
  profileCount?: number;
  attachCount?: number;
  noteCount?: number;
  ownerUserID?: number;
  ownerUserFullName?: string;
  ownerGroupID?: number;
  ownerGroupName?: string;
  creatorUserID?: number;
  creatorUserFullName?: string;
  creatorGroupID?: number;
  creatorGroupName?: string;
  modifierUserID?: number;
  modifierUserFullName?: string;
  modifierGroupID?: number;
  modifierGroupName?: string;
  creationTime?: Date;
  modificationTime?: Date;
  accessTime?: Date;
  resolutionTime?: Date;
  category?: number;
  reservedInt1?: number;
  reservedInt2?: number;
  reservedString1?: string;
  state?: string;
  name?: string;
}

/**
 * @class
 * Initializes a new instance of the ExtensionModel class.
 * @constructor
 * The model that is sent in response to a GET request for Extension
 *
 * @member {string} [updateAction] Gets or sets the update action. Possible
 * values include: 'None', 'Update', 'Add', 'Remove'
 * @member {number} [entityID] Gets or sets the entity identifier.
 * @member {number} [profileID] Gets or sets the profile identifier.
 * @member {number} [id] Gets or sets the identifier.
 * @member {number} [drawerID] Gets or sets the drawer identifier.
 * @member {number} [type] Gets or sets the type.
 * @member {number} [rowNumber] Gets or sets the row number.
 * @member {array} [strings] Gets or sets the strings.
 * @member {array} [integers] Gets or sets the integers.
 * @member {array} [doubles] Gets or sets the doubles.
 * @member {array} [dates] Gets or sets the dates.
 */
export interface ExtensionModel {
  updateAction?: string;
  entityID?: number;
  profileID?: number;
  id?: number;
  drawerID?: number;
  type?: number;
  rowNumber?: number;
  strings?: string[];
  integers?: number[];
  doubles?: number[];
  dates?: Date[];
}

/**
 * @class
 * Initializes a new instance of the ProfileModel class.
 * @constructor
 * The model that is sent in response to a GET request for Entity
 *
 * @member {number} [id] Gets or sets the profile identifier.
 * @member {number} [acl] Gets or sets the access control list.
 * @member {number} [type] Gets or sets the type.
 * @member {number} [extensionCount] Gets or sets the extension count.
 * @member {number} [ownerUserID] Gets or sets the owner user identifier.
 * @member {string} [ownerUserFullName] Gets or sets the full name of the owner
 * user.
 * @member {number} [ownerGroupID] Gets or sets the owner group identifier.
 * @member {string} [ownerGroupName] Gets or sets the name of the owner group.
 * @member {number} [modifierUserID] Gets or sets the modifier user identifier.
 * @member {string} [modifierUserFullName] Gets or sets the full name of the
 * modifier user.
 * @member {date} [modificationTime] Gets or sets the modification time.
 * @member {array} [strings] Gets or sets the strings.
 * @member {array} [integers] Gets or sets the integers.
 * @member {array} [doubles] Gets or sets the doubles.
 * @member {array} [dates] Gets or sets the dates.
 * @member {array} [extensions] Gets or sets the extensions.
 */
export interface ProfileModel {
  id?: number;
  acl?: number;
  type?: number;
  extensionCount?: number;
  ownerUserID?: number;
  ownerUserFullName?: string;
  ownerGroupID?: number;
  ownerGroupName?: string;
  modifierUserID?: number;
  modifierUserFullName?: string;
  modificationTime?: Date;
  strings?: string[];
  integers?: number[];
  doubles?: number[];
  dates?: Date[];
  extensions?: ExtensionModel[];
}

/**
 * @class
 * Initializes a new instance of the EntityModel class.
 * @constructor
 * The model that is sent in response to a GET request for Entity
 *
 * @member {array} [profiles] Gets or sets the profiles.
 * @member {number} [id] Gets or sets the entity identifier.
 * @member {number} [drawerID] Gets or sets the drawer identifier.
 * @member {number} [acl] Gets or sets the access control list.
 * @member {number} [type] Gets or sets the type.
 * @member {number} [subtype] Gets or sets the subtype.
 * @member {number} [age] Gets or sets the age.
 * @member {number} [referenceCount] Gets or sets the reference identifier.
 * @member {number} [accessCount] Gets or sets the access count.
 * @member {number} [profileCount] Gets or sets the profile count.
 * @member {number} [attachCount] Gets or sets the attach count.
 * @member {number} [noteCount] Gets or sets the note count.
 * @member {number} [ownerUserID] Gets or sets the owner user identifier.
 * @member {string} [ownerUserFullName] Gets or sets the full name of the owner
 * user.
 * @member {number} [ownerGroupID] Gets or sets the owner group identifier.
 * @member {string} [ownerGroupName] Gets or sets the name of the owner group.
 * @member {number} [creatorUserID] Gets or sets the creator user identifier.
 * @member {string} [creatorUserFullName] Gets or sets the full name of the
 * creator user.
 * @member {number} [creatorGroupID] Gets or sets the creator group identifier.
 * @member {string} [creatorGroupName] Gets or sets the name of the creator
 * group.
 * @member {number} [modifierUserID] Gets or sets the modifier user identifier.
 * @member {string} [modifierUserFullName] Gets or sets the full name of the
 * modifier user.
 * @member {number} [modifierGroupID] Gets or sets the modifier group
 * identifier.
 * @member {string} [modifierGroupName] Gets or sets the name of the modifier
 * group.
 * @member {date} [creationTime] Gets or sets the creation time.
 * @member {date} [modificationTime] Gets or sets the modification time.
 * @member {date} [accessTime] Gets or sets the access time.
 * @member {date} [resolutionTime] Gets or sets the resolution time.
 * @member {number} [category] Gets or sets the category.
 * @member {number} [reservedInt1] Gets or sets the reserved int1.
 * @member {number} [reservedInt2] Gets or sets the reserved int2.
 * @member {string} [reservedString1] Gets or sets the reserved string1.
 * @member {string} [state] Gets or sets the state. Possible values include:
 * 'Undefined', 'Available', 'Locked', 'Suspended', 'Archived', 'Deleted',
 * 'Canceled', 'Complete', 'Reviewed', 'ReviewedSuspended', 'ReviewedComplete',
 * 'Rejected', 'RoutingSlipOpen', 'ReviewedRoutingSlipOpen'
 * @member {string} [name] Gets or sets the name.
 */
export interface EntityModel {
  profiles?: ProfileModel[];
  id?: number;
  drawerID?: number;
  acl?: number;
  type?: number;
  subtype?: number;
  age?: number;
  referenceCount?: number;
  accessCount?: number;
  profileCount?: number;
  attachCount?: number;
  noteCount?: number;
  ownerUserID?: number;
  ownerUserFullName?: string;
  ownerGroupID?: number;
  ownerGroupName?: string;
  creatorUserID?: number;
  creatorUserFullName?: string;
  creatorGroupID?: number;
  creatorGroupName?: string;
  modifierUserID?: number;
  modifierUserFullName?: string;
  modifierGroupID?: number;
  modifierGroupName?: string;
  creationTime?: Date;
  modificationTime?: Date;
  accessTime?: Date;
  resolutionTime?: Date;
  category?: number;
  reservedInt1?: number;
  reservedInt2?: number;
  reservedString1?: string;
  state?: string;
  name?: string;
}

/**
 * @class
 * Initializes a new instance of the UpdateEntityRequestModel class.
 * @constructor
 * The model for PUT Entity input parameters.
 *
 * @member {array} [profiles] Gets or sets the profiles.
 * @member {string} [state] Gets or sets the state. Possible values include:
 * 'Undefined', 'Available', 'Locked', 'Suspended', 'Archived', 'Deleted',
 * 'Canceled', 'Complete', 'Reviewed', 'ReviewedSuspended', 'ReviewedComplete',
 * 'Rejected', 'RoutingSlipOpen', 'ReviewedRoutingSlipOpen'
 * @member {string} [name] Gets or sets the name.
 */
export interface UpdateEntityRequestModel {
  profiles?: ProfileModel[];
  state?: string;
  name?: string;
}

/**
 * @class
 * Initializes a new instance of the InsertEntityRequestModel class.
 * @constructor
 * The Insert Entity Model.
 *
 * @member {array} [profiles] Gets or sets the profiles.
 * @member {number} [acl] Gets or sets the access control list.
 * @member {number} [type] Gets or sets the type.
 * @member {string} name Gets or sets the Name.
 */
export interface InsertEntityRequestModel {
  profiles?: ProfileModel[];
  acl?: number;
  type?: number;
  name: string;
}

/**
 * @class
 * Initializes a new instance of the EntityContentModel class.
 * @constructor
 * Entity Content Model
 *
 * @member {string} [entityContent] Gets or sets the content of the entity.
 * Possible values include: 'None', 'All', 'Profiles', 'Attachments', 'Notes',
 * 'Links', 'Events'
 */
export interface EntityContentModel {
  entityContent?: string;
}

/**
 * @class
 * Initializes a new instance of the GetEventRequestModel class.
 * @constructor
 * Model for the GET Event input parameters
 *
 * @member {number} drawerID Gets or sets the drawer identifier.
 * @member {number} entityID Gets or sets the entity identifier.
 * @member {string} [type] Gets or sets the type. Possible values include:
 * 'Undefined', 'Fatal', 'Warning', 'Info', 'Debug', 'Process', 'RPC', 'SQL',
 * 'DDE'
 * @member {date} [minEventTime] Gets or sets the minimum event time.
 * @member {date} [maxEventTime] Gets or sets the maximum event time.
 * @member {number} [eventUserID] Gets or sets the event user identifier.
 * @member {number} [eventGroupID] Gets or sets the event group identifier.
 * @member {string} [category] Gets or sets the category. Possible values
 * include: 'Undefined', 'Entity', 'Profile', 'Attachment', 'Discussion',
 * 'Field', 'Workflow'
 * @member {string} [classProperty] Gets or sets the class. Possible values
 * include: 'Undefined', 'Application', 'Security', 'System'
 * @member {string} [operation] Gets or sets the operation. Possible values
 * include: 'Undefined', 'Insert', 'Update', 'Delete', 'Copy', 'Lock',
 * 'Unlock', 'Open', 'Close', 'Checkout', 'Checkin', 'View', 'Merge', 'Split',
 * 'Classify', 'Null', 'OpenWF', 'Remove', 'ReturnToTop', 'ReturnToBottom',
 * 'Accept', 'Suspend', 'Reject', 'Route', 'Forward', 'Reply', 'Reassign',
 * 'Reset', 'Override', 'Rollback', 'Archive'
 * @member {number} [minProcessingTime] Gets or sets the minimum processing
 * time.
 * @member {number} [maxProcessingTime] Gets or sets the maximum processing
 * time.
 * @member {number} [page] Gets or sets the page number.
 * @member {number} [pageSize] Gets or sets the size of the page.
 * @member {string} [sortOrder] Gets or sets the order. Possible values
 * include: 'Unspecified', 'Ascending', 'Descending'
 * @member {string} [sortBy] Gets or sets the column to order by. Possible
 * values include: 'ID', 'Type', 'EventTime'
 */
export interface GetEventRequestModel {
  drawerID: number;
  entityID: number;
  type?: string;
  minEventTime?: Date;
  maxEventTime?: Date;
  eventUserID?: number;
  eventGroupID?: number;
  category?: string;
  classProperty?: string;
  operation?: string;
  minProcessingTime?: number;
  maxProcessingTime?: number;
  page?: number;
  pageSize?: number;
  sortOrder?: string;
  sortBy?: string;
}

/**
 * @class
 * Initializes a new instance of the EventModel class.
 * @constructor
 * The model that is sent in response to a GET request for Event
 *
 * @member {number} [id] Gets or sets the identifier.
 * @member {number} [drawerID] Gets or sets the drawer identifier.
 * @member {number} [entityID] Gets or sets the entity identifier.
 * @member {string} [type] Gets or sets the type. Possible values include:
 * 'Undefined', 'Fatal', 'Warning', 'Info', 'Debug', 'Process', 'RPC', 'SQL',
 * 'DDE'
 * @member {date} [eventTime] Gets or sets the event time.
 * @member {number} [eventUserID] Gets or sets the event user identifier.
 * @member {string} [eventUserFullName] Gets or sets the full name of the event
 * user.
 * @member {number} [eventGroupID] Gets or sets the event group identifier.
 * @member {string} [eventGroupName] Gets or sets the name of the event group.
 * @member {string} [category] Gets or sets the category. Possible values
 * include: 'Undefined', 'Entity', 'Profile', 'Attachment', 'Discussion',
 * 'Field', 'Workflow'
 * @member {string} [classProperty] Gets or sets the class. Possible values
 * include: 'Undefined', 'Application', 'Security', 'System'
 * @member {string} [operation] Gets or sets the operation. Possible values
 * include: 'Undefined', 'Insert', 'Update', 'Delete', 'Copy', 'Lock',
 * 'Unlock', 'Open', 'Close', 'Checkout', 'Checkin', 'View', 'Merge', 'Split',
 * 'Classify', 'Null', 'OpenWF', 'Remove', 'ReturnToTop', 'ReturnToBottom',
 * 'Accept', 'Suspend', 'Reject', 'Route', 'Forward', 'Reply', 'Reassign',
 * 'Reset', 'Override', 'Rollback', 'Archive'
 * @member {string} [source] Gets or sets the source.
 * @member {string} [computer] Gets or sets the computer.
 * @member {string} [iPAddress] Gets or sets the ip address.
 * @member {string} [description] Gets or sets the description.
 * @member {number} [processTime] Gets or sets the process time.
 * @member {object} [details] Gets or sets the details.
 */
export interface EventModel {
  id?: number;
  drawerID?: number;
  entityID?: number;
  type?: string;
  eventTime?: Date;
  eventUserID?: number;
  eventUserFullName?: string;
  eventGroupID?: number;
  eventGroupName?: string;
  category?: string;
  classProperty?: string;
  operation?: string;
  source?: string;
  computer?: string;
  iPAddress?: string;
  description?: string;
  processTime?: number;
  details?: any;
}

/**
 * @class
 * Initializes a new instance of the GetExtensionRequestModel class.
 * @constructor
 * Model for the GET Extension input parameters
 *
 * @member {number} drawerID Gets or sets the drawer identifier.
 * @member {number} entityID Gets or sets the entity identifier.
 * @member {number} profileID Gets or sets the profile identifier.
 * @member {number} [id] Gets or sets the extension identifier.
 * @member {number} [type] Gets or sets the type of the extension.
 * @member {number} [page] Gets or sets the page number.
 * @member {number} [pageSize] Gets or sets the size of the page.
 * @member {string} [sortOrder] Gets or sets the order. Possible values
 * include: 'Unspecified', 'Ascending', 'Descending'
 * @member {string} [sortBy] Gets or sets the column to order by. Possible
 * values include: 'RowNumber', 'ID', 'Type', 'String', 'Integer', 'Double',
 * 'Date'
 */
export interface GetExtensionRequestModel {
  drawerID: number;
  entityID: number;
  profileID: number;
  id?: number;
  type?: number;
  page?: number;
  pageSize?: number;
  sortOrder?: string;
  sortBy?: string;
}

/**
 * @class
 * Initializes a new instance of the GetFlowRequestModel class.
 * @constructor
 * Model for the GET Flow input parameters
 *
 * @member {number} drawerID Gets or sets the drawer identifier.
 * @member {number} entityID Gets or sets the entity identifier.
 * @member {string} [type] Gets or sets the type. Possible values include:
 * 'None', 'Workflow', 'Fatal', 'Warning', 'Info', 'Debug', 'Process', 'Rpc',
 * 'Sql', 'Dde'
 * @member {number} [queueID] Gets or sets the queue identifier.
 * @member {date} [minWorkflowTime] Gets or sets the minimum workflow time.
 * @member {date} [maxWorkflowTime] Gets or sets the maximum workflow time.
 * @member {date} [minInsertionTime] Gets or sets the minimum insertion time.
 * @member {date} [maxInsertionTime] Gets or sets the maximum insertion time.
 * @member {number} [workflowUserID] Gets or sets the workflow user identifier.
 * @member {number} [workflowGroupID] Gets or sets the workflow group
 * identifier.
 * @member {string} [operation] Gets or sets the operation. Possible values
 * include: 'None', 'Update', 'Reset', 'Override', 'Null'
 * @member {string} [category] Gets or sets the category. Possible values
 * include: 'None', 'Direct', 'AdHoc', 'Production', 'Review', 'Reset',
 * 'RoutingSlip', 'ReviewRoutingSlip', 'Override'
 * @member {string} [status] Gets or sets the status. Possible values include:
 * 'None', 'Approved', 'Rejected', 'Suspended', 'ApprovedR', 'NoneR'
 * @member {string} [state] Gets or sets the state. Possible values include:
 * 'None', 'Processed', 'Pending', 'Waiting', 'ProcessedR', 'Override',
 * 'OverrideR', 'WaitingR'
 * @member {number} [minIndex1] Gets or sets the minimum index 1.
 * @member {number} [maxIndex1] Gets or sets the maximum index 1.
 * @member {number} [minIndex2] Gets or sets the minimum index 2.
 * @member {number} [maxIndex2] Gets or sets the maximum index 2.
 * @member {number} [page] Gets or sets the page number.
 * @member {number} [pageSize] Gets or sets the size of the page.
 * @member {string} [sortOrder] Gets or sets the order. Possible values
 * include: 'Unspecified', 'Ascending', 'Descending'
 * @member {string} [sortBy] Gets or sets the column to order by. Possible
 * values include: 'ID', 'Type', 'QueueID', 'WorkflowTime', 'InsertionTime',
 * 'Index'
 */
export interface GetFlowRequestModel {
  drawerID: number;
  entityID: number;
  type?: string;
  queueID?: number;
  minWorkflowTime?: Date;
  maxWorkflowTime?: Date;
  minInsertionTime?: Date;
  maxInsertionTime?: Date;
  workflowUserID?: number;
  workflowGroupID?: number;
  operation?: string;
  category?: string;
  status?: string;
  state?: string;
  minIndex1?: number;
  maxIndex1?: number;
  minIndex2?: number;
  maxIndex2?: number;
  page?: number;
  pageSize?: number;
  sortOrder?: string;
  sortBy?: string;
}

/**
 * @class
 * Initializes a new instance of the FlowModel class.
 * @constructor
 * The model that is sent in response to a GET request for Flow
 *
 * @member {number} [id] Gets or sets the identifier.
 * @member {number} [drawerID] Gets or sets the drawer identifier.
 * @member {number} [entityID] Gets or sets the entity identifier.
 * @member {string} [type] Gets or sets the type. Possible values include:
 * 'None', 'Workflow', 'Fatal', 'Warning', 'Info', 'Debug', 'Process', 'Rpc',
 * 'Sql', 'Dde'
 * @member {number} [queueID] Gets or sets the queue identifier.
 * @member {date} [workflowTime] Gets or sets the workflow time.
 * @member {date} [insertionTime] Gets or sets the insertion time.
 * @member {number} [workflowUserID] Gets or sets the workflow user identifier.
 * @member {string} [workflowUserFullName] Gets or sets the full name of the
 * workflow user.
 * @member {number} [workflowGroupID] Gets or sets the workflow group
 * identifier.
 * @member {string} [workflowGroupName] Gets or sets the name of the workflow
 * group.
 * @member {string} [operation] Gets or sets the operation. Possible values
 * include: 'None', 'Update', 'Reset', 'Override', 'Null'
 * @member {string} [category] Gets or sets the category. Possible values
 * include: 'None', 'Direct', 'AdHoc', 'Production', 'Review', 'Reset',
 * 'RoutingSlip', 'ReviewRoutingSlip', 'Override'
 * @member {string} [status] Gets or sets the status. Possible values include:
 * 'None', 'Approved', 'Rejected', 'Suspended', 'ApprovedR', 'NoneR'
 * @member {string} [state] Gets or sets the state. Possible values include:
 * 'None', 'Processed', 'Pending', 'Waiting', 'ProcessedR', 'Override',
 * 'OverrideR', 'WaitingR'
 * @member {string} [source] Gets or sets the source.
 * @member {string} [iPAddress] Gets or sets the ip address.
 * @member {string} [computer] Gets or sets the computer.
 * @member {string} [description] Gets or sets the description.
 * @member {number} [index1] Gets or sets the index1.
 * @member {number} [index2] Gets or sets the index2.
 */
export interface FlowModel {
  id?: number;
  drawerID?: number;
  entityID?: number;
  type?: string;
  queueID?: number;
  workflowTime?: Date;
  insertionTime?: Date;
  workflowUserID?: number;
  workflowUserFullName?: string;
  workflowGroupID?: number;
  workflowGroupName?: string;
  operation?: string;
  category?: string;
  status?: string;
  state?: string;
  source?: string;
  iPAddress?: string;
  computer?: string;
  description?: string;
  index1?: number;
  index2?: number;
}

/**
 * @class
 * Initializes a new instance of the GetDefinitionModel class.
 * @constructor
 * Model for the GET Template input parameters
 *
 * @member {number} [drawerID] Gets or sets the drawer identifier.
 * @member {string} [name] Gets or sets the name.
 * @member {string} [category] Gets or sets the category.
 * @member {number} [page] Gets or sets the page number.
 * @member {number} [pageSize] Gets or sets the size of the page.
 * @member {string} [sortOrder] Gets or sets the order. Possible values
 * include: 'Unspecified', 'Ascending', 'Descending'
 * @member {number} [sortBy] Gets or sets the column to order by.
 */
export interface GetDefinitionModel {
  drawerID?: number;
  name?: string;
  category?: string;
  page?: number;
  pageSize?: number;
  sortOrder?: string;
  sortBy?: number;
}

/**
 * @class
 * Initializes a new instance of the ItemDefinitionModel class.
 * @constructor
 * Model for template items (drop down values)
 *
 * @member {string} [id] Gets or sets the identifier.
 * @member {string} name Gets or sets the name.
 * @member {number} value Gets or sets the value.
 * @member {string} type Gets or sets the type. Possible values include:
 * 'Undefined', 'ComboBoxItem', 'ListBoxItem', 'RadioButton', 'ForwardAction',
 * 'ReplyAction'
 */
export interface ItemDefinitionModel {
  id?: string;
  name: string;
  value: number;
  type: string;
}

/**
 * @class
 * Initializes a new instance of the FieldDefinitionModel class.
 * @constructor
 * Model for Template Fields
 *
 * @member {string} [id] Gets or sets the identifier.
 * @member {string} name Gets or sets the name.
 * @member {string} [xmlTag] Gets or sets the XML tag.
 * @member {string} type Gets or sets the type. Possible values include:
 * 'Undefined', 'String', 'Integer', 'Double', 'DateTime', 'Paragraph',
 * 'CheckBox', 'RadioButton', 'ComboBox', 'ListBox', 'Table', 'LargeText',
 * 'ComboString'
 * @member {number} index Gets or sets the index.
 * @member {number} position Gets or sets the position.
 * @member {string} [note] Gets or sets the note.
 * @member {boolean} [isEnabled] Gets or sets a value indicating whether this
 * instance is enabled.
 * @member {string} [isRequired] Gets or sets a value indicating whether this
 * instance is required. Possible values include: 'NotRequired', 'Always',
 * 'OnAccept'
 * @member {boolean} [isProtected] Gets or sets a value indicating whether this
 * instance is protected.
 * @member {string} [default] Gets or sets the default value.
 * @member {string} [mask] Gets or sets the mask.
 * @member {number} [length] Gets or sets the length.
 * @member {boolean} [isMultiline] Gets or sets a value indicating whether this
 * instance is multiline.
 * @member {string} [format] Gets or sets the format.
 * @member {boolean} [isSorted] Gets or sets a value indicating whether this
 * instance is sorted.
 * @member {number} [select] Gets or sets the select.
 * @member {string} [formula] Gets or sets the formula.
 * @member {boolean} [hasValidation] Gets or sets a value indicating whether
 * this instance has validation.
 * @member {string} [validationColumn] Gets or sets the validation column.
 * @member {number} [foundOperation] Gets or sets the found operation.
 * @member {number} [notFoundOperation] Gets or sets the not found operation.
 * @member {number} [sampleImage] Gets or sets the sample image.
 * @member {string} [lookup] Gets or sets the lookup.
 * @member {boolean} [hasLink] Gets or sets a value indicating whether this
 * instance has linking enabled.
 * @member {number} [linkEntityType] Gets or sets the type of the link entity.
 * @member {string} [linkProfile] Gets or sets the link profile.
 * @member {string} [linkField] Gets or sets the link field.
 * @member {string} [reservedString1] Gets or sets the reserved string1.
 * @member {string} [reservedString2] Gets or sets the reserved string2.
 * @member {number} [reservedInt1] Gets or sets the reserved int1.
 * @member {number} [reservedInt2] Gets or sets the reserved int2.
 * @member {boolean} [reservedBit1] Gets or sets a value indicating whether
 * [reserved bit1].
 * @member {boolean} [reservedBit2] Gets or sets a value indicating whether
 * [reserved bit2].
 * @member {array} [items] Gets or sets the template items.
 * @member {array} [fields] Gets or sets the fields.
 */
export interface FieldDefinitionModel {
  id?: string;
  name: string;
  xmlTag?: string;
  type: string;
  index: number;
  position: number;
  note?: string;
  isEnabled?: boolean;
  isRequired?: string;
  isProtected?: boolean;
  default?: string;
  mask?: string;
  length?: number;
  isMultiline?: boolean;
  format?: string;
  isSorted?: boolean;
  select?: number;
  formula?: string;
  hasValidation?: boolean;
  validationColumn?: string;
  foundOperation?: number;
  notFoundOperation?: number;
  sampleImage?: number;
  lookup?: string;
  hasLink?: boolean;
  linkEntityType?: number;
  linkProfile?: string;
  linkField?: string;
  reservedString1?: string;
  reservedString2?: string;
  reservedInt1?: number;
  reservedInt2?: number;
  reservedBit1?: boolean;
  reservedBit2?: boolean;
  items?: ItemDefinitionModel[];
  fields?: FieldDefinitionModel[];
}

/**
 * @class
 * Initializes a new instance of the ProfileDefinitionModel class.
 * @constructor
 * Model for Template Profiles
 *
 * @member {string} [id] Gets or sets the identifier.
 * @member {number} type Gets or sets the type.
 * @member {string} name Gets or sets the name.
 * @member {string} [reservedString1] Gets or sets the reserved string1.
 * @member {number} [reservedInt1] Gets or sets the reserved int1.
 * @member {array} [fields] Gets or sets the fields.
 */
export interface ProfileDefinitionModel {
  id?: string;
  type: number;
  name: string;
  reservedString1?: string;
  reservedInt1?: number;
  fields?: FieldDefinitionModel[];
}

/**
 * @class
 * Initializes a new instance of the EntityDefinitionModel class.
 * @constructor
 * Model for entity templates
 *
 * @member {string} [id] Gets or sets the identifier.
 * @member {date} [creationTime] Gets or sets the creation time.
 * @member {date} [modificationTime] Gets or sets the modification time.
 * @member {number} type Gets or sets the type of template.
 * @member {string} category Gets or sets the category of template.
 * @member {string} name Gets or sets the name of template.
 * @member {boolean} [hasClass] Gets or sets if the template has classes.
 * @member {boolean} [hasSecurity] Gets or sets if the template has security.
 * @member {boolean} [hasProfiles] Gets or sets if the template has profiles.
 * @member {boolean} [hasItems] Gets or sets the has items.
 * @member {string} [smallImage] Gets or sets the small image.
 * @member {string} [largeImage] Gets or sets the large image.
 * @member {boolean} [hasAudit] Gets or sets if the template has auditing
 * enabled.
 * @member {boolean} [allowsViewImages] Gets or sets if the template allows
 * viewing images.
 * @member {boolean} [isReviewState] Gets or sets if the entity is created in a
 * review state.
 * @member {string} [reservedString1] Gets or sets the reserved string1.
 * @member {string} [reservedString2] Gets or sets the reserved string2.
 * @member {number} [reservedInt1] Gets or sets the reserved int1.
 * @member {number} [reservedInt2] Gets or sets the reserved int2.
 * @member {array} [drawers] Gets or sets the drawers.
 * @member {array} [profiles] Gets or sets the profiles.
 */
export interface EntityDefinitionModel {
  id?: string;
  creationTime?: Date;
  modificationTime?: Date;
  type: number;
  category: string;
  name: string;
  hasClass?: boolean;
  hasSecurity?: boolean;
  hasProfiles?: boolean;
  hasItems?: boolean;
  smallImage?: string;
  largeImage?: string;
  hasAudit?: boolean;
  allowsViewImages?: boolean;
  isReviewState?: boolean;
  reservedString1?: string;
  reservedString2?: string;
  reservedInt1?: number;
  reservedInt2?: number;
  drawers?: number[];
  profiles?: ProfileDefinitionModel[];
}

/**
 * @class
 * Initializes a new instance of the EntityDefinitionBase class.
 * @constructor
 * The entity definition base, also acts as the insert model.
 *
 * @member {number} type Gets or sets the type of template.
 * @member {string} category Gets or sets the category of template.
 * @member {string} name Gets or sets the name of template.
 * @member {boolean} [hasClass] Gets or sets if the template has classes.
 * @member {boolean} [hasSecurity] Gets or sets if the template has security.
 * @member {boolean} [hasProfiles] Gets or sets if the template has profiles.
 * @member {boolean} [hasItems] Gets or sets the has items.
 * @member {string} [smallImage] Gets or sets the small image.
 * @member {string} [largeImage] Gets or sets the large image.
 * @member {boolean} [hasAudit] Gets or sets if the template has auditing
 * enabled.
 * @member {boolean} [allowsViewImages] Gets or sets if the template allows
 * viewing images.
 * @member {boolean} [isReviewState] Gets or sets if the entity is created in a
 * review state.
 * @member {string} [reservedString1] Gets or sets the reserved string1.
 * @member {string} [reservedString2] Gets or sets the reserved string2.
 * @member {number} [reservedInt1] Gets or sets the reserved int1.
 * @member {number} [reservedInt2] Gets or sets the reserved int2.
 * @member {array} [drawers] Gets or sets the drawers.
 * @member {array} [profiles] Gets or sets the profiles.
 */
export interface EntityDefinitionBase {
  type: number;
  category: string;
  name: string;
  hasClass?: boolean;
  hasSecurity?: boolean;
  hasProfiles?: boolean;
  hasItems?: boolean;
  smallImage?: string;
  largeImage?: string;
  hasAudit?: boolean;
  allowsViewImages?: boolean;
  isReviewState?: boolean;
  reservedString1?: string;
  reservedString2?: string;
  reservedInt1?: number;
  reservedInt2?: number;
  drawers?: number[];
  profiles?: ProfileDefinitionModel[];
}

/**
 * @class
 * Initializes a new instance of the UpdateEntityDefinitionRequestModel class.
 * @constructor
 * The Entity template update class.
 *
 * @member {string} [category] Gets or sets the category of template.
 * @member {string} [name] Gets or sets the name of templates.
 * @member {string} [smallImage] Gets or sets the small image.
 * @member {string} [largeImage] Gets or sets the large image.
 * @member {boolean} [hasAudit] Gets or sets if the template has auditing
 * enabled.
 * @member {boolean} [allowsViewImages] Gets or sets if the template allows
 * viewing images.
 * @member {boolean} [isReviewState] Gets or sets if the entity is created in a
 * review state.
 * @member {array} [profiles] Gets or sets the profiles.
 */
export interface UpdateEntityDefinitionRequestModel {
  category?: string;
  name?: string;
  smallImage?: string;
  largeImage?: string;
  hasAudit?: boolean;
  allowsViewImages?: boolean;
  isReviewState?: boolean;
  profiles?: ProfileDefinitionModel[];
}

/**
 * @class
 * Initializes a new instance of the GetLookupFieldModel class.
 * @constructor
 * Model for the GET Lookup Fields input parameters
 *
 * @member {string} [columnName] Gets or sets the name of the column.
 * @member {string} [columnValue] Gets or sets the column value.
 */
export interface GetLookupFieldModel {
  columnName?: string;
  columnValue?: string;
}

/**
 * @class
 * Initializes a new instance of the GetFieldValidationModel class.
 * @constructor
 * Model for the GET Template input parameters
 *
 * @member {string} [sortColumn] Gets or sets the sort column.
 * @member {array} [metadata] Gets or sets the metadata search options.
 * @member {number} [page] Gets or sets the page number.
 * @member {number} [pageSize] Gets or sets the size of the page.
 * @member {string} [sortOrder] Gets or sets the order. Possible values
 * include: 'Unspecified', 'Ascending', 'Descending'
 * @member {number} [sortBy] Gets or sets the column to order by.
 */
export interface GetFieldValidationModel {
  sortColumn?: string;
  metadata?: GetLookupFieldModel[];
  page?: number;
  pageSize?: number;
  sortOrder?: string;
  sortBy?: number;
}

/**
 * @class
 * Initializes a new instance of the LookupField class.
 * @constructor
 * @member {string} [column]
 * @member {number} [profileIndex]
 * @member {number} [fieldIndex]
 * @member {number} [extensionIndex]
 */
export interface LookupField {
  column?: string;
  profileIndex?: number;
  fieldIndex?: number;
  extensionIndex?: number;
}

/**
 * @class
 * Initializes a new instance of the FieldValidationModel class.
 * @constructor
 * Model for Template Field Validation
 *
 * @member {array} [lookup] Gets or sets the lookup.
 * @member {array} [values] Gets or sets the values.
 */
export interface FieldValidationModel {
  lookup?: LookupField[];
  values?: { [propertyName: string]: string }[];
}

/**
 * @class
 * Initializes a new instance of the GetGroupRequestModel class.
 * @constructor
 * Model for the GET Group input parameters
 *
 * @member {number} [id] Gets or sets the group identifier.
 * @member {number} [userID] Gets or sets the user identifier.
 * @member {string} [name] Gets or sets the name.
 * @member {string} [type] Gets or sets the type. Possible values include:
 * 'Generic', 'Access', 'Role'
 * @member {string} [state] Gets or sets the state. Possible values include:
 * 'Inactive', 'Active'
 * @member {number} [page] Gets or sets the page number.
 * @member {number} [pageSize] Gets or sets the size of the page.
 * @member {string} [sortOrder] Gets or sets the order. Possible values
 * include: 'Unspecified', 'Ascending', 'Descending'
 * @member {string} [sortBy] Gets or sets the column to order by. Possible
 * values include: 'ID', 'Name', 'Type', 'State'
 */
export interface GetGroupRequestModel {
  id?: number;
  userID?: number;
  name?: string;
  type?: string;
  state?: string;
  page?: number;
  pageSize?: number;
  sortOrder?: string;
  sortBy?: string;
}

/**
 * @class
 * Initializes a new instance of the GroupModel class.
 * @constructor
 * The model that is sent in response to a GET request for Groups
 *
 * @member {number} [id] Gets or sets the group identifier.
 * @member {number} [queueCount] Gets or sets the queue count.
 * @member {number} [userCount] Gets or sets the user count.
 * @member {number} [userID] Gets or sets the user identifier.
 * @member {string} name Gets or sets the name.
 * @member {string} [type] Gets or sets the type. Possible values include:
 * 'Generic', 'Access', 'Role'
 * @member {string} [state] Gets or sets the state. Possible values include:
 * 'Inactive', 'Active'
 * @member {number} [reservedInt1] Gets or sets the reserved int1.
 * @member {number} [reservedInt2] Gets or sets the reserved int2.
 * @member {string} [reservedString1] Gets or sets the reserved string1.
 * @member {string} [reservedString2] Gets or sets the reserved string2.
 */
export interface GroupModel {
  id?: number;
  queueCount?: number;
  userCount?: number;
  userID?: number;
  name: string;
  type?: string;
  state?: string;
  reservedInt1?: number;
  reservedInt2?: number;
  reservedString1?: string;
  reservedString2?: string;
}

/**
 * @class
 * Initializes a new instance of the InsertGroupRequestModel class.
 * @constructor
 * Model for POST Group input Parameters.
 *
 * @member {string} name Gets or sets the name.
 * @member {string} [type] Gets or sets the type. Possible values include:
 * 'Generic', 'Access', 'Role'
 */
export interface InsertGroupRequestModel {
  name: string;
  type?: string;
}

/**
 * @class
 * Initializes a new instance of the GroupBase class.
 * @constructor
 * The Group Base class.
 *
 * @member {number} [userID] Gets or sets the user identifier.
 * @member {string} name Gets or sets the name.
 * @member {string} [type] Gets or sets the type. Possible values include:
 * 'Generic', 'Access', 'Role'
 * @member {string} [state] Gets or sets the state. Possible values include:
 * 'Inactive', 'Active'
 * @member {number} [reservedInt1] Gets or sets the reserved int1.
 * @member {number} [reservedInt2] Gets or sets the reserved int2.
 * @member {string} [reservedString1] Gets or sets the reserved string1.
 * @member {string} [reservedString2] Gets or sets the reserved string2.
 */
export interface GroupBase {
  userID?: number;
  name: string;
  type?: string;
  state?: string;
  reservedInt1?: number;
  reservedInt2?: number;
  reservedString1?: string;
  reservedString2?: string;
}

/**
 * @class
 * Initializes a new instance of the GetEntityLinkRequestModel class.
 * @constructor
 * Model for the GET Link input parameters
 *
 * @member {number} [childEntityID] Gets or sets the child entity identifier.
 * @member {number} [childDrawerID] Gets or sets the child drawer identifier.
 * @member {number} [childType] Gets or sets the type of the child.
 * @member {number} [acl] Gets or sets the access control list.
 * @member {number} [entityID] Gets or sets the entity identifier.
 * @member {number} [drawerID] Gets or sets the drawer identifier.
 * @member {string} [name] Gets or sets the name.
 * @member {number} [creatorUserID] Gets or sets the creator user identifier.
 * @member {number} [modifierUserID] Gets or sets the modifier user identifier.
 * @member {date} [minInsertionTime] Gets or sets the minimum insertion time.
 * @member {date} [maxInsertionTime] Gets or sets the maximum insertion time.
 * @member {date} [minModificationTime] Gets or sets the minimum modification
 * time.
 * @member {date} [maxModificationTime] Gets or sets the maximum modification
 * time.
 * @member {number} [page] Gets or sets the page number.
 * @member {number} [pageSize] Gets or sets the size of the page.
 * @member {string} [sortOrder] Gets or sets the order. Possible values
 * include: 'Unspecified', 'Ascending', 'Descending'
 * @member {string} [sortBy] Gets or sets the column to order by. Possible
 * values include: 'PageNumber', 'ID', 'Type', 'InsertionTime',
 * 'ModificationTime', 'CrossReferenceID', 'SubType', 'Extension', 'Name'
 */
export interface GetEntityLinkRequestModel {
  childEntityID?: number;
  childDrawerID?: number;
  childType?: number;
  acl?: number;
  entityID?: number;
  drawerID?: number;
  name?: string;
  creatorUserID?: number;
  modifierUserID?: number;
  minInsertionTime?: Date;
  maxInsertionTime?: Date;
  minModificationTime?: Date;
  maxModificationTime?: Date;
  page?: number;
  pageSize?: number;
  sortOrder?: string;
  sortBy?: string;
}

/**
 * @class
 * Initializes a new instance of the EntityLinkModel class.
 * @constructor
 * The model that is sent in response to a GET request for Link
 *
 * @member {number} [childDrawerID] Gets or sets the child drawer identifier.
 * @member {number} [childEntityID] Gets or sets the child entity identifier.
 * @member {number} [childType] Gets or sets the type of the child.
 * @member {string} [virtualName] Gets or sets the name of the virtual.
 * @member {number} [id] Gets or sets the identifier.
 * @member {number} [drawerID] Gets or sets the drawer identifier.
 * @member {number} [entityID] Gets or sets the entity identifier.
 * @member {number} [ownerUserID] Gets or sets the owner user identifier.
 * @member {string} [ownerUserFullName] Gets or sets the full name of the owner
 * user.
 * @member {number} [ownerGroupID] Gets or sets the owner group identifier.
 * @member {string} [ownerGroupName] Gets or sets the name of the owner group.
 * @member {number} [includerUserID] Gets or sets the includer user identifier.
 * @member {string} [includerUserFullName] Gets or sets the full name of the
 * includer user.
 * @member {number} [modifierUserID] Gets or sets the modifier user identifier.
 * @member {string} [modifierUserFullName] Gets or sets the full name of the
 * modifier user.
 * @member {date} [insertionTime] Gets or sets the insertion time.
 * @member {date} [modificationTime] Gets or sets the modification time.
 * @member {number} [classProperty] Gets or sets the class.
 * @member {string} [name] Gets or sets the name.
 * @member {number} [acl] Gets or sets the acl.
 * @member {number} [pageNumber] Gets or sets the page number.
 * @member {string} [state] Gets or sets the state. Possible values include:
 * 'Undefined', 'MaxStates', 'Reserved', 'UserDefined', 'Dynamic', 'Static',
 * 'New', 'CheckedOut', 'Internal', 'Statres5', 'Linked', 'Statres4',
 * 'Statres3', 'Statres2', 'Statres1', 'Locked', 'OnServerCache',
 * 'OnClientCache', 'Fetching', 'Dynres4', 'Dynres3', 'Dynres2', 'Dynres1',
 * 'User1', 'User2', 'User3', 'User4', 'User5', 'User6', 'User7', 'User8',
 * 'User9', 'User10', 'User11', 'User12', 'User13', 'User14', 'User15',
 * 'User16'
 * @member {string} [note] Gets or sets the note.
 */
export interface EntityLinkModel {
  childDrawerID?: number;
  childEntityID?: number;
  childType?: number;
  virtualName?: string;
  id?: number;
  drawerID?: number;
  entityID?: number;
  ownerUserID?: number;
  ownerUserFullName?: string;
  ownerGroupID?: number;
  ownerGroupName?: string;
  includerUserID?: number;
  includerUserFullName?: string;
  modifierUserID?: number;
  modifierUserFullName?: string;
  insertionTime?: Date;
  modificationTime?: Date;
  classProperty?: number;
  name?: string;
  acl?: number;
  pageNumber?: number;
  state?: string;
  note?: string;
}

/**
 * @class
 * Initializes a new instance of the UpdateEntityLinkRequestModel class.
 * @constructor
 * The model for PUT EntityLink input parameters.
 *
 * @member {string} [virtualName] Gets or sets the name of the virtual.
 * @member {number} [classProperty] Gets or sets the class.
 * @member {string} [name] Gets or sets the name.
 * @member {number} [acl] Gets or sets the acl.
 * @member {number} [pageNumber] Gets or sets the page number.
 * @member {string} [state] Gets or sets the state. Possible values include:
 * 'Undefined', 'MaxStates', 'Reserved', 'UserDefined', 'Dynamic', 'Static',
 * 'New', 'CheckedOut', 'Internal', 'Statres5', 'Linked', 'Statres4',
 * 'Statres3', 'Statres2', 'Statres1', 'Locked', 'OnServerCache',
 * 'OnClientCache', 'Fetching', 'Dynres4', 'Dynres3', 'Dynres2', 'Dynres1',
 * 'User1', 'User2', 'User3', 'User4', 'User5', 'User6', 'User7', 'User8',
 * 'User9', 'User10', 'User11', 'User12', 'User13', 'User14', 'User15',
 * 'User16'
 * @member {string} [note] Gets or sets the note.
 */
export interface UpdateEntityLinkRequestModel {
  virtualName?: string;
  classProperty?: number;
  name?: string;
  acl?: number;
  pageNumber?: number;
  state?: string;
  note?: string;
}

/**
 * @class
 * Initializes a new instance of the InsertEntityLinkRequestModel class.
 * @constructor
 * The EntityLink model for POST Requests.
 *
 * @member {number} [classProperty] Gets or sets the class.
 * @member {string} name Gets or sets the name.
 * @member {number} [acl] Gets or sets the acl.
 * @member {number} [pageNumber] Gets or sets the page number.
 * @member {string} [note] Gets or sets the note.
 * @member {number} [childDrawerID] Gets or sets the child drawer identifier.
 * @member {number} [childEntityID] Gets or sets the child entity identifier.
 * @member {number} [childType] Gets or sets the type of the child.
 * @member {number} [entityID] Gets or sets the entity identifier.
 * @member {string} [virtualName] Gets or sets the name of the virtual.
 */
export interface InsertEntityLinkRequestModel {
  classProperty?: number;
  name: string;
  acl?: number;
  pageNumber?: number;
  note?: string;
  childDrawerID?: number;
  childEntityID?: number;
  childType?: number;
  entityID?: number;
  virtualName?: string;
}

/**
 * @class
 * Initializes a new instance of the LockModel class.
 * @constructor
 * The model that is sent in response to a GET request for Locks
 *
 * @member {number} [entityID] Gets or sets the entity identifier.
 * @member {number} [sessionID] Gets or sets the user session identifier.
 * @member {number} [userID] Gets or sets the identifier of the user who
 * inserted the entity lock.
 * @member {string} [userFullName] Gets or sets the full name of the user who
 * inserted the lock.
 * @member {date} [lockTime] Gets or sets the time when the lock was placed on
 * the entity.
 * @member {date} [expirationTime] Gets or sets the expiration time of the
 * lock.
 * @member {number} [acl] Gets or sets the access control level permissions of
 * the lock.
 * @member {string} [applicationName] Gets or sets the name of the application
 * creating the lock.
 */
export interface LockModel {
  entityID?: number;
  sessionID?: number;
  userID?: number;
  userFullName?: string;
  lockTime?: Date;
  expirationTime?: Date;
  acl?: number;
  applicationName?: string;
}

/**
 * @class
 * Initializes a new instance of the UpdateLockRequestModel class.
 * @constructor
 * Update request model for Locks
 *
 * @member {number} [expirationDuration] Gets or sets the expiration duration
 * of the lock in minutes.
 * @member {number} [acl] Gets or sets the access control level permissions of
 * the lock.
 * @member {string} [applicationName] Gets or sets the name of the application
 * creating the lock.
 */
export interface UpdateLockRequestModel {
  expirationDuration?: number;
  acl?: number;
  applicationName?: string;
}

/**
 * @class
 * Initializes a new instance of the GetNoteRequestModel class.
 * @constructor
 * Model for the GET Note input parameters
 *
 * @member {number} drawerID Gets or sets the drawer identifier.
 * @member {number} [entityID] Gets or sets the entity identifier.
 * @member {string} [name] Gets or sets the name.
 * @member {number} [creatorUserID] Gets or sets the creator user identifier.
 * @member {number} [modifierUserID] Gets or sets the modifier user identifier.
 * @member {date} [minCreationTime] Gets or sets the minimum creation time.
 * @member {date} [maxCreationTime] Gets or sets the maximum creation time.
 * @member {date} [minModificationTime] Gets or sets the minimum modification
 * time.
 * @member {date} [maxModificationTime] Gets or sets the maximum modification
 * time.
 * @member {number} [parentID] Gets or sets the parent note identifier.
 * @member {number} [page] Gets or sets the page number.
 * @member {number} [pageSize] Gets or sets the size of the page.
 * @member {string} [sortOrder] Gets or sets the order. Possible values
 * include: 'Unspecified', 'Ascending', 'Descending'
 * @member {string} [sortBy] Gets or sets the column to order by. Possible
 * values include: 'ID', 'EntityID', 'Name', 'CreationTime', 'ModificationTime'
 */
export interface GetNoteRequestModel {
  drawerID: number;
  entityID?: number;
  name?: string;
  creatorUserID?: number;
  modifierUserID?: number;
  minCreationTime?: Date;
  maxCreationTime?: Date;
  minModificationTime?: Date;
  maxModificationTime?: Date;
  parentID?: number;
  page?: number;
  pageSize?: number;
  sortOrder?: string;
  sortBy?: string;
}

/**
 * @class
 * Initializes a new instance of the NoteModel class.
 * @constructor
 * The model that is sent in response to a GET request for Notes
 *
 * @member {number} [id] Gets or sets the identifier.
 * @member {number} [drawerID] Gets or sets the drawer identifier.
 * @member {number} [entityID] Gets or sets the entity identifier.
 * @member {number} [ownerUserID] Gets or sets the owner user identifier.
 * @member {string} [ownerUserFullName] Gets or sets the full name of the owner
 * user.
 * @member {number} [ownerGroupID] Gets or sets the owner group identifier.
 * @member {string} [ownerGroupName] Gets or sets the name of the owner group.
 * @member {number} [creatorUserID] Gets or sets the creator user identifier.
 * @member {string} [creatorUserFullName] Gets or sets the full name of the
 * creator user.
 * @member {number} [modifierUserID] Gets or sets the modifier user identifier.
 * @member {string} [modifierUserFullName] Gets or sets the full name of the
 * modifier user.
 * @member {date} [creationTime] Gets or sets the creation time.
 * @member {date} [modificationTime] Gets or sets the modification time.
 * @member {number} [parentID] Gets or sets the parent identifier.
 * @member {number} [acl] Gets or sets the acl.
 * @member {string} [name] Gets or sets the name.
 * @member {string} [note] Gets or sets the note.
 */
export interface NoteModel {
  id?: number;
  drawerID?: number;
  entityID?: number;
  ownerUserID?: number;
  ownerUserFullName?: string;
  ownerGroupID?: number;
  ownerGroupName?: string;
  creatorUserID?: number;
  creatorUserFullName?: string;
  modifierUserID?: number;
  modifierUserFullName?: string;
  creationTime?: Date;
  modificationTime?: Date;
  parentID?: number;
  acl?: number;
  name?: string;
  note?: string;
}

/**
 * @class
 * Initializes a new instance of the NoteBase class.
 * @constructor
 * Note Base Class.
 *
 * @member {number} [acl] Gets or sets the acl.
 * @member {string} [name] Gets or sets the name.
 * @member {string} [note] Gets or sets the note.
 */
export interface NoteBase {
  acl?: number;
  name?: string;
  note?: string;
}

/**
 * @class
 * Initializes a new instance of the InsertNoteRequestModel class.
 * @constructor
 * Model for POST Note input parameters.
 *
 * @member {number} [acl] Gets or sets the acl.
 * @member {number} [entityID] Gets or sets the entity identifier.
 * @member {string} name Gets or sets the name.
 * @member {string} note Gets or sets the note.
 * @member {number} [parentID] Gets or sets the parent identifier.
 */
export interface InsertNoteRequestModel {
  acl?: number;
  entityID?: number;
  name: string;
  note: string;
  parentID?: number;
}

/**
 * @class
 * Initializes a new instance of the GetQueueAssignmentModel class.
 * @constructor
 * Defines the criteria to perform a query on assignments
 *
 * @member {number} [queueID] Gets or sets the unique queue identifier.
 * @member {number} [userID] Gets or sets the user identifier.
 * @member {number} [groupID] Gets or sets the group identifier.
 * @member {string} [type] Gets or sets the queue assignment type. Possible
 * values include: 'Unspecified', 'Primary', 'Secondary'
 * @member {number} [order] Gets or sets the sort order.
 * @member {string} [taskSortColumn] Gets or sets the task sort column.
 * Possible values include: 'TaskID', 'QueueID', 'DrawerID', 'AddressID',
 * 'ObjectID', 'ObjectType', 'State', 'Priority', 'Description', 'Message1',
 * 'Message2', 'Message3', 'Message4', 'Message5', 'OwnerUserID',
 * 'OwnerGroupID', 'EffectiveUserID', 'EffectiveGroupID', 'PreviousQueueID',
 * 'NextQueueID', 'InsertionTime', 'ResolutionTime', 'TaskFileAttachment',
 * 'ReservedInt1', 'ReservedString1'
 * @member {string} [state] Gets or sets the state. Possible values include:
 * 'Unspecified', 'Inactive', 'Active'
 * @member {string} [fetchType] Gets or sets the type of the fetch. Possible
 * values include: 'Unspecified', 'Manual', 'Push'
 * @member {number} [page] Gets or sets the page number.
 * @member {number} [pageSize] Gets or sets the size of the page.
 * @member {string} [sortOrder] Gets or sets the order. Possible values
 * include: 'Unspecified', 'Ascending', 'Descending'
 * @member {string} [sortBy] Gets or sets the column to order by. Possible
 * values include: 'QueueID', 'UserID', 'GroupID', 'Type', 'State', 'Order',
 * 'FetchType'
 */
export interface GetQueueAssignmentModel {
  queueID?: number;
  userID?: number;
  groupID?: number;
  type?: string;
  order?: number;
  taskSortColumn?: string;
  state?: string;
  fetchType?: string;
  page?: number;
  pageSize?: number;
  sortOrder?: string;
  sortBy?: string;
}

/**
 * @class
 * Initializes a new instance of the QueueAssignmentModel class.
 * @constructor
 * Defines properties and methods for Queue Assignment
 *
 * @member {number} [queueID] Gets or sets the unique queue identifier.
 * @member {number} [userID] Gets or sets the user identifier.
 * @member {number} [groupID] Gets or sets the group identifier.
 * @member {string} [type] Gets or sets the queue assignment type. Possible
 * values include: 'Unspecified', 'Primary', 'Secondary'
 * @member {number} [order] Gets or sets the sort order.
 * @member {string} [taskSortColumn] Gets or sets the task sort column.
 * Possible values include: 'TaskID', 'QueueID', 'DrawerID', 'AddressID',
 * 'ObjectID', 'ObjectType', 'State', 'Priority', 'Description', 'Message1',
 * 'Message2', 'Message3', 'Message4', 'Message5', 'OwnerUserID',
 * 'OwnerGroupID', 'EffectiveUserID', 'EffectiveGroupID', 'PreviousQueueID',
 * 'NextQueueID', 'InsertionTime', 'ResolutionTime', 'TaskFileAttachment',
 * 'ReservedInt1', 'ReservedString1'
 * @member {string} [state] Gets or sets the state. Possible values include:
 * 'Unspecified', 'Inactive', 'Active'
 * @member {string} [fetchType] Gets or sets the type of the fetch. Possible
 * values include: 'Unspecified', 'Manual', 'Push'
 */
export interface QueueAssignmentModel {
  queueID?: number;
  userID?: number;
  groupID?: number;
  type?: string;
  order?: number;
  taskSortColumn?: string;
  state?: string;
  fetchType?: string;
}

/**
 * @class
 * Initializes a new instance of the InsertQueueAssignmentRequestModel class.
 * @constructor
 * Model for POST/PUT Queue Assignment input parameters.
 *
 * @member {number} [queueID] Gets or sets the unique queue identifier.
 * @member {number} [userID] Gets or sets the user identifier.
 * @member {string} [type] Gets or sets the queue assignment type. Possible
 * values include: 'Unspecified', 'Primary', 'Secondary'
 * @member {number} [order] Gets or sets the sort order.
 * @member {string} [taskSortColumn] Gets or sets the task sort column.
 * Possible values include: 'TaskID', 'QueueID', 'DrawerID', 'AddressID',
 * 'ObjectID', 'ObjectType', 'State', 'Priority', 'Description', 'Message1',
 * 'Message2', 'Message3', 'Message4', 'Message5', 'OwnerUserID',
 * 'OwnerGroupID', 'EffectiveUserID', 'EffectiveGroupID', 'PreviousQueueID',
 * 'NextQueueID', 'InsertionTime', 'ResolutionTime', 'TaskFileAttachment',
 * 'ReservedInt1', 'ReservedString1'
 * @member {string} [fetchType] Gets or sets the type of the fetch. Possible
 * values include: 'Unspecified', 'Manual', 'Push'
 */
export interface InsertQueueAssignmentRequestModel {
  queueID?: number;
  userID?: number;
  type?: string;
  order?: number;
  taskSortColumn?: string;
  fetchType?: string;
}

/**
 * @class
 * Initializes a new instance of the GetQueueModel class.
 * @constructor
 * Defines the criteria to perform a query on queues
 *
 * @member {number} [id] Gets or sets the queue identifier.
 * @member {string} [name] Gets or sets the name.
 * @member {string} [alias] Gets or sets the alias.
 * @member {string} [type] Gets or sets the type. Possible values include:
 * 'Inbound', 'Outbound', 'Access', 'Any', 'Shared', 'Public', 'Recycle',
 * 'Fax', 'Print', 'Scan', 'Ocr', 'Workflow', 'Schedule', 'System', 'Other',
 * 'CdoInfostore', 'CdoFolder'
 * @member {number} [access] Gets or sets the access level.
 * @member {boolean} [bypassSecurity] Gets or sets a value indicating whether
 * to bypass security checks.
 * @member {number} [page] Gets or sets the page number.
 * @member {number} [pageSize] Gets or sets the size of the page.
 * @member {string} [sortOrder] Gets or sets the order. Possible values
 * include: 'Unspecified', 'Ascending', 'Descending'
 * @member {string} [sortBy] Gets or sets the column to order by. Possible
 * values include: 'ID', 'Type', 'Name', 'Alias'
 */
export interface GetQueueModel {
  id?: number;
  name?: string;
  alias?: string;
  type?: string;
  access?: number;
  bypassSecurity?: boolean;
  page?: number;
  pageSize?: number;
  sortOrder?: string;
  sortBy?: string;
}

/**
 * @class
 * Initializes a new instance of the QueueModel class.
 * @constructor
 * Defines properties and methods for Queues
 *
 * @member {number} [id] Gets or sets the identifier.
 * @member {number} [userCount] Gets or sets the user count.
 * @member {number} [taskCount] Gets or sets the task count.
 * @member {string} [name] Gets or sets the name.
 * @member {string} [alias] Gets or sets the alias.
 * @member {string} [state] Gets or sets the state. Possible values include:
 * 'Inactive', 'Active'
 * @member {string} [type] Gets or sets the type. Possible values include:
 * 'Inbound', 'Outbound', 'Access', 'Any', 'Shared', 'Public', 'Recycle',
 * 'Fax', 'Print', 'Scan', 'Ocr', 'Workflow', 'Schedule', 'System', 'Other',
 * 'CdoInfostore', 'CdoFolder'
 * @member {string} [category] Gets or sets the category.
 * @member {string} [description] Gets or sets the description.
 * @member {number} [reservedInt1] Gets or sets the reserved integer 1.
 * @member {number} [reservedInt2] Gets or sets the reserved integer 2.
 * @member {string} [reservedString1] Gets or sets the reserved string 1.
 * @member {string} [reservedString2] Gets or sets the reserved string 2.
 */
export interface QueueModel {
  id?: number;
  userCount?: number;
  taskCount?: number;
  name?: string;
  alias?: string;
  state?: string;
  type?: string;
  category?: string;
  description?: string;
  reservedInt1?: number;
  reservedInt2?: number;
  reservedString1?: string;
  reservedString2?: string;
}

/**
 * @class
 * Initializes a new instance of the InsertQueueRequestModel class.
 * @constructor
 * Model for POST Queue input parameters.
 *
 * @member {string} name Gets or sets the name.
 * @member {string} alias Gets or sets the alias.
 * @member {string} type Gets or sets the type. Possible values include:
 * 'Inbound', 'Outbound', 'Access', 'Any', 'Shared', 'Public', 'Recycle',
 * 'Fax', 'Print', 'Scan', 'Ocr', 'Workflow', 'Schedule', 'System', 'Other',
 * 'CdoInfostore', 'CdoFolder'
 */
export interface InsertQueueRequestModel {
  name: string;
  alias: string;
  type: string;
}

/**
 * @class
 * Initializes a new instance of the QueueBase class.
 * @constructor
 * Model for PUT Queue parameters.
 *
 * @member {string} [name] Gets or sets the name.
 * @member {string} [alias] Gets or sets the alias.
 * @member {string} [state] Gets or sets the state. Possible values include:
 * 'Inactive', 'Active'
 * @member {string} [type] Gets or sets the type. Possible values include:
 * 'Inbound', 'Outbound', 'Access', 'Any', 'Shared', 'Public', 'Recycle',
 * 'Fax', 'Print', 'Scan', 'Ocr', 'Workflow', 'Schedule', 'System', 'Other',
 * 'CdoInfostore', 'CdoFolder'
 * @member {string} [category] Gets or sets the category.
 * @member {string} [description] Gets or sets the description.
 * @member {number} [reservedInt1] Gets or sets the reserved integer 1.
 * @member {number} [reservedInt2] Gets or sets the reserved integer 2.
 * @member {string} [reservedString1] Gets or sets the reserved string 1.
 * @member {string} [reservedString2] Gets or sets the reserved string 2.
 */
export interface QueueBase {
  name?: string;
  alias?: string;
  state?: string;
  type?: string;
  category?: string;
  description?: string;
  reservedInt1?: number;
  reservedInt2?: number;
  reservedString1?: string;
  reservedString2?: string;
}

/**
 * @class
 * Initializes a new instance of the GetTaskModel class.
 * @constructor
 * Model for the GET Task input parameters
 *
 * @member {number} [lastTaskID] Gets or sets the last task identifier.
 * @member {number} [id] Gets or sets the entity identifier.
 * @member {number} [type] Gets or sets the type of the entity.
 * @member {number} [queueID] Gets or sets the queue identifier.
 * @member {number} [queueType] Gets or sets the type of the queue.
 * @member {number} [drawerID] Gets or sets the drawer identifier.
 * @member {string} [description] Gets or sets the task description.
 * @member {number} [taskID] Gets or sets the task identifier.
 * @member {number} [page] Gets or sets the page number.
 * @member {number} [pageSize] Gets or sets the size of the page.
 * @member {string} [sortOrder] Gets or sets the order. Possible values
 * include: 'Unspecified', 'Ascending', 'Descending'
 * @member {string} [sortBy] Gets or sets the column to order by. Possible
 * values include: 'TaskID', 'QueueID', 'ObjectID', 'Priority', 'Description',
 * 'InsertionTime', 'ResolutionTime', 'ReservedInt1'
 */
export interface GetTaskModel {
  lastTaskID?: number;
  id?: number;
  type?: number;
  queueID?: number;
  queueType?: number;
  drawerID?: number;
  description?: string;
  taskID?: number;
  page?: number;
  pageSize?: number;
  sortOrder?: string;
  sortBy?: string;
}

/**
 * @class
 * Initializes a new instance of the TaskModel class.
 * @constructor
 * The model that is sent in response to a GET request for Tasks
 *
 * @member {number} [taskID] Gets or sets the task identifier.
 * @member {number} [queueID] Gets or sets the queue identifier.
 * @member {number} [drawerID] Gets or sets the drawer identifier.
 * @member {number} [objectID] Gets or sets the object identifier (entity).
 * @member {number} [objectType] Gets or sets the type of the object (entity).
 * @member {number} [ownerUserID] Gets or sets the task owner user identifier.
 * @member {string} [ownerUserFullName] Gets or sets the full name of the owner
 * user.
 * @member {number} [ownerGroupID] Gets or sets the task owner group
 * identifier.
 * @member {string} [ownerGroupName] Gets or sets the name of the owner group.
 * @member {number} [effectiveUserID] Gets or sets the effective user
 * identifier.
 * @member {string} [effectiveUserFullName] Gets or sets the full name of the
 * effective user.
 * @member {number} [effectiveGroupID] Gets or sets the effective group
 * identifier.
 * @member {string} [effectiveGroupName] Gets or sets the name of the effective
 * group.
 * @member {number} [prevQueueID] Gets or sets the previous queue identifier.
 * @member {number} [nextQueueID] Gets or sets the next queue identifier.
 * @member {date} [insertionTime] Gets or sets the task insertion time.
 * @member {number} [addressID] Gets or sets the address identifier.
 * @member {string} [description] Gets or sets the description of the task.
 * @member {string} [message1] Gets or sets message 1.
 * @member {string} [message2] Gets or sets message 2.
 * @member {string} [message3] Gets or sets message 3.
 * @member {string} [message4] Gets or sets message 4.
 * @member {string} [message5] Gets or sets message5.
 * @member {string} [message6] Gets or sets message 6.
 * @member {string} [message7] Gets or sets message 7.
 * @member {string} [message8] Gets or sets message 8.
 * @member {string} [message9] Gets or sets message 9.
 * @member {string} [message10] Gets or sets message 10.
 * @member {string} [message11] Gets or sets message 11.
 * @member {string} [message12] Gets or sets message 12.
 * @member {string} [message13] Gets or sets message 13.
 * @member {string} [message14] Gets or sets message 14.
 * @member {string} [message15] Gets or sets message 15.
 * @member {string} [message16] Gets or sets message 16.
 * @member {number} [state] Gets or sets the task state.
 * @member {number} [priority] Gets or sets the task priority.
 * @member {date} [resolutionTime] Gets or sets the task resolution time.
 * @member {string} [taskFileAttachment] Gets or sets the task file attachment
 * name.
 * @member {number} [reservedInt1] Gets or sets reserved integer 1.
 * @member {string} [reservedString1] Gets or sets reserved string 1.
 */
export interface TaskModel {
  taskID?: number;
  queueID?: number;
  drawerID?: number;
  objectID?: number;
  objectType?: number;
  ownerUserID?: number;
  ownerUserFullName?: string;
  ownerGroupID?: number;
  ownerGroupName?: string;
  effectiveUserID?: number;
  effectiveUserFullName?: string;
  effectiveGroupID?: number;
  effectiveGroupName?: string;
  prevQueueID?: number;
  nextQueueID?: number;
  insertionTime?: Date;
  addressID?: number;
  description?: string;
  message1?: string;
  message2?: string;
  message3?: string;
  message4?: string;
  message5?: string;
  message6?: string;
  message7?: string;
  message8?: string;
  message9?: string;
  message10?: string;
  message11?: string;
  message12?: string;
  message13?: string;
  message14?: string;
  message15?: string;
  message16?: string;
  state?: number;
  priority?: number;
  resolutionTime?: Date;
  taskFileAttachment?: string;
  reservedInt1?: number;
  reservedString1?: string;
}

/**
 * @class
 * Initializes a new instance of the InsertTaskRequestModel class.
 * @constructor
 * Model for POST Task input parameters.
 *
 * @member {number} [queueID] Gets or sets the queue identifier.
 * @member {number} [drawerID] Gets or sets the drawer identifier.
 * @member {number} [objectID] Gets or sets the object identifier (entity).
 * @member {number} [objectType] Gets or sets the type of the object (entity).
 * @member {number} [prevQueueID] Gets or sets the previous queue identifier.
 * @member {number} [nextQueueID] Gets or sets the next queue identifier.
 * @member {number} [addressID] Gets or sets the address identifier.
 * @member {string} [description] Gets or sets the description of the task.
 * @member {string} [message1] Gets or sets message 1.
 * @member {string} [message2] Gets or sets message 2.
 * @member {string} [message3] Gets or sets message 3.
 * @member {string} [message4] Gets or sets message 4.
 * @member {string} [message5] Gets or sets message5.
 * @member {string} [message6] Gets or sets message 6.
 * @member {string} [message7] Gets or sets message 7.
 * @member {string} [message8] Gets or sets message 8.
 * @member {string} [message9] Gets or sets message 9.
 * @member {string} [message10] Gets or sets message 10.
 * @member {string} [message11] Gets or sets message 11.
 * @member {string} [message12] Gets or sets message 12.
 * @member {string} [message13] Gets or sets message 13.
 * @member {string} [message14] Gets or sets message 14.
 * @member {string} [message15] Gets or sets message 15.
 * @member {string} [message16] Gets or sets message 16.
 * @member {number} [state] Gets or sets the task state.
 * @member {number} [priority] Gets or sets the task priority.
 * @member {date} [resolutionTime] Gets or sets the task resolution time.
 * @member {string} [taskFileAttachment] Gets or sets the task file attachment
 * name.
 * @member {number} [reservedInt1] Gets or sets reserved integer 1.
 * @member {string} [reservedString1] Gets or sets reserved string 1.
 */
export interface InsertTaskRequestModel {
  queueID?: number;
  drawerID?: number;
  objectID?: number;
  objectType?: number;
  prevQueueID?: number;
  nextQueueID?: number;
  addressID?: number;
  description?: string;
  message1?: string;
  message2?: string;
  message3?: string;
  message4?: string;
  message5?: string;
  message6?: string;
  message7?: string;
  message8?: string;
  message9?: string;
  message10?: string;
  message11?: string;
  message12?: string;
  message13?: string;
  message14?: string;
  message15?: string;
  message16?: string;
  state?: number;
  priority?: number;
  resolutionTime?: Date;
  taskFileAttachment?: string;
  reservedInt1?: number;
  reservedString1?: string;
}

/**
 * @class
 * Initializes a new instance of the TaskBase class.
 * @constructor
 * The task base class, also used as the model for updating tasks.
 *
 * @member {number} [addressID] Gets or sets the address identifier.
 * @member {string} [description] Gets or sets the description of the task.
 * @member {string} [message1] Gets or sets message 1.
 * @member {string} [message2] Gets or sets message 2.
 * @member {string} [message3] Gets or sets message 3.
 * @member {string} [message4] Gets or sets message 4.
 * @member {string} [message5] Gets or sets message5.
 * @member {string} [message6] Gets or sets message 6.
 * @member {string} [message7] Gets or sets message 7.
 * @member {string} [message8] Gets or sets message 8.
 * @member {string} [message9] Gets or sets message 9.
 * @member {string} [message10] Gets or sets message 10.
 * @member {string} [message11] Gets or sets message 11.
 * @member {string} [message12] Gets or sets message 12.
 * @member {string} [message13] Gets or sets message 13.
 * @member {string} [message14] Gets or sets message 14.
 * @member {string} [message15] Gets or sets message 15.
 * @member {string} [message16] Gets or sets message 16.
 * @member {number} [state] Gets or sets the task state.
 * @member {number} [priority] Gets or sets the task priority.
 * @member {date} [resolutionTime] Gets or sets the task resolution time.
 * @member {string} [taskFileAttachment] Gets or sets the task file attachment
 * name.
 * @member {number} [reservedInt1] Gets or sets reserved integer 1.
 * @member {string} [reservedString1] Gets or sets reserved string 1.
 */
export interface TaskBase {
  addressID?: number;
  description?: string;
  message1?: string;
  message2?: string;
  message3?: string;
  message4?: string;
  message5?: string;
  message6?: string;
  message7?: string;
  message8?: string;
  message9?: string;
  message10?: string;
  message11?: string;
  message12?: string;
  message13?: string;
  message14?: string;
  message15?: string;
  message16?: string;
  state?: number;
  priority?: number;
  resolutionTime?: Date;
  taskFileAttachment?: string;
  reservedInt1?: number;
  reservedString1?: string;
}

/**
 * @class
 * Initializes a new instance of the GetUserRequestModel class.
 * @constructor
 * Model for the GET User input parameters
 *
 * @member {number} [id] Gets or sets the identifier.
 * @member {number} [primaryGroupID] Gets or sets the primary group identifier.
 * @member {number} [groupID] Gets or sets the group identifier.
 * @member {string} [groupName] Gets or sets the name of the group.
 * @member {string} [username] Gets or sets the username.
 * @member {string} [type] Gets or sets the type. Possible values include:
 * 'ImageDesk', 'PublishDesk', 'FaxDesk', 'CaptureDesk', 'RecognitionDesk',
 * 'PortalUser', 'AdminDesk', 'WorkflowDesk', 'Benchmark', 'ReportDesk',
 * 'ColdDesk', 'PortalDesk', 'WorkflowArchitect', 'DocumentDesk', 'Poweruser'
 * @member {string} [state] Gets or sets the state. Possible values include:
 * 'Active', 'Inactive'
 * @member {string} [fullName] Gets or sets the full name.
 * @member {number} [page] Gets or sets the page number.
 * @member {number} [pageSize] Gets or sets the size of the page.
 * @member {string} [sortOrder] Gets or sets the order. Possible values
 * include: 'Unspecified', 'Ascending', 'Descending'
 * @member {string} [sortBy] Gets or sets the column to order by. Possible
 * values include: 'ID', 'PrimaryGroupID', 'Username', 'UserFullName', 'Type',
 * 'State'
 */
export interface GetUserRequestModel {
  id?: number;
  primaryGroupID?: number;
  groupID?: number;
  groupName?: string;
  username?: string;
  type?: string;
  state?: string;
  fullName?: string;
  page?: number;
  pageSize?: number;
  sortOrder?: string;
  sortBy?: string;
}

/**
 * @class
 * Initializes a new instance of the UserModel class.
 * @constructor
 * The model that is sent in response to a GET request for Users
 *
 * @member {number} [id] Gets or sets the identifier.
 * @member {string} [username] Gets or sets the username.
 * @member {number} [loginCount] Gets or sets the login count.
 * @member {number} [drawerCount] Gets or sets the drawer count.
 * @member {number} [groupCount] Gets or sets the group count.
 * @member {number} [queueCount] Gets or sets the queue count.
 * @member {number} [loginTime] Gets or sets the login time.
 * @member {date} [lastLogin] Gets or sets the last login.
 * @member {number} [primaryGroupID] Gets or sets the primary group identifier.
 * @member {string} [type] Gets or sets the type. Possible values include:
 * 'ImageDesk', 'PublishDesk', 'FaxDesk', 'CaptureDesk', 'RecognitionDesk',
 * 'PortalUser', 'AdminDesk', 'WorkflowDesk', 'Benchmark', 'ReportDesk',
 * 'ColdDesk', 'PortalDesk', 'WorkflowArchitect', 'DocumentDesk', 'Poweruser'
 * @member {string} [state] Gets or sets the state. Possible values include:
 * 'Active', 'Inactive'
 * @member {string} [fullName] Gets or sets the full name.
 * @member {number} [objectCount] Gets or sets the object count.
 * @member {string} [iPAddress] Gets or sets the ip address.
 * @member {number} [entityAcl] Gets or sets the entity acl.
 * @member {number} [attachmentAcl] Gets or sets the attachment acl.
 * @member {number} [noteAcl] Gets or sets the note acl.
 * @member {number} [entityFeature] Gets or sets the entity feature.
 * @member {number} [attachmentFeature] Gets or sets the attachment feature.
 * @member {number} [noteFeature] Gets or sets the note feature.
 * @member {string} [adminMask] Gets or sets the admin mask. Possible values
 * include: 'None', 'CabinetAdmin', 'DrawerAdmin', 'GroupAdmin', 'UserAdmin',
 * 'WorkflowAdmin', 'VersionAdmin', 'TemplateAdmin', 'ApplicationAdmin'
 * @member {string} [address] Gets or sets the address.
 * @member {number} [reservedInt1] Gets or sets the reserved int1.
 * @member {number} [reservedInt2] Gets or sets the reserved int2.
 * @member {number} [reservedDouble1] Gets or sets the reserved double1.
 * @member {number} [reservedDouble2] Gets or sets the reserved double2.
 * @member {string} [reservedString1] Gets or sets the reserved string1.
 * @member {string} [reservedString2] Gets or sets the reserved string2.
 * @member {date} [userExpiration] Gets or sets the user expiration.
 */
export interface UserModel {
  id?: number;
  username?: string;
  loginCount?: number;
  drawerCount?: number;
  groupCount?: number;
  queueCount?: number;
  loginTime?: number;
  lastLogin?: Date;
  primaryGroupID?: number;
  type?: string;
  state?: string;
  fullName?: string;
  objectCount?: number;
  iPAddress?: string;
  entityAcl?: number;
  attachmentAcl?: number;
  noteAcl?: number;
  entityFeature?: number;
  attachmentFeature?: number;
  noteFeature?: number;
  adminMask?: string;
  address?: string;
  reservedInt1?: number;
  reservedInt2?: number;
  reservedDouble1?: number;
  reservedDouble2?: number;
  reservedString1?: string;
  reservedString2?: string;
  userExpiration?: Date;
}

/**
 * @class
 * Initializes a new instance of the InsertUserRequestModel class.
 * @constructor
 * Model for POST User input parameters.
 *
 * @member {string} username Gets or sets the username.
 * @member {string} [state] Gets or sets the state. Possible values include:
 * 'Active', 'Inactive'
 * @member {string} [type] Gets or sets the type. Possible values include:
 * 'ImageDesk', 'PublishDesk', 'FaxDesk', 'CaptureDesk', 'RecognitionDesk',
 * 'PortalUser', 'AdminDesk', 'WorkflowDesk', 'Benchmark', 'ReportDesk',
 * 'ColdDesk', 'PortalDesk', 'WorkflowArchitect', 'DocumentDesk', 'Poweruser'
 * @member {string} fullName Gets or sets the full name.
 * @member {string} iPAddress Gets or sets the ip address.
 * @member {number} [entityAcl] Gets or sets the entity acl.
 * @member {number} [attachmentAcl] Gets or sets the attachment acl.
 * @member {number} [noteAcl] Gets or sets the note acl.
 * @member {number} [entityFeature] Gets or sets the entity feature.
 * @member {number} [attachmentFeature] Gets or sets the attachment feature.
 * @member {number} [noteFeature] Gets or sets the note feature.
 * @member {string} [adminMask] Gets or sets the admin mask. Possible values
 * include: 'None', 'CabinetAdmin', 'DrawerAdmin', 'GroupAdmin', 'UserAdmin',
 * 'WorkflowAdmin', 'VersionAdmin', 'TemplateAdmin', 'ApplicationAdmin'
 * @member {string} [address] Gets or sets the address.
 */
export interface InsertUserRequestModel {
  username: string;
  state?: string;
  type?: string;
  fullName: string;
  iPAddress: string;
  entityAcl?: number;
  attachmentAcl?: number;
  noteAcl?: number;
  entityFeature?: number;
  attachmentFeature?: number;
  noteFeature?: number;
  adminMask?: string;
  address?: string;
}

/**
 * @class
 * Initializes a new instance of the UserBase class.
 * @constructor
 * The UserBase Class.
 *
 * @member {number} [primaryGroupID] Gets or sets the primary group identifier.
 * @member {string} [type] Gets or sets the type. Possible values include:
 * 'ImageDesk', 'PublishDesk', 'FaxDesk', 'CaptureDesk', 'RecognitionDesk',
 * 'PortalUser', 'AdminDesk', 'WorkflowDesk', 'Benchmark', 'ReportDesk',
 * 'ColdDesk', 'PortalDesk', 'WorkflowArchitect', 'DocumentDesk', 'Poweruser'
 * @member {string} [state] Gets or sets the state. Possible values include:
 * 'Active', 'Inactive'
 * @member {string} [fullName] Gets or sets the full name.
 * @member {number} [objectCount] Gets or sets the object count.
 * @member {string} [iPAddress] Gets or sets the ip address.
 * @member {number} [entityAcl] Gets or sets the entity acl.
 * @member {number} [attachmentAcl] Gets or sets the attachment acl.
 * @member {number} [noteAcl] Gets or sets the note acl.
 * @member {number} [entityFeature] Gets or sets the entity feature.
 * @member {number} [attachmentFeature] Gets or sets the attachment feature.
 * @member {number} [noteFeature] Gets or sets the note feature.
 * @member {string} [adminMask] Gets or sets the admin mask. Possible values
 * include: 'None', 'CabinetAdmin', 'DrawerAdmin', 'GroupAdmin', 'UserAdmin',
 * 'WorkflowAdmin', 'VersionAdmin', 'TemplateAdmin', 'ApplicationAdmin'
 * @member {string} [address] Gets or sets the address.
 * @member {number} [reservedInt1] Gets or sets the reserved int1.
 * @member {number} [reservedInt2] Gets or sets the reserved int2.
 * @member {number} [reservedDouble1] Gets or sets the reserved double1.
 * @member {number} [reservedDouble2] Gets or sets the reserved double2.
 * @member {string} [reservedString1] Gets or sets the reserved string1.
 * @member {string} [reservedString2] Gets or sets the reserved string2.
 * @member {date} [userExpiration] Gets or sets the user expiration.
 */
export interface UserBase {
  primaryGroupID?: number;
  type?: string;
  state?: string;
  fullName?: string;
  objectCount?: number;
  iPAddress?: string;
  entityAcl?: number;
  attachmentAcl?: number;
  noteAcl?: number;
  entityFeature?: number;
  attachmentFeature?: number;
  noteFeature?: number;
  adminMask?: string;
  address?: string;
  reservedInt1?: number;
  reservedInt2?: number;
  reservedDouble1?: number;
  reservedDouble2?: number;
  reservedString1?: string;
  reservedString2?: string;
  userExpiration?: Date;
}

/**
 * @class
 * Initializes a new instance of the GetWorkflowModel class.
 * @constructor
 * Model for the GET Workflow input parameters
 *
 * @member {number} [applicationID] Gets or sets the application identifier.
 * @member {number} [entityType] Gets or sets the type of the entity.
 * @member {string} [name] Gets or sets the name.
 * @member {number} [page] Gets or sets the page number.
 * @member {number} [pageSize] Gets or sets the size of the page.
 * @member {string} [sortOrder] Gets or sets the order. Possible values
 * include: 'Unspecified', 'Ascending', 'Descending'
 * @member {number} [sortBy] Gets or sets the column to order by.
 */
export interface GetWorkflowModel {
  applicationID?: number;
  entityType?: number;
  name?: string;
  page?: number;
  pageSize?: number;
  sortOrder?: string;
  sortBy?: number;
}

/**
 * @class
 * Initializes a new instance of the WorkflowModel class.
 * @constructor
 * The model that is sent in response to a GET request for Workflow
 *
 * @member {number} [id] Gets or sets the identifier.
 * @member {string} [name] Gets or sets the name.
 * @member {number} [entityType] Gets or sets the type of the entity.
 * @member {string} [alias] Gets or sets the alias.
 */
export interface WorkflowModel {
  id?: number;
  name?: string;
  entityType?: number;
  alias?: string;
}

/**
 * @class
 * Initializes a new instance of the WorkflowQueueModel class.
 * @constructor
 * Defines properties and methods for workflow queues
 *
 * @member {string} [workflowType] Gets or sets the type of the workflow.
 * Possible values include: 'Uncategorized', 'Auto', 'StraightThrough',
 * 'Exception', 'Holding', 'Any'
 * @member {number} [index] Gets or sets the index.
 * @member {number} [subIndex] Gets or sets the subindex.
 * @member {number} [id] Gets or sets the identifier.
 * @member {number} [userCount] Gets or sets the user count.
 * @member {number} [taskCount] Gets or sets the task count.
 * @member {string} [name] Gets or sets the name.
 * @member {string} [alias] Gets or sets the alias.
 * @member {string} [state] Gets or sets the state. Possible values include:
 * 'Inactive', 'Active'
 * @member {string} [type] Gets or sets the type. Possible values include:
 * 'Inbound', 'Outbound', 'Access', 'Any', 'Shared', 'Public', 'Recycle',
 * 'Fax', 'Print', 'Scan', 'Ocr', 'Workflow', 'Schedule', 'System', 'Other',
 * 'CdoInfostore', 'CdoFolder'
 * @member {string} [category] Gets or sets the category.
 * @member {string} [description] Gets or sets the description.
 * @member {number} [reservedInt1] Gets or sets the reserved integer 1.
 * @member {number} [reservedInt2] Gets or sets the reserved integer 2.
 * @member {string} [reservedString1] Gets or sets the reserved string 1.
 * @member {string} [reservedString2] Gets or sets the reserved string 2.
 */
export interface WorkflowQueueModel {
  workflowType?: string;
  index?: number;
  subIndex?: number;
  id?: number;
  userCount?: number;
  taskCount?: number;
  name?: string;
  alias?: string;
  state?: string;
  type?: string;
  category?: string;
  description?: string;
  reservedInt1?: number;
  reservedInt2?: number;
  reservedString1?: string;
  reservedString2?: string;
}
