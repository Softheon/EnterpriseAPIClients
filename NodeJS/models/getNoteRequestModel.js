/*
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

/**
 * Model for the GET Note input parameters
 *
 */
class GetNoteRequestModel {
  /**
   * Create a GetNoteRequestModel.
   * @member {number} drawerID Gets or sets the drawer identifier.
   * @member {number} [entityID] Gets or sets the entity identifier.
   * @member {string} [name] Gets or sets the name.
   * @member {number} [creatorUserID] Gets or sets the creator user identifier.
   * @member {number} [modifierUserID] Gets or sets the modifier user
   * identifier.
   * @member {date} [minCreationTime] Gets or sets the minimum creation time.
   * @member {date} [maxCreationTime] Gets or sets the maximum creation time.
   * @member {date} [minModificationTime] Gets or sets the minimum modification
   * time.
   * @member {date} [maxModificationTime] Gets or sets the maximum modification
   * time.
   * @member {number} [parentID] Gets or sets the parent note identifier.
   * @member {number} [page] Gets or sets the page number.
   * @member {number} [pageSize] Gets or sets the size of the page.
   * @member {string} [sortOrder] Gets or sets the order. Possible values
   * include: 'Unspecified', 'Ascending', 'Descending'
   * @member {string} [sortBy] Gets or sets the column to order by. Possible
   * values include: 'ID', 'EntityID', 'Name', 'CreationTime',
   * 'ModificationTime'
   */
  constructor() {
  }

  /**
   * Defines the metadata of GetNoteRequestModel
   *
   * @returns {object} metadata of GetNoteRequestModel
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'GetNoteRequestModel',
      type: {
        name: 'Composite',
        className: 'GetNoteRequestModel',
        modelProperties: {
          drawerID: {
            required: true,
            serializedName: 'DrawerID',
            constraints: {
              InclusiveMaximum: 2147483647,
              InclusiveMinimum: 1
            },
            type: {
              name: 'Number'
            }
          },
          entityID: {
            required: false,
            serializedName: 'EntityID',
            constraints: {
              InclusiveMaximum: 2147483647,
              InclusiveMinimum: 1
            },
            type: {
              name: 'Number'
            }
          },
          name: {
            required: false,
            serializedName: 'Name',
            constraints: {
              MaxLength: 255,
              MinLength: 0
            },
            type: {
              name: 'String'
            }
          },
          creatorUserID: {
            required: false,
            serializedName: 'CreatorUserID',
            constraints: {
              InclusiveMaximum: 2147483647,
              InclusiveMinimum: 1
            },
            type: {
              name: 'Number'
            }
          },
          modifierUserID: {
            required: false,
            serializedName: 'ModifierUserID',
            constraints: {
              InclusiveMaximum: 2147483647,
              InclusiveMinimum: 1
            },
            type: {
              name: 'Number'
            }
          },
          minCreationTime: {
            required: false,
            serializedName: 'MinCreationTime',
            type: {
              name: 'DateTime'
            }
          },
          maxCreationTime: {
            required: false,
            serializedName: 'MaxCreationTime',
            type: {
              name: 'DateTime'
            }
          },
          minModificationTime: {
            required: false,
            serializedName: 'MinModificationTime',
            type: {
              name: 'DateTime'
            }
          },
          maxModificationTime: {
            required: false,
            serializedName: 'MaxModificationTime',
            type: {
              name: 'DateTime'
            }
          },
          parentID: {
            required: false,
            serializedName: 'ParentID',
            constraints: {
              InclusiveMaximum: 2147483647,
              InclusiveMinimum: 1
            },
            type: {
              name: 'Number'
            }
          },
          page: {
            required: false,
            serializedName: 'Page',
            constraints: {
              InclusiveMaximum: 2147483647,
              InclusiveMinimum: 1
            },
            type: {
              name: 'Number'
            }
          },
          pageSize: {
            required: false,
            serializedName: 'PageSize',
            constraints: {
              InclusiveMaximum: 1000,
              InclusiveMinimum: 1
            },
            type: {
              name: 'Number'
            }
          },
          sortOrder: {
            required: false,
            serializedName: 'SortOrder',
            type: {
              name: 'String'
            }
          },
          sortBy: {
            required: false,
            serializedName: 'SortBy',
            type: {
              name: 'String'
            }
          }
        }
      }
    };
  }
}

module.exports = GetNoteRequestModel;
