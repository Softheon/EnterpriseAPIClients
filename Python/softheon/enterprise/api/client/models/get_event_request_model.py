# coding=utf-8
# --------------------------------------------------------------------------
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------

from msrest.serialization import Model


class GetEventRequestModel(Model):
    """Model for the GET Event input parameters.

    :param drawer_id: Gets or sets the drawer identifier.
    :type drawer_id: int
    :param entity_id: Gets or sets the entity identifier.
    :type entity_id: int
    :param type: Gets or sets the type. Possible values include: 'Undefined',
     'Fatal', 'Warning', 'Info', 'Debug', 'Process', 'RPC', 'SQL', 'DDE'
    :type type: str or ~softheon.enterprise.api.client.models.enum
    :param min_event_time: Gets or sets the minimum event time.
    :type min_event_time: datetime
    :param max_event_time: Gets or sets the maximum event time.
    :type max_event_time: datetime
    :param event_user_id: Gets or sets the event user identifier.
    :type event_user_id: int
    :param event_group_id: Gets or sets the event group identifier.
    :type event_group_id: int
    :param category: Gets or sets the category. Possible values include:
     'Undefined', 'Entity', 'Profile', 'Attachment', 'Discussion', 'Field',
     'Workflow'
    :type category: str or ~softheon.enterprise.api.client.models.enum
    :param class_property: Gets or sets the class. Possible values include:
     'Undefined', 'Application', 'Security', 'System'
    :type class_property: str or ~softheon.enterprise.api.client.models.enum
    :param operation: Gets or sets the operation. Possible values include:
     'Undefined', 'Insert', 'Update', 'Delete', 'Copy', 'Lock', 'Unlock',
     'Open', 'Close', 'Checkout', 'Checkin', 'View', 'Merge', 'Split',
     'Classify', 'Null', 'OpenWF', 'Remove', 'ReturnToTop', 'ReturnToBottom',
     'Accept', 'Suspend', 'Reject', 'Route', 'Forward', 'Reply', 'Reassign',
     'Reset', 'Override', 'Rollback', 'Archive'
    :type operation: str or ~softheon.enterprise.api.client.models.enum
    :param min_processing_time: Gets or sets the minimum processing time.
    :type min_processing_time: int
    :param max_processing_time: Gets or sets the maximum processing time.
    :type max_processing_time: int
    :param page: Gets or sets the page number.
    :type page: int
    :param page_size: Gets or sets the size of the page.
    :type page_size: int
    :param sort_order: Gets or sets the order. Possible values include:
     'Unspecified', 'Ascending', 'Descending'
    :type sort_order: str or ~softheon.enterprise.api.client.models.enum
    :param sort_by: Gets or sets the column to order by. Possible values
     include: 'ID', 'Type', 'EventTime'
    :type sort_by: str or ~softheon.enterprise.api.client.models.enum
    """

    _validation = {
        'drawer_id': {'required': True, 'maximum': 2147483647, 'minimum': 1},
        'entity_id': {'required': True, 'maximum': 2147483647, 'minimum': 1},
        'event_user_id': {'maximum': 2147483647, 'minimum': 1},
        'event_group_id': {'maximum': 2147483647, 'minimum': 1},
        'page': {'maximum': 2147483647, 'minimum': 1},
        'page_size': {'maximum': 1000, 'minimum': 1},
    }

    _attribute_map = {
        'drawer_id': {'key': 'DrawerID', 'type': 'int'},
        'entity_id': {'key': 'EntityID', 'type': 'int'},
        'type': {'key': 'Type', 'type': 'str'},
        'min_event_time': {'key': 'MinEventTime', 'type': 'iso-8601'},
        'max_event_time': {'key': 'MaxEventTime', 'type': 'iso-8601'},
        'event_user_id': {'key': 'EventUserID', 'type': 'int'},
        'event_group_id': {'key': 'EventGroupID', 'type': 'int'},
        'category': {'key': 'Category', 'type': 'str'},
        'class_property': {'key': 'Class', 'type': 'str'},
        'operation': {'key': 'Operation', 'type': 'str'},
        'min_processing_time': {'key': 'MinProcessingTime', 'type': 'int'},
        'max_processing_time': {'key': 'MaxProcessingTime', 'type': 'int'},
        'page': {'key': 'Page', 'type': 'int'},
        'page_size': {'key': 'PageSize', 'type': 'int'},
        'sort_order': {'key': 'SortOrder', 'type': 'str'},
        'sort_by': {'key': 'SortBy', 'type': 'str'},
    }

    def __init__(self, drawer_id, entity_id, type=None, min_event_time=None, max_event_time=None, event_user_id=None, event_group_id=None, category=None, class_property=None, operation=None, min_processing_time=None, max_processing_time=None, page=None, page_size=None, sort_order=None, sort_by=None):
        super(GetEventRequestModel, self).__init__()
        self.drawer_id = drawer_id
        self.entity_id = entity_id
        self.type = type
        self.min_event_time = min_event_time
        self.max_event_time = max_event_time
        self.event_user_id = event_user_id
        self.event_group_id = event_group_id
        self.category = category
        self.class_property = class_property
        self.operation = operation
        self.min_processing_time = min_processing_time
        self.max_processing_time = max_processing_time
        self.page = page
        self.page_size = page_size
        self.sort_order = sort_order
        self.sort_by = sort_by
