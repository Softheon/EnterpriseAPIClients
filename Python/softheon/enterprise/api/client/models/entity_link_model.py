# coding=utf-8
# --------------------------------------------------------------------------
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------

from msrest.serialization import Model


class EntityLinkModel(Model):
    """The model that is sent in response to a GET request for Link.

    :param child_drawer_id: Gets or sets the child drawer identifier.
    :type child_drawer_id: int
    :param child_entity_id: Gets or sets the child entity identifier.
    :type child_entity_id: int
    :param child_type: Gets or sets the type of the child.
    :type child_type: int
    :param virtual_name: Gets or sets the name of the virtual.
    :type virtual_name: str
    :param id: Gets or sets the identifier.
    :type id: int
    :param drawer_id: Gets or sets the drawer identifier.
    :type drawer_id: int
    :param entity_id: Gets or sets the entity identifier.
    :type entity_id: int
    :param owner_user_id: Gets or sets the owner user identifier.
    :type owner_user_id: int
    :param owner_user_full_name: Gets or sets the full name of the owner user.
    :type owner_user_full_name: str
    :param owner_group_id: Gets or sets the owner group identifier.
    :type owner_group_id: int
    :param owner_group_name: Gets or sets the name of the owner group.
    :type owner_group_name: str
    :param includer_user_id: Gets or sets the includer user identifier.
    :type includer_user_id: int
    :param includer_user_full_name: Gets or sets the full name of the includer
     user.
    :type includer_user_full_name: str
    :param modifier_user_id: Gets or sets the modifier user identifier.
    :type modifier_user_id: int
    :param modifier_user_full_name: Gets or sets the full name of the modifier
     user.
    :type modifier_user_full_name: str
    :param insertion_time: Gets or sets the insertion time.
    :type insertion_time: datetime
    :param modification_time: Gets or sets the modification time.
    :type modification_time: datetime
    :param class_property: Gets or sets the class.
    :type class_property: int
    :param name: Gets or sets the name.
    :type name: str
    :param acl: Gets or sets the acl.
    :type acl: int
    :param page_number: Gets or sets the page number.
    :type page_number: int
    :param state: Gets or sets the state. Possible values include:
     'Undefined', 'MaxStates', 'Reserved', 'UserDefined', 'Dynamic', 'Static',
     'New', 'CheckedOut', 'Internal', 'Statres5', 'Linked', 'Statres4',
     'Statres3', 'Statres2', 'Statres1', 'Locked', 'OnServerCache',
     'OnClientCache', 'Fetching', 'Dynres4', 'Dynres3', 'Dynres2', 'Dynres1',
     'User1', 'User2', 'User3', 'User4', 'User5', 'User6', 'User7', 'User8',
     'User9', 'User10', 'User11', 'User12', 'User13', 'User14', 'User15',
     'User16'
    :type state: str or ~softheon.enterprise.api.client.models.enum
    :param note: Gets or sets the note.
    :type note: str
    """

    _validation = {
        'name': {'max_length': 255, 'min_length': 0},
        'page_number': {'maximum': 2147483647, 'minimum': 0},
        'note': {'max_length': 255, 'min_length': 0},
    }

    _attribute_map = {
        'child_drawer_id': {'key': 'ChildDrawerID', 'type': 'int'},
        'child_entity_id': {'key': 'ChildEntityID', 'type': 'int'},
        'child_type': {'key': 'ChildType', 'type': 'int'},
        'virtual_name': {'key': 'VirtualName', 'type': 'str'},
        'id': {'key': 'ID', 'type': 'int'},
        'drawer_id': {'key': 'DrawerID', 'type': 'int'},
        'entity_id': {'key': 'EntityID', 'type': 'int'},
        'owner_user_id': {'key': 'OwnerUserID', 'type': 'int'},
        'owner_user_full_name': {'key': 'OwnerUserFullName', 'type': 'str'},
        'owner_group_id': {'key': 'OwnerGroupID', 'type': 'int'},
        'owner_group_name': {'key': 'OwnerGroupName', 'type': 'str'},
        'includer_user_id': {'key': 'IncluderUserID', 'type': 'int'},
        'includer_user_full_name': {'key': 'IncluderUserFullName', 'type': 'str'},
        'modifier_user_id': {'key': 'ModifierUserID', 'type': 'int'},
        'modifier_user_full_name': {'key': 'ModifierUserFullName', 'type': 'str'},
        'insertion_time': {'key': 'InsertionTime', 'type': 'iso-8601'},
        'modification_time': {'key': 'ModificationTime', 'type': 'iso-8601'},
        'class_property': {'key': 'Class', 'type': 'int'},
        'name': {'key': 'Name', 'type': 'str'},
        'acl': {'key': 'Acl', 'type': 'int'},
        'page_number': {'key': 'PageNumber', 'type': 'int'},
        'state': {'key': 'State', 'type': 'str'},
        'note': {'key': 'Note', 'type': 'str'},
    }

    def __init__(self, child_drawer_id=None, child_entity_id=None, child_type=None, virtual_name=None, id=None, drawer_id=None, entity_id=None, owner_user_id=None, owner_user_full_name=None, owner_group_id=None, owner_group_name=None, includer_user_id=None, includer_user_full_name=None, modifier_user_id=None, modifier_user_full_name=None, insertion_time=None, modification_time=None, class_property=None, name=None, acl=None, page_number=None, state=None, note=None):
        super(EntityLinkModel, self).__init__()
        self.child_drawer_id = child_drawer_id
        self.child_entity_id = child_entity_id
        self.child_type = child_type
        self.virtual_name = virtual_name
        self.id = id
        self.drawer_id = drawer_id
        self.entity_id = entity_id
        self.owner_user_id = owner_user_id
        self.owner_user_full_name = owner_user_full_name
        self.owner_group_id = owner_group_id
        self.owner_group_name = owner_group_name
        self.includer_user_id = includer_user_id
        self.includer_user_full_name = includer_user_full_name
        self.modifier_user_id = modifier_user_id
        self.modifier_user_full_name = modifier_user_full_name
        self.insertion_time = insertion_time
        self.modification_time = modification_time
        self.class_property = class_property
        self.name = name
        self.acl = acl
        self.page_number = page_number
        self.state = state
        self.note = note
