# coding=utf-8
# --------------------------------------------------------------------------
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------

from msrest.serialization import Model


class GetTaskModel(Model):
    """Model for the GET Task input parameters.

    :param last_task_id: Gets or sets the last task identifier.
    :type last_task_id: int
    :param id: Gets or sets the entity identifier.
    :type id: int
    :param type: Gets or sets the type of the entity.
    :type type: int
    :param queue_id: Gets or sets the queue identifier.
    :type queue_id: int
    :param queue_type: Gets or sets the type of the queue.
    :type queue_type: int
    :param drawer_id: Gets or sets the drawer identifier.
    :type drawer_id: int
    :param description: Gets or sets the task description.
    :type description: str
    :param task_id: Gets or sets the task identifier.
    :type task_id: int
    :param page: Gets or sets the page number.
    :type page: int
    :param page_size: Gets or sets the size of the page.
    :type page_size: int
    :param sort_order: Gets or sets the order. Possible values include:
     'Unspecified', 'Ascending', 'Descending'
    :type sort_order: str or ~softheon.enterprise.api.client.models.enum
    :param sort_by: Gets or sets the column to order by. Possible values
     include: 'TaskID', 'QueueID', 'ObjectID', 'Priority', 'Description',
     'InsertionTime', 'ResolutionTime', 'ReservedInt1'
    :type sort_by: str or ~softheon.enterprise.api.client.models.enum
    """

    _validation = {
        'last_task_id': {'maximum': 2147483647, 'minimum': 0},
        'id': {'maximum': 2147483647, 'minimum': 1},
        'queue_type': {'maximum': 2147483647, 'minimum': 1},
        'drawer_id': {'maximum': 2147483647, 'minimum': 1},
        'description': {'max_length': 255, 'min_length': 0},
        'page': {'maximum': 2147483647, 'minimum': 1},
        'page_size': {'maximum': 1000, 'minimum': 1},
    }

    _attribute_map = {
        'last_task_id': {'key': 'LastTaskID', 'type': 'int'},
        'id': {'key': 'ID', 'type': 'int'},
        'type': {'key': 'Type', 'type': 'int'},
        'queue_id': {'key': 'QueueID', 'type': 'int'},
        'queue_type': {'key': 'QueueType', 'type': 'int'},
        'drawer_id': {'key': 'DrawerID', 'type': 'int'},
        'description': {'key': 'Description', 'type': 'str'},
        'task_id': {'key': 'TaskID', 'type': 'int'},
        'page': {'key': 'Page', 'type': 'int'},
        'page_size': {'key': 'PageSize', 'type': 'int'},
        'sort_order': {'key': 'SortOrder', 'type': 'str'},
        'sort_by': {'key': 'SortBy', 'type': 'str'},
    }

    def __init__(self, last_task_id=None, id=None, type=None, queue_id=None, queue_type=None, drawer_id=None, description=None, task_id=None, page=None, page_size=None, sort_order=None, sort_by=None):
        super(GetTaskModel, self).__init__()
        self.last_task_id = last_task_id
        self.id = id
        self.type = type
        self.queue_id = queue_id
        self.queue_type = queue_type
        self.drawer_id = drawer_id
        self.description = description
        self.task_id = task_id
        self.page = page
        self.page_size = page_size
        self.sort_order = sort_order
        self.sort_by = sort_by
