# coding=utf-8
# --------------------------------------------------------------------------
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------

from msrest.serialization import Model


class GetFlowRequestModel(Model):
    """Model for the GET Flow input parameters.

    :param drawer_id: Gets or sets the drawer identifier.
    :type drawer_id: int
    :param entity_id: Gets or sets the entity identifier.
    :type entity_id: int
    :param type: Gets or sets the type. Possible values include: 'None',
     'Workflow', 'Fatal', 'Warning', 'Info', 'Debug', 'Process', 'Rpc', 'Sql',
     'Dde'
    :type type: str or ~softheon.enterprise.api.client.models.enum
    :param queue_id: Gets or sets the queue identifier.
    :type queue_id: int
    :param min_workflow_time: Gets or sets the minimum workflow time.
    :type min_workflow_time: datetime
    :param max_workflow_time: Gets or sets the maximum workflow time.
    :type max_workflow_time: datetime
    :param min_insertion_time: Gets or sets the minimum insertion time.
    :type min_insertion_time: datetime
    :param max_insertion_time: Gets or sets the maximum insertion time.
    :type max_insertion_time: datetime
    :param workflow_user_id: Gets or sets the workflow user identifier.
    :type workflow_user_id: int
    :param workflow_group_id: Gets or sets the workflow group identifier.
    :type workflow_group_id: int
    :param operation: Gets or sets the operation. Possible values include:
     'None', 'Update', 'Reset', 'Override', 'Null'
    :type operation: str or ~softheon.enterprise.api.client.models.enum
    :param category: Gets or sets the category. Possible values include:
     'None', 'Direct', 'AdHoc', 'Production', 'Review', 'Reset', 'RoutingSlip',
     'ReviewRoutingSlip', 'Override'
    :type category: str or ~softheon.enterprise.api.client.models.enum
    :param status: Gets or sets the status. Possible values include: 'None',
     'Approved', 'Rejected', 'Suspended', 'ApprovedR', 'NoneR'
    :type status: str or ~softheon.enterprise.api.client.models.enum
    :param state: Gets or sets the state. Possible values include: 'None',
     'Processed', 'Pending', 'Waiting', 'ProcessedR', 'Override', 'OverrideR',
     'WaitingR'
    :type state: str or ~softheon.enterprise.api.client.models.enum
    :param min_index1: Gets or sets the minimum index 1.
    :type min_index1: int
    :param max_index1: Gets or sets the maximum index 1.
    :type max_index1: int
    :param min_index2: Gets or sets the minimum index 2.
    :type min_index2: int
    :param max_index2: Gets or sets the maximum index 2.
    :type max_index2: int
    :param page: Gets or sets the page number.
    :type page: int
    :param page_size: Gets or sets the size of the page.
    :type page_size: int
    :param sort_order: Gets or sets the order. Possible values include:
     'Unspecified', 'Ascending', 'Descending'
    :type sort_order: str or ~softheon.enterprise.api.client.models.enum
    :param sort_by: Gets or sets the column to order by. Possible values
     include: 'ID', 'Type', 'QueueID', 'WorkflowTime', 'InsertionTime', 'Index'
    :type sort_by: str or ~softheon.enterprise.api.client.models.enum
    """

    _validation = {
        'drawer_id': {'required': True, 'maximum': 2147483647, 'minimum': 1},
        'entity_id': {'required': True, 'maximum': 2147483647, 'minimum': 1},
        'queue_id': {'maximum': 2147483647, 'minimum': 1},
        'workflow_user_id': {'maximum': 2147483647, 'minimum': 1},
        'workflow_group_id': {'maximum': 2147483647, 'minimum': 1},
        'page': {'maximum': 2147483647, 'minimum': 1},
        'page_size': {'maximum': 1000, 'minimum': 1},
    }

    _attribute_map = {
        'drawer_id': {'key': 'DrawerID', 'type': 'int'},
        'entity_id': {'key': 'EntityID', 'type': 'int'},
        'type': {'key': 'Type', 'type': 'str'},
        'queue_id': {'key': 'QueueID', 'type': 'int'},
        'min_workflow_time': {'key': 'MinWorkflowTime', 'type': 'iso-8601'},
        'max_workflow_time': {'key': 'MaxWorkflowTime', 'type': 'iso-8601'},
        'min_insertion_time': {'key': 'MinInsertionTime', 'type': 'iso-8601'},
        'max_insertion_time': {'key': 'MaxInsertionTime', 'type': 'iso-8601'},
        'workflow_user_id': {'key': 'WorkflowUserID', 'type': 'int'},
        'workflow_group_id': {'key': 'WorkflowGroupID', 'type': 'int'},
        'operation': {'key': 'Operation', 'type': 'str'},
        'category': {'key': 'Category', 'type': 'str'},
        'status': {'key': 'Status', 'type': 'str'},
        'state': {'key': 'State', 'type': 'str'},
        'min_index1': {'key': 'MinIndex1', 'type': 'int'},
        'max_index1': {'key': 'MaxIndex1', 'type': 'int'},
        'min_index2': {'key': 'MinIndex2', 'type': 'int'},
        'max_index2': {'key': 'MaxIndex2', 'type': 'int'},
        'page': {'key': 'Page', 'type': 'int'},
        'page_size': {'key': 'PageSize', 'type': 'int'},
        'sort_order': {'key': 'SortOrder', 'type': 'str'},
        'sort_by': {'key': 'SortBy', 'type': 'str'},
    }

    def __init__(self, drawer_id, entity_id, type=None, queue_id=None, min_workflow_time=None, max_workflow_time=None, min_insertion_time=None, max_insertion_time=None, workflow_user_id=None, workflow_group_id=None, operation=None, category=None, status=None, state=None, min_index1=None, max_index1=None, min_index2=None, max_index2=None, page=None, page_size=None, sort_order=None, sort_by=None):
        super(GetFlowRequestModel, self).__init__()
        self.drawer_id = drawer_id
        self.entity_id = entity_id
        self.type = type
        self.queue_id = queue_id
        self.min_workflow_time = min_workflow_time
        self.max_workflow_time = max_workflow_time
        self.min_insertion_time = min_insertion_time
        self.max_insertion_time = max_insertion_time
        self.workflow_user_id = workflow_user_id
        self.workflow_group_id = workflow_group_id
        self.operation = operation
        self.category = category
        self.status = status
        self.state = state
        self.min_index1 = min_index1
        self.max_index1 = max_index1
        self.min_index2 = min_index2
        self.max_index2 = max_index2
        self.page = page
        self.page_size = page_size
        self.sort_order = sort_order
        self.sort_by = sort_by
