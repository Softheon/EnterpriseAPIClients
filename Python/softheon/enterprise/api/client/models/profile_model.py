# coding=utf-8
# --------------------------------------------------------------------------
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------

from msrest.serialization import Model


class ProfileModel(Model):
    """The model that is sent in response to a GET request for Entity.

    :param id: Gets or sets the profile identifier.
    :type id: int
    :param acl: Gets or sets the access control list.
    :type acl: int
    :param type: Gets or sets the type.
    :type type: int
    :param extension_count: Gets or sets the extension count.
    :type extension_count: int
    :param owner_user_id: Gets or sets the owner user identifier.
    :type owner_user_id: int
    :param owner_user_full_name: Gets or sets the full name of the owner user.
    :type owner_user_full_name: str
    :param owner_group_id: Gets or sets the owner group identifier.
    :type owner_group_id: int
    :param owner_group_name: Gets or sets the name of the owner group.
    :type owner_group_name: str
    :param modifier_user_id: Gets or sets the modifier user identifier.
    :type modifier_user_id: int
    :param modifier_user_full_name: Gets or sets the full name of the modifier
     user.
    :type modifier_user_full_name: str
    :param modification_time: Gets or sets the modification time.
    :type modification_time: datetime
    :param strings: Gets or sets the strings.
    :type strings: list[str]
    :param integers: Gets or sets the integers.
    :type integers: list[int]
    :param doubles: Gets or sets the doubles.
    :type doubles: list[float]
    :param dates: Gets or sets the dates.
    :type dates: list[datetime]
    :param extensions: Gets or sets the extensions.
    :type extensions:
     list[~softheon.enterprise.api.client.models.ExtensionModel]
    """

    _attribute_map = {
        'id': {'key': 'ID', 'type': 'int'},
        'acl': {'key': 'Acl', 'type': 'int'},
        'type': {'key': 'Type', 'type': 'int'},
        'extension_count': {'key': 'ExtensionCount', 'type': 'int'},
        'owner_user_id': {'key': 'OwnerUserID', 'type': 'int'},
        'owner_user_full_name': {'key': 'OwnerUserFullName', 'type': 'str'},
        'owner_group_id': {'key': 'OwnerGroupID', 'type': 'int'},
        'owner_group_name': {'key': 'OwnerGroupName', 'type': 'str'},
        'modifier_user_id': {'key': 'ModifierUserID', 'type': 'int'},
        'modifier_user_full_name': {'key': 'ModifierUserFullName', 'type': 'str'},
        'modification_time': {'key': 'ModificationTime', 'type': 'iso-8601'},
        'strings': {'key': 'Strings', 'type': '[str]'},
        'integers': {'key': 'Integers', 'type': '[int]'},
        'doubles': {'key': 'Doubles', 'type': '[float]'},
        'dates': {'key': 'Dates', 'type': '[iso-8601]'},
        'extensions': {'key': 'Extensions', 'type': '[ExtensionModel]'},
    }

    def __init__(self, id=None, acl=None, type=None, extension_count=None, owner_user_id=None, owner_user_full_name=None, owner_group_id=None, owner_group_name=None, modifier_user_id=None, modifier_user_full_name=None, modification_time=None, strings=None, integers=None, doubles=None, dates=None, extensions=None):
        super(ProfileModel, self).__init__()
        self.id = id
        self.acl = acl
        self.type = type
        self.extension_count = extension_count
        self.owner_user_id = owner_user_id
        self.owner_user_full_name = owner_user_full_name
        self.owner_group_id = owner_group_id
        self.owner_group_name = owner_group_name
        self.modifier_user_id = modifier_user_id
        self.modifier_user_full_name = modifier_user_full_name
        self.modification_time = modification_time
        self.strings = strings
        self.integers = integers
        self.doubles = doubles
        self.dates = dates
        self.extensions = extensions
