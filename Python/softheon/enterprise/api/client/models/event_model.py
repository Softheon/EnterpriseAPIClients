# coding=utf-8
# --------------------------------------------------------------------------
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------

from msrest.serialization import Model


class EventModel(Model):
    """The model that is sent in response to a GET request for Event.

    :param id: Gets or sets the identifier.
    :type id: int
    :param drawer_id: Gets or sets the drawer identifier.
    :type drawer_id: int
    :param entity_id: Gets or sets the entity identifier.
    :type entity_id: int
    :param type: Gets or sets the type. Possible values include: 'Undefined',
     'Fatal', 'Warning', 'Info', 'Debug', 'Process', 'RPC', 'SQL', 'DDE'
    :type type: str or ~softheon.enterprise.api.client.models.enum
    :param event_time: Gets or sets the event time.
    :type event_time: datetime
    :param event_user_id: Gets or sets the event user identifier.
    :type event_user_id: int
    :param event_user_full_name: Gets or sets the full name of the event user.
    :type event_user_full_name: str
    :param event_group_id: Gets or sets the event group identifier.
    :type event_group_id: int
    :param event_group_name: Gets or sets the name of the event group.
    :type event_group_name: str
    :param category: Gets or sets the category. Possible values include:
     'Undefined', 'Entity', 'Profile', 'Attachment', 'Discussion', 'Field',
     'Workflow'
    :type category: str or ~softheon.enterprise.api.client.models.enum
    :param class_property: Gets or sets the class. Possible values include:
     'Undefined', 'Application', 'Security', 'System'
    :type class_property: str or ~softheon.enterprise.api.client.models.enum
    :param operation: Gets or sets the operation. Possible values include:
     'Undefined', 'Insert', 'Update', 'Delete', 'Copy', 'Lock', 'Unlock',
     'Open', 'Close', 'Checkout', 'Checkin', 'View', 'Merge', 'Split',
     'Classify', 'Null', 'OpenWF', 'Remove', 'ReturnToTop', 'ReturnToBottom',
     'Accept', 'Suspend', 'Reject', 'Route', 'Forward', 'Reply', 'Reassign',
     'Reset', 'Override', 'Rollback', 'Archive'
    :type operation: str or ~softheon.enterprise.api.client.models.enum
    :param source: Gets or sets the source.
    :type source: str
    :param computer: Gets or sets the computer.
    :type computer: str
    :param ip_address: Gets or sets the ip address.
    :type ip_address: str
    :param description: Gets or sets the description.
    :type description: str
    :param process_time: Gets or sets the process time.
    :type process_time: int
    :param details: Gets or sets the details.
    :type details: object
    """

    _validation = {
        'entity_id': {'maximum': 2147483647, 'minimum': 1},
        'source': {'max_length': 255, 'min_length': 0},
        'computer': {'max_length': 255, 'min_length': 0},
        'ip_address': {'max_length': 255, 'min_length': 0},
        'description': {'max_length': 255, 'min_length': 0},
    }

    _attribute_map = {
        'id': {'key': 'ID', 'type': 'int'},
        'drawer_id': {'key': 'DrawerID', 'type': 'int'},
        'entity_id': {'key': 'EntityID', 'type': 'int'},
        'type': {'key': 'Type', 'type': 'str'},
        'event_time': {'key': 'EventTime', 'type': 'iso-8601'},
        'event_user_id': {'key': 'EventUserID', 'type': 'int'},
        'event_user_full_name': {'key': 'EventUserFullName', 'type': 'str'},
        'event_group_id': {'key': 'EventGroupID', 'type': 'int'},
        'event_group_name': {'key': 'EventGroupName', 'type': 'str'},
        'category': {'key': 'Category', 'type': 'str'},
        'class_property': {'key': 'Class', 'type': 'str'},
        'operation': {'key': 'Operation', 'type': 'str'},
        'source': {'key': 'Source', 'type': 'str'},
        'computer': {'key': 'Computer', 'type': 'str'},
        'ip_address': {'key': 'IPAddress', 'type': 'str'},
        'description': {'key': 'Description', 'type': 'str'},
        'process_time': {'key': 'ProcessTime', 'type': 'int'},
        'details': {'key': 'Details', 'type': 'object'},
    }

    def __init__(self, id=None, drawer_id=None, entity_id=None, type=None, event_time=None, event_user_id=None, event_user_full_name=None, event_group_id=None, event_group_name=None, category=None, class_property=None, operation=None, source=None, computer=None, ip_address=None, description=None, process_time=None, details=None):
        super(EventModel, self).__init__()
        self.id = id
        self.drawer_id = drawer_id
        self.entity_id = entity_id
        self.type = type
        self.event_time = event_time
        self.event_user_id = event_user_id
        self.event_user_full_name = event_user_full_name
        self.event_group_id = event_group_id
        self.event_group_name = event_group_name
        self.category = category
        self.class_property = class_property
        self.operation = operation
        self.source = source
        self.computer = computer
        self.ip_address = ip_address
        self.description = description
        self.process_time = process_time
        self.details = details
