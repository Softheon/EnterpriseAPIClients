# coding=utf-8
# --------------------------------------------------------------------------
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------

from msrest.serialization import Model


class FieldDefinitionModel(Model):
    """Model for Template Fields.

    :param id: Gets or sets the identifier.
    :type id: str
    :param name: Gets or sets the name.
    :type name: str
    :param xml_tag: Gets or sets the XML tag.
    :type xml_tag: str
    :param type: Gets or sets the type. Possible values include: 'Undefined',
     'String', 'Integer', 'Double', 'DateTime', 'Paragraph', 'CheckBox',
     'RadioButton', 'ComboBox', 'ListBox', 'Table', 'LargeText', 'ComboString'
    :type type: str or ~softheon.enterprise.api.client.models.enum
    :param index: Gets or sets the index.
    :type index: int
    :param position: Gets or sets the position.
    :type position: int
    :param note: Gets or sets the note.
    :type note: str
    :param is_enabled: Gets or sets a value indicating whether this instance
     is enabled.
    :type is_enabled: bool
    :param is_required: Gets or sets a value indicating whether this instance
     is required. Possible values include: 'NotRequired', 'Always', 'OnAccept'
    :type is_required: str or ~softheon.enterprise.api.client.models.enum
    :param is_protected: Gets or sets a value indicating whether this instance
     is protected.
    :type is_protected: bool
    :param default: Gets or sets the default value.
    :type default: str
    :param mask: Gets or sets the mask.
    :type mask: str
    :param length: Gets or sets the length.
    :type length: int
    :param is_multiline: Gets or sets a value indicating whether this instance
     is multiline.
    :type is_multiline: bool
    :param format: Gets or sets the format.
    :type format: str
    :param is_sorted: Gets or sets a value indicating whether this instance is
     sorted.
    :type is_sorted: bool
    :param select: Gets or sets the select.
    :type select: int
    :param formula: Gets or sets the formula.
    :type formula: str
    :param has_validation: Gets or sets a value indicating whether this
     instance has validation.
    :type has_validation: bool
    :param validation_column: Gets or sets the validation column.
    :type validation_column: str
    :param found_operation: Gets or sets the found operation.
    :type found_operation: int
    :param not_found_operation: Gets or sets the not found operation.
    :type not_found_operation: int
    :param sample_image: Gets or sets the sample image.
    :type sample_image: int
    :param lookup: Gets or sets the lookup.
    :type lookup: str
    :param has_link: Gets or sets a value indicating whether this instance has
     linking enabled.
    :type has_link: bool
    :param link_entity_type: Gets or sets the type of the link entity.
    :type link_entity_type: int
    :param link_profile: Gets or sets the link profile.
    :type link_profile: str
    :param link_field: Gets or sets the link field.
    :type link_field: str
    :param reserved_string1: Gets or sets the reserved string1.
    :type reserved_string1: str
    :param reserved_string2: Gets or sets the reserved string2.
    :type reserved_string2: str
    :param reserved_int1: Gets or sets the reserved int1.
    :type reserved_int1: int
    :param reserved_int2: Gets or sets the reserved int2.
    :type reserved_int2: int
    :param reserved_bit1: Gets or sets a value indicating whether [reserved
     bit1].
    :type reserved_bit1: bool
    :param reserved_bit2: Gets or sets a value indicating whether [reserved
     bit2].
    :type reserved_bit2: bool
    :param items: Gets or sets the template items.
    :type items:
     list[~softheon.enterprise.api.client.models.ItemDefinitionModel]
    :param fields: Gets or sets the fields.
    :type fields:
     list[~softheon.enterprise.api.client.models.FieldDefinitionModel]
    """

    _validation = {
        'name': {'required': True},
        'type': {'required': True},
        'index': {'required': True, 'maximum': 32, 'minimum': 0},
        'position': {'required': True, 'maximum': 2147483647, 'minimum': 0},
    }

    _attribute_map = {
        'id': {'key': 'ID', 'type': 'str'},
        'name': {'key': 'Name', 'type': 'str'},
        'xml_tag': {'key': 'XmlTag', 'type': 'str'},
        'type': {'key': 'Type', 'type': 'str'},
        'index': {'key': 'Index', 'type': 'int'},
        'position': {'key': 'Position', 'type': 'int'},
        'note': {'key': 'Note', 'type': 'str'},
        'is_enabled': {'key': 'IsEnabled', 'type': 'bool'},
        'is_required': {'key': 'IsRequired', 'type': 'str'},
        'is_protected': {'key': 'IsProtected', 'type': 'bool'},
        'default': {'key': 'Default', 'type': 'str'},
        'mask': {'key': 'Mask', 'type': 'str'},
        'length': {'key': 'Length', 'type': 'int'},
        'is_multiline': {'key': 'IsMultiline', 'type': 'bool'},
        'format': {'key': 'Format', 'type': 'str'},
        'is_sorted': {'key': 'IsSorted', 'type': 'bool'},
        'select': {'key': 'Select', 'type': 'int'},
        'formula': {'key': 'Formula', 'type': 'str'},
        'has_validation': {'key': 'HasValidation', 'type': 'bool'},
        'validation_column': {'key': 'ValidationColumn', 'type': 'str'},
        'found_operation': {'key': 'FoundOperation', 'type': 'int'},
        'not_found_operation': {'key': 'NotFoundOperation', 'type': 'int'},
        'sample_image': {'key': 'SampleImage', 'type': 'int'},
        'lookup': {'key': 'Lookup', 'type': 'str'},
        'has_link': {'key': 'HasLink', 'type': 'bool'},
        'link_entity_type': {'key': 'LinkEntityType', 'type': 'int'},
        'link_profile': {'key': 'LinkProfile', 'type': 'str'},
        'link_field': {'key': 'LinkField', 'type': 'str'},
        'reserved_string1': {'key': 'ReservedString1', 'type': 'str'},
        'reserved_string2': {'key': 'ReservedString2', 'type': 'str'},
        'reserved_int1': {'key': 'ReservedInt1', 'type': 'int'},
        'reserved_int2': {'key': 'ReservedInt2', 'type': 'int'},
        'reserved_bit1': {'key': 'ReservedBit1', 'type': 'bool'},
        'reserved_bit2': {'key': 'ReservedBit2', 'type': 'bool'},
        'items': {'key': 'Items', 'type': '[ItemDefinitionModel]'},
        'fields': {'key': 'Fields', 'type': '[FieldDefinitionModel]'},
    }

    def __init__(self, name, type, index, position, id=None, xml_tag=None, note=None, is_enabled=None, is_required=None, is_protected=None, default=None, mask=None, length=None, is_multiline=None, format=None, is_sorted=None, select=None, formula=None, has_validation=None, validation_column=None, found_operation=None, not_found_operation=None, sample_image=None, lookup=None, has_link=None, link_entity_type=None, link_profile=None, link_field=None, reserved_string1=None, reserved_string2=None, reserved_int1=None, reserved_int2=None, reserved_bit1=None, reserved_bit2=None, items=None, fields=None):
        super(FieldDefinitionModel, self).__init__()
        self.id = id
        self.name = name
        self.xml_tag = xml_tag
        self.type = type
        self.index = index
        self.position = position
        self.note = note
        self.is_enabled = is_enabled
        self.is_required = is_required
        self.is_protected = is_protected
        self.default = default
        self.mask = mask
        self.length = length
        self.is_multiline = is_multiline
        self.format = format
        self.is_sorted = is_sorted
        self.select = select
        self.formula = formula
        self.has_validation = has_validation
        self.validation_column = validation_column
        self.found_operation = found_operation
        self.not_found_operation = not_found_operation
        self.sample_image = sample_image
        self.lookup = lookup
        self.has_link = has_link
        self.link_entity_type = link_entity_type
        self.link_profile = link_profile
        self.link_field = link_field
        self.reserved_string1 = reserved_string1
        self.reserved_string2 = reserved_string2
        self.reserved_int1 = reserved_int1
        self.reserved_int2 = reserved_int2
        self.reserved_bit1 = reserved_bit1
        self.reserved_bit2 = reserved_bit2
        self.items = items
        self.fields = fields
