# coding=utf-8
# --------------------------------------------------------------------------
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------

from msrest.serialization import Model


class LockModel(Model):
    """The model that is sent in response to a GET request for Locks.

    :param entity_id: Gets or sets the entity identifier.
    :type entity_id: int
    :param session_id: Gets or sets the user session identifier.
    :type session_id: int
    :param user_id: Gets or sets the identifier of the user who inserted the
     entity lock.
    :type user_id: int
    :param user_full_name: Gets or sets the full name of the user who inserted
     the lock.
    :type user_full_name: str
    :param lock_time: Gets or sets the time when the lock was placed on the
     entity.
    :type lock_time: datetime
    :param expiration_time: Gets or sets the expiration time of the lock.
    :type expiration_time: datetime
    :param acl: Gets or sets the access control level permissions of the lock.
    :type acl: int
    :param application_name: Gets or sets the name of the application creating
     the lock.
    :type application_name: str
    """

    _validation = {
        'application_name': {'max_length': 255, 'min_length': 0},
    }

    _attribute_map = {
        'entity_id': {'key': 'EntityID', 'type': 'int'},
        'session_id': {'key': 'SessionID', 'type': 'int'},
        'user_id': {'key': 'UserID', 'type': 'int'},
        'user_full_name': {'key': 'UserFullName', 'type': 'str'},
        'lock_time': {'key': 'LockTime', 'type': 'iso-8601'},
        'expiration_time': {'key': 'ExpirationTime', 'type': 'iso-8601'},
        'acl': {'key': 'Acl', 'type': 'int'},
        'application_name': {'key': 'ApplicationName', 'type': 'str'},
    }

    def __init__(self, entity_id=None, session_id=None, user_id=None, user_full_name=None, lock_time=None, expiration_time=None, acl=None, application_name=None):
        super(LockModel, self).__init__()
        self.entity_id = entity_id
        self.session_id = session_id
        self.user_id = user_id
        self.user_full_name = user_full_name
        self.lock_time = lock_time
        self.expiration_time = expiration_time
        self.acl = acl
        self.application_name = application_name
