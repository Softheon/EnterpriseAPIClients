package softheonenterpriseapiclient

// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

import (
    "github.com/Azure/go-autorest/autorest"
    "github.com/Azure/go-autorest/autorest/date"
)

// AdminMask enumerates the values for admin mask.
type AdminMask string

const (
// ApplicationAdmin ...
ApplicationAdmin AdminMask = "ApplicationAdmin"
// CabinetAdmin ...
CabinetAdmin AdminMask = "CabinetAdmin"
// DrawerAdmin ...
DrawerAdmin AdminMask = "DrawerAdmin"
// GroupAdmin ...
GroupAdmin AdminMask = "GroupAdmin"
// None ...
None AdminMask = "None"
// TemplateAdmin ...
TemplateAdmin AdminMask = "TemplateAdmin"
// UserAdmin ...
UserAdmin AdminMask = "UserAdmin"
// VersionAdmin ...
VersionAdmin AdminMask = "VersionAdmin"
// WorkflowAdmin ...
WorkflowAdmin AdminMask = "WorkflowAdmin"
    )

// AdminMask1 enumerates the values for admin mask 1.
type AdminMask1 string

const (
// AdminMask1ApplicationAdmin ...
AdminMask1ApplicationAdmin AdminMask1 = "ApplicationAdmin"
// AdminMask1CabinetAdmin ...
AdminMask1CabinetAdmin AdminMask1 = "CabinetAdmin"
// AdminMask1DrawerAdmin ...
AdminMask1DrawerAdmin AdminMask1 = "DrawerAdmin"
// AdminMask1GroupAdmin ...
AdminMask1GroupAdmin AdminMask1 = "GroupAdmin"
// AdminMask1None ...
AdminMask1None AdminMask1 = "None"
// AdminMask1TemplateAdmin ...
AdminMask1TemplateAdmin AdminMask1 = "TemplateAdmin"
// AdminMask1UserAdmin ...
AdminMask1UserAdmin AdminMask1 = "UserAdmin"
// AdminMask1VersionAdmin ...
AdminMask1VersionAdmin AdminMask1 = "VersionAdmin"
// AdminMask1WorkflowAdmin ...
AdminMask1WorkflowAdmin AdminMask1 = "WorkflowAdmin"
    )

// AdminMask2 enumerates the values for admin mask 2.
type AdminMask2 string

const (
// AdminMask2ApplicationAdmin ...
AdminMask2ApplicationAdmin AdminMask2 = "ApplicationAdmin"
// AdminMask2CabinetAdmin ...
AdminMask2CabinetAdmin AdminMask2 = "CabinetAdmin"
// AdminMask2DrawerAdmin ...
AdminMask2DrawerAdmin AdminMask2 = "DrawerAdmin"
// AdminMask2GroupAdmin ...
AdminMask2GroupAdmin AdminMask2 = "GroupAdmin"
// AdminMask2None ...
AdminMask2None AdminMask2 = "None"
// AdminMask2TemplateAdmin ...
AdminMask2TemplateAdmin AdminMask2 = "TemplateAdmin"
// AdminMask2UserAdmin ...
AdminMask2UserAdmin AdminMask2 = "UserAdmin"
// AdminMask2VersionAdmin ...
AdminMask2VersionAdmin AdminMask2 = "VersionAdmin"
// AdminMask2WorkflowAdmin ...
AdminMask2WorkflowAdmin AdminMask2 = "WorkflowAdmin"
    )

// Category enumerates the values for category.
type Category string

const (
// Attachment ...
Attachment Category = "Attachment"
// Discussion ...
Discussion Category = "Discussion"
// Entity ...
Entity Category = "Entity"
// Field ...
Field Category = "Field"
// Profile ...
Profile Category = "Profile"
// Undefined ...
Undefined Category = "Undefined"
// Workflow ...
Workflow Category = "Workflow"
    )

// Category1 enumerates the values for category 1.
type Category1 string

const (
// Category1Attachment ...
Category1Attachment Category1 = "Attachment"
// Category1Discussion ...
Category1Discussion Category1 = "Discussion"
// Category1Entity ...
Category1Entity Category1 = "Entity"
// Category1Field ...
Category1Field Category1 = "Field"
// Category1Profile ...
Category1Profile Category1 = "Profile"
// Category1Undefined ...
Category1Undefined Category1 = "Undefined"
// Category1Workflow ...
Category1Workflow Category1 = "Workflow"
    )

// Category2 enumerates the values for category 2.
type Category2 string

const (
// Category2AdHoc ...
Category2AdHoc Category2 = "AdHoc"
// Category2Direct ...
Category2Direct Category2 = "Direct"
// Category2None ...
Category2None Category2 = "None"
// Category2Override ...
Category2Override Category2 = "Override"
// Category2Production ...
Category2Production Category2 = "Production"
// Category2Reset ...
Category2Reset Category2 = "Reset"
// Category2Review ...
Category2Review Category2 = "Review"
// Category2ReviewRoutingSlip ...
Category2ReviewRoutingSlip Category2 = "ReviewRoutingSlip"
// Category2RoutingSlip ...
Category2RoutingSlip Category2 = "RoutingSlip"
    )

// Category3 enumerates the values for category 3.
type Category3 string

const (
// Category3AdHoc ...
Category3AdHoc Category3 = "AdHoc"
// Category3Direct ...
Category3Direct Category3 = "Direct"
// Category3None ...
Category3None Category3 = "None"
// Category3Override ...
Category3Override Category3 = "Override"
// Category3Production ...
Category3Production Category3 = "Production"
// Category3Reset ...
Category3Reset Category3 = "Reset"
// Category3Review ...
Category3Review Category3 = "Review"
// Category3ReviewRoutingSlip ...
Category3ReviewRoutingSlip Category3 = "ReviewRoutingSlip"
// Category3RoutingSlip ...
Category3RoutingSlip Category3 = "RoutingSlip"
    )

// Class enumerates the values for class.
type Class string

const (
// ClassApplication ...
ClassApplication Class = "Application"
// ClassSecurity ...
ClassSecurity Class = "Security"
// ClassSystem ...
ClassSystem Class = "System"
// ClassUndefined ...
ClassUndefined Class = "Undefined"
    )

// Class1 enumerates the values for class 1.
type Class1 string

const (
// Class1Application ...
Class1Application Class1 = "Application"
// Class1Security ...
Class1Security Class1 = "Security"
// Class1System ...
Class1System Class1 = "System"
// Class1Undefined ...
Class1Undefined Class1 = "Undefined"
    )

// EntityContent enumerates the values for entity content.
type EntityContent string

const (
// EntityContentAll ...
EntityContentAll EntityContent = "All"
// EntityContentAttachments ...
EntityContentAttachments EntityContent = "Attachments"
// EntityContentEvents ...
EntityContentEvents EntityContent = "Events"
// EntityContentLinks ...
EntityContentLinks EntityContent = "Links"
// EntityContentNone ...
EntityContentNone EntityContent = "None"
// EntityContentNotes ...
EntityContentNotes EntityContent = "Notes"
// EntityContentProfiles ...
EntityContentProfiles EntityContent = "Profiles"
    )

// FetchType enumerates the values for fetch type.
type FetchType string

const (
// Manual ...
Manual FetchType = "Manual"
// Push ...
Push FetchType = "Push"
// Unspecified ...
Unspecified FetchType = "Unspecified"
    )

// FetchType1 enumerates the values for fetch type 1.
type FetchType1 string

const (
// FetchType1Manual ...
FetchType1Manual FetchType1 = "Manual"
// FetchType1Push ...
FetchType1Push FetchType1 = "Push"
// FetchType1Unspecified ...
FetchType1Unspecified FetchType1 = "Unspecified"
    )

// FetchType2 enumerates the values for fetch type 2.
type FetchType2 string

const (
// FetchType2Manual ...
FetchType2Manual FetchType2 = "Manual"
// FetchType2Push ...
FetchType2Push FetchType2 = "Push"
// FetchType2Unspecified ...
FetchType2Unspecified FetchType2 = "Unspecified"
    )

// FieldType enumerates the values for field type.
type FieldType string

const (
// DateTime ...
DateTime FieldType = "DateTime"
// Double ...
Double FieldType = "Double"
// Integer ...
Integer FieldType = "Integer"
// String ...
String FieldType = "String"
    )

// IsRequired enumerates the values for is required.
type IsRequired string

const (
// Always ...
Always IsRequired = "Always"
// NotRequired ...
NotRequired IsRequired = "NotRequired"
// OnAccept ...
OnAccept IsRequired = "OnAccept"
    )

// Operation enumerates the values for operation.
type Operation string

const (
// OperationAccept ...
OperationAccept Operation = "Accept"
// OperationArchive ...
OperationArchive Operation = "Archive"
// OperationCheckin ...
OperationCheckin Operation = "Checkin"
// OperationCheckout ...
OperationCheckout Operation = "Checkout"
// OperationClassify ...
OperationClassify Operation = "Classify"
// OperationClose ...
OperationClose Operation = "Close"
// OperationCopy ...
OperationCopy Operation = "Copy"
// OperationDelete ...
OperationDelete Operation = "Delete"
// OperationForward ...
OperationForward Operation = "Forward"
// OperationInsert ...
OperationInsert Operation = "Insert"
// OperationLock ...
OperationLock Operation = "Lock"
// OperationMerge ...
OperationMerge Operation = "Merge"
// OperationNull ...
OperationNull Operation = "Null"
// OperationOpen ...
OperationOpen Operation = "Open"
// OperationOpenWF ...
OperationOpenWF Operation = "OpenWF"
// OperationOverride ...
OperationOverride Operation = "Override"
// OperationReassign ...
OperationReassign Operation = "Reassign"
// OperationReject ...
OperationReject Operation = "Reject"
// OperationRemove ...
OperationRemove Operation = "Remove"
// OperationReply ...
OperationReply Operation = "Reply"
// OperationReset ...
OperationReset Operation = "Reset"
// OperationReturnToBottom ...
OperationReturnToBottom Operation = "ReturnToBottom"
// OperationReturnToTop ...
OperationReturnToTop Operation = "ReturnToTop"
// OperationRollback ...
OperationRollback Operation = "Rollback"
// OperationRoute ...
OperationRoute Operation = "Route"
// OperationSplit ...
OperationSplit Operation = "Split"
// OperationSuspend ...
OperationSuspend Operation = "Suspend"
// OperationUndefined ...
OperationUndefined Operation = "Undefined"
// OperationUnlock ...
OperationUnlock Operation = "Unlock"
// OperationUpdate ...
OperationUpdate Operation = "Update"
// OperationView ...
OperationView Operation = "View"
    )

// Operation1 enumerates the values for operation 1.
type Operation1 string

const (
// Operation1Accept ...
Operation1Accept Operation1 = "Accept"
// Operation1Archive ...
Operation1Archive Operation1 = "Archive"
// Operation1Checkin ...
Operation1Checkin Operation1 = "Checkin"
// Operation1Checkout ...
Operation1Checkout Operation1 = "Checkout"
// Operation1Classify ...
Operation1Classify Operation1 = "Classify"
// Operation1Close ...
Operation1Close Operation1 = "Close"
// Operation1Copy ...
Operation1Copy Operation1 = "Copy"
// Operation1Delete ...
Operation1Delete Operation1 = "Delete"
// Operation1Forward ...
Operation1Forward Operation1 = "Forward"
// Operation1Insert ...
Operation1Insert Operation1 = "Insert"
// Operation1Lock ...
Operation1Lock Operation1 = "Lock"
// Operation1Merge ...
Operation1Merge Operation1 = "Merge"
// Operation1Null ...
Operation1Null Operation1 = "Null"
// Operation1Open ...
Operation1Open Operation1 = "Open"
// Operation1OpenWF ...
Operation1OpenWF Operation1 = "OpenWF"
// Operation1Override ...
Operation1Override Operation1 = "Override"
// Operation1Reassign ...
Operation1Reassign Operation1 = "Reassign"
// Operation1Reject ...
Operation1Reject Operation1 = "Reject"
// Operation1Remove ...
Operation1Remove Operation1 = "Remove"
// Operation1Reply ...
Operation1Reply Operation1 = "Reply"
// Operation1Reset ...
Operation1Reset Operation1 = "Reset"
// Operation1ReturnToBottom ...
Operation1ReturnToBottom Operation1 = "ReturnToBottom"
// Operation1ReturnToTop ...
Operation1ReturnToTop Operation1 = "ReturnToTop"
// Operation1Rollback ...
Operation1Rollback Operation1 = "Rollback"
// Operation1Route ...
Operation1Route Operation1 = "Route"
// Operation1Split ...
Operation1Split Operation1 = "Split"
// Operation1Suspend ...
Operation1Suspend Operation1 = "Suspend"
// Operation1Undefined ...
Operation1Undefined Operation1 = "Undefined"
// Operation1Unlock ...
Operation1Unlock Operation1 = "Unlock"
// Operation1Update ...
Operation1Update Operation1 = "Update"
// Operation1View ...
Operation1View Operation1 = "View"
    )

// Operation2 enumerates the values for operation 2.
type Operation2 string

const (
// Operation2None ...
Operation2None Operation2 = "None"
// Operation2Null ...
Operation2Null Operation2 = "Null"
// Operation2Override ...
Operation2Override Operation2 = "Override"
// Operation2Reset ...
Operation2Reset Operation2 = "Reset"
// Operation2Update ...
Operation2Update Operation2 = "Update"
    )

// Operation3 enumerates the values for operation 3.
type Operation3 string

const (
// Operation3None ...
Operation3None Operation3 = "None"
// Operation3Null ...
Operation3Null Operation3 = "Null"
// Operation3Override ...
Operation3Override Operation3 = "Override"
// Operation3Reset ...
Operation3Reset Operation3 = "Reset"
// Operation3Update ...
Operation3Update Operation3 = "Update"
    )

// SortBy enumerates the values for sort by.
type SortBy string

const (
// SortByACL ...
SortByACL SortBy = "Acl"
// SortByApplicationID ...
SortByApplicationID SortBy = "ApplicationID"
// SortByDrawerID ...
SortByDrawerID SortBy = "DrawerID"
// SortByGroupID ...
SortByGroupID SortBy = "GroupID"
// SortByQueueID ...
SortByQueueID SortBy = "QueueID"
// SortByUnspecified ...
SortByUnspecified SortBy = "Unspecified"
// SortByUserID ...
SortByUserID SortBy = "UserID"
    )

// SortBy1 enumerates the values for sort by 1.
type SortBy1 string

const (
// SortBy1CrossReferenceID ...
SortBy1CrossReferenceID SortBy1 = "CrossReferenceID"
// SortBy1Extension ...
SortBy1Extension SortBy1 = "Extension"
// SortBy1ID ...
SortBy1ID SortBy1 = "ID"
// SortBy1InsertionTime ...
SortBy1InsertionTime SortBy1 = "InsertionTime"
// SortBy1ModificationTime ...
SortBy1ModificationTime SortBy1 = "ModificationTime"
// SortBy1Name ...
SortBy1Name SortBy1 = "Name"
// SortBy1PageNumber ...
SortBy1PageNumber SortBy1 = "PageNumber"
// SortBy1SubType ...
SortBy1SubType SortBy1 = "SubType"
// SortBy1Type ...
SortBy1Type SortBy1 = "Type"
    )

// SortBy10 enumerates the values for sort by 10.
type SortBy10 string

const (
// SortBy10FetchType ...
SortBy10FetchType SortBy10 = "FetchType"
// SortBy10GroupID ...
SortBy10GroupID SortBy10 = "GroupID"
// SortBy10Order ...
SortBy10Order SortBy10 = "Order"
// SortBy10QueueID ...
SortBy10QueueID SortBy10 = "QueueID"
// SortBy10State ...
SortBy10State SortBy10 = "State"
// SortBy10Type ...
SortBy10Type SortBy10 = "Type"
// SortBy10UserID ...
SortBy10UserID SortBy10 = "UserID"
    )

// SortBy11 enumerates the values for sort by 11.
type SortBy11 string

const (
// SortBy11Alias ...
SortBy11Alias SortBy11 = "Alias"
// SortBy11ID ...
SortBy11ID SortBy11 = "ID"
// SortBy11Name ...
SortBy11Name SortBy11 = "Name"
// SortBy11Type ...
SortBy11Type SortBy11 = "Type"
    )

// SortBy12 enumerates the values for sort by 12.
type SortBy12 string

const (
// Description ...
Description SortBy12 = "Description"
// InsertionTime ...
InsertionTime SortBy12 = "InsertionTime"
// ObjectID ...
ObjectID SortBy12 = "ObjectID"
// Priority ...
Priority SortBy12 = "Priority"
// QueueID ...
QueueID SortBy12 = "QueueID"
// ReservedInt1 ...
ReservedInt1 SortBy12 = "ReservedInt1"
// ResolutionTime ...
ResolutionTime SortBy12 = "ResolutionTime"
// TaskID ...
TaskID SortBy12 = "TaskID"
    )

// SortBy13 enumerates the values for sort by 13.
type SortBy13 string

const (
// SortBy13ID ...
SortBy13ID SortBy13 = "ID"
// SortBy13PrimaryGroupID ...
SortBy13PrimaryGroupID SortBy13 = "PrimaryGroupID"
// SortBy13State ...
SortBy13State SortBy13 = "State"
// SortBy13Type ...
SortBy13Type SortBy13 = "Type"
// SortBy13UserFullName ...
SortBy13UserFullName SortBy13 = "UserFullName"
// SortBy13Username ...
SortBy13Username SortBy13 = "Username"
    )

// SortBy2 enumerates the values for sort by 2.
type SortBy2 string

const (
// SortBy2AccessorUserID ...
SortBy2AccessorUserID SortBy2 = "AccessorUserID"
// SortBy2AccessTime ...
SortBy2AccessTime SortBy2 = "AccessTime"
// SortBy2CreationTime ...
SortBy2CreationTime SortBy2 = "CreationTime"
// SortBy2CreatorUserID ...
SortBy2CreatorUserID SortBy2 = "CreatorUserID"
// SortBy2ModificationTime ...
SortBy2ModificationTime SortBy2 = "ModificationTime"
// SortBy2Version ...
SortBy2Version SortBy2 = "Version"
    )

// SortBy3 enumerates the values for sort by 3.
type SortBy3 string

const (
// SortBy3CreationTime ...
SortBy3CreationTime SortBy3 = "CreationTime"
// SortBy3ID ...
SortBy3ID SortBy3 = "ID"
// SortBy3ModificationTime ...
SortBy3ModificationTime SortBy3 = "ModificationTime"
// SortBy3Name ...
SortBy3Name SortBy3 = "Name"
// SortBy3State ...
SortBy3State SortBy3 = "State"
// SortBy3Type ...
SortBy3Type SortBy3 = "Type"
    )

// SortBy4 enumerates the values for sort by 4.
type SortBy4 string

const (
// SortBy4EventTime ...
SortBy4EventTime SortBy4 = "EventTime"
// SortBy4ID ...
SortBy4ID SortBy4 = "ID"
// SortBy4Type ...
SortBy4Type SortBy4 = "Type"
    )

// SortBy5 enumerates the values for sort by 5.
type SortBy5 string

const (
// SortBy5Date ...
SortBy5Date SortBy5 = "Date"
// SortBy5Double ...
SortBy5Double SortBy5 = "Double"
// SortBy5ID ...
SortBy5ID SortBy5 = "ID"
// SortBy5Integer ...
SortBy5Integer SortBy5 = "Integer"
// SortBy5RowNumber ...
SortBy5RowNumber SortBy5 = "RowNumber"
// SortBy5String ...
SortBy5String SortBy5 = "String"
// SortBy5Type ...
SortBy5Type SortBy5 = "Type"
    )

// SortBy6 enumerates the values for sort by 6.
type SortBy6 string

const (
// SortBy6ID ...
SortBy6ID SortBy6 = "ID"
// SortBy6Index ...
SortBy6Index SortBy6 = "Index"
// SortBy6InsertionTime ...
SortBy6InsertionTime SortBy6 = "InsertionTime"
// SortBy6QueueID ...
SortBy6QueueID SortBy6 = "QueueID"
// SortBy6Type ...
SortBy6Type SortBy6 = "Type"
// SortBy6WorkflowTime ...
SortBy6WorkflowTime SortBy6 = "WorkflowTime"
    )

// SortBy7 enumerates the values for sort by 7.
type SortBy7 string

const (
// SortBy7ID ...
SortBy7ID SortBy7 = "ID"
// SortBy7Name ...
SortBy7Name SortBy7 = "Name"
// SortBy7State ...
SortBy7State SortBy7 = "State"
// SortBy7Type ...
SortBy7Type SortBy7 = "Type"
    )

// SortBy8 enumerates the values for sort by 8.
type SortBy8 string

const (
// SortBy8CrossReferenceID ...
SortBy8CrossReferenceID SortBy8 = "CrossReferenceID"
// SortBy8Extension ...
SortBy8Extension SortBy8 = "Extension"
// SortBy8ID ...
SortBy8ID SortBy8 = "ID"
// SortBy8InsertionTime ...
SortBy8InsertionTime SortBy8 = "InsertionTime"
// SortBy8ModificationTime ...
SortBy8ModificationTime SortBy8 = "ModificationTime"
// SortBy8Name ...
SortBy8Name SortBy8 = "Name"
// SortBy8PageNumber ...
SortBy8PageNumber SortBy8 = "PageNumber"
// SortBy8SubType ...
SortBy8SubType SortBy8 = "SubType"
// SortBy8Type ...
SortBy8Type SortBy8 = "Type"
    )

// SortBy9 enumerates the values for sort by 9.
type SortBy9 string

const (
// CreationTime ...
CreationTime SortBy9 = "CreationTime"
// EntityID ...
EntityID SortBy9 = "EntityID"
// ID ...
ID SortBy9 = "ID"
// ModificationTime ...
ModificationTime SortBy9 = "ModificationTime"
// Name ...
Name SortBy9 = "Name"
    )

// SortOrder enumerates the values for sort order.
type SortOrder string

const (
// SortOrderAscending ...
SortOrderAscending SortOrder = "Ascending"
// SortOrderDescending ...
SortOrderDescending SortOrder = "Descending"
// SortOrderUnspecified ...
SortOrderUnspecified SortOrder = "Unspecified"
    )

// SortOrder1 enumerates the values for sort order 1.
type SortOrder1 string

const (
// SortOrder1Ascending ...
SortOrder1Ascending SortOrder1 = "Ascending"
// SortOrder1Descending ...
SortOrder1Descending SortOrder1 = "Descending"
// SortOrder1Unspecified ...
SortOrder1Unspecified SortOrder1 = "Unspecified"
    )

// SortOrder10 enumerates the values for sort order 10.
type SortOrder10 string

const (
// SortOrder10Ascending ...
SortOrder10Ascending SortOrder10 = "Ascending"
// SortOrder10Descending ...
SortOrder10Descending SortOrder10 = "Descending"
// SortOrder10Unspecified ...
SortOrder10Unspecified SortOrder10 = "Unspecified"
    )

// SortOrder11 enumerates the values for sort order 11.
type SortOrder11 string

const (
// SortOrder11Ascending ...
SortOrder11Ascending SortOrder11 = "Ascending"
// SortOrder11Descending ...
SortOrder11Descending SortOrder11 = "Descending"
// SortOrder11Unspecified ...
SortOrder11Unspecified SortOrder11 = "Unspecified"
    )

// SortOrder12 enumerates the values for sort order 12.
type SortOrder12 string

const (
// SortOrder12Ascending ...
SortOrder12Ascending SortOrder12 = "Ascending"
// SortOrder12Descending ...
SortOrder12Descending SortOrder12 = "Descending"
// SortOrder12Unspecified ...
SortOrder12Unspecified SortOrder12 = "Unspecified"
    )

// SortOrder13 enumerates the values for sort order 13.
type SortOrder13 string

const (
// SortOrder13Ascending ...
SortOrder13Ascending SortOrder13 = "Ascending"
// SortOrder13Descending ...
SortOrder13Descending SortOrder13 = "Descending"
// SortOrder13Unspecified ...
SortOrder13Unspecified SortOrder13 = "Unspecified"
    )

// SortOrder14 enumerates the values for sort order 14.
type SortOrder14 string

const (
// SortOrder14Ascending ...
SortOrder14Ascending SortOrder14 = "Ascending"
// SortOrder14Descending ...
SortOrder14Descending SortOrder14 = "Descending"
// SortOrder14Unspecified ...
SortOrder14Unspecified SortOrder14 = "Unspecified"
    )

// SortOrder15 enumerates the values for sort order 15.
type SortOrder15 string

const (
// SortOrder15Ascending ...
SortOrder15Ascending SortOrder15 = "Ascending"
// SortOrder15Descending ...
SortOrder15Descending SortOrder15 = "Descending"
// SortOrder15Unspecified ...
SortOrder15Unspecified SortOrder15 = "Unspecified"
    )

// SortOrder16 enumerates the values for sort order 16.
type SortOrder16 string

const (
// SortOrder16Ascending ...
SortOrder16Ascending SortOrder16 = "Ascending"
// SortOrder16Descending ...
SortOrder16Descending SortOrder16 = "Descending"
// SortOrder16Unspecified ...
SortOrder16Unspecified SortOrder16 = "Unspecified"
    )

// SortOrder2 enumerates the values for sort order 2.
type SortOrder2 string

const (
// SortOrder2Ascending ...
SortOrder2Ascending SortOrder2 = "Ascending"
// SortOrder2Descending ...
SortOrder2Descending SortOrder2 = "Descending"
// SortOrder2Unspecified ...
SortOrder2Unspecified SortOrder2 = "Unspecified"
    )

// SortOrder3 enumerates the values for sort order 3.
type SortOrder3 string

const (
// SortOrder3Ascending ...
SortOrder3Ascending SortOrder3 = "Ascending"
// SortOrder3Descending ...
SortOrder3Descending SortOrder3 = "Descending"
// SortOrder3Unspecified ...
SortOrder3Unspecified SortOrder3 = "Unspecified"
    )

// SortOrder4 enumerates the values for sort order 4.
type SortOrder4 string

const (
// SortOrder4Ascending ...
SortOrder4Ascending SortOrder4 = "Ascending"
// SortOrder4Descending ...
SortOrder4Descending SortOrder4 = "Descending"
// SortOrder4Unspecified ...
SortOrder4Unspecified SortOrder4 = "Unspecified"
    )

// SortOrder5 enumerates the values for sort order 5.
type SortOrder5 string

const (
// SortOrder5Ascending ...
SortOrder5Ascending SortOrder5 = "Ascending"
// SortOrder5Descending ...
SortOrder5Descending SortOrder5 = "Descending"
// SortOrder5Unspecified ...
SortOrder5Unspecified SortOrder5 = "Unspecified"
    )

// SortOrder6 enumerates the values for sort order 6.
type SortOrder6 string

const (
// SortOrder6Ascending ...
SortOrder6Ascending SortOrder6 = "Ascending"
// SortOrder6Descending ...
SortOrder6Descending SortOrder6 = "Descending"
// SortOrder6Unspecified ...
SortOrder6Unspecified SortOrder6 = "Unspecified"
    )

// SortOrder7 enumerates the values for sort order 7.
type SortOrder7 string

const (
// SortOrder7Ascending ...
SortOrder7Ascending SortOrder7 = "Ascending"
// SortOrder7Descending ...
SortOrder7Descending SortOrder7 = "Descending"
// SortOrder7Unspecified ...
SortOrder7Unspecified SortOrder7 = "Unspecified"
    )

// SortOrder8 enumerates the values for sort order 8.
type SortOrder8 string

const (
// SortOrder8Ascending ...
SortOrder8Ascending SortOrder8 = "Ascending"
// SortOrder8Descending ...
SortOrder8Descending SortOrder8 = "Descending"
// SortOrder8Unspecified ...
SortOrder8Unspecified SortOrder8 = "Unspecified"
    )

// SortOrder9 enumerates the values for sort order 9.
type SortOrder9 string

const (
// SortOrder9Ascending ...
SortOrder9Ascending SortOrder9 = "Ascending"
// SortOrder9Descending ...
SortOrder9Descending SortOrder9 = "Descending"
// SortOrder9Unspecified ...
SortOrder9Unspecified SortOrder9 = "Unspecified"
    )

// State enumerates the values for state.
type State string

const (
// StateCheckedOut ...
StateCheckedOut State = "CheckedOut"
// StateDynamic ...
StateDynamic State = "Dynamic"
// StateDynres1 ...
StateDynres1 State = "Dynres1"
// StateDynres2 ...
StateDynres2 State = "Dynres2"
// StateDynres3 ...
StateDynres3 State = "Dynres3"
// StateDynres4 ...
StateDynres4 State = "Dynres4"
// StateFetching ...
StateFetching State = "Fetching"
// StateInternal ...
StateInternal State = "Internal"
// StateLinked ...
StateLinked State = "Linked"
// StateLocked ...
StateLocked State = "Locked"
// StateMaxStates ...
StateMaxStates State = "MaxStates"
// StateNew ...
StateNew State = "New"
// StateOnClientCache ...
StateOnClientCache State = "OnClientCache"
// StateOnServerCache ...
StateOnServerCache State = "OnServerCache"
// StateReserved ...
StateReserved State = "Reserved"
// StateStatic ...
StateStatic State = "Static"
// StateStatres1 ...
StateStatres1 State = "Statres1"
// StateStatres2 ...
StateStatres2 State = "Statres2"
// StateStatres3 ...
StateStatres3 State = "Statres3"
// StateStatres4 ...
StateStatres4 State = "Statres4"
// StateStatres5 ...
StateStatres5 State = "Statres5"
// StateUndefined ...
StateUndefined State = "Undefined"
// StateUser1 ...
StateUser1 State = "User1"
// StateUser10 ...
StateUser10 State = "User10"
// StateUser11 ...
StateUser11 State = "User11"
// StateUser12 ...
StateUser12 State = "User12"
// StateUser13 ...
StateUser13 State = "User13"
// StateUser14 ...
StateUser14 State = "User14"
// StateUser15 ...
StateUser15 State = "User15"
// StateUser16 ...
StateUser16 State = "User16"
// StateUser2 ...
StateUser2 State = "User2"
// StateUser3 ...
StateUser3 State = "User3"
// StateUser4 ...
StateUser4 State = "User4"
// StateUser5 ...
StateUser5 State = "User5"
// StateUser6 ...
StateUser6 State = "User6"
// StateUser7 ...
StateUser7 State = "User7"
// StateUser8 ...
StateUser8 State = "User8"
// StateUser9 ...
StateUser9 State = "User9"
// StateUserDefined ...
StateUserDefined State = "UserDefined"
    )

// State1 enumerates the values for state 1.
type State1 string

const (
// State1CheckedOut ...
State1CheckedOut State1 = "CheckedOut"
// State1Dynamic ...
State1Dynamic State1 = "Dynamic"
// State1Dynres1 ...
State1Dynres1 State1 = "Dynres1"
// State1Dynres2 ...
State1Dynres2 State1 = "Dynres2"
// State1Dynres3 ...
State1Dynres3 State1 = "Dynres3"
// State1Dynres4 ...
State1Dynres4 State1 = "Dynres4"
// State1Fetching ...
State1Fetching State1 = "Fetching"
// State1Internal ...
State1Internal State1 = "Internal"
// State1Linked ...
State1Linked State1 = "Linked"
// State1Locked ...
State1Locked State1 = "Locked"
// State1MaxStates ...
State1MaxStates State1 = "MaxStates"
// State1New ...
State1New State1 = "New"
// State1OnClientCache ...
State1OnClientCache State1 = "OnClientCache"
// State1OnServerCache ...
State1OnServerCache State1 = "OnServerCache"
// State1Reserved ...
State1Reserved State1 = "Reserved"
// State1Static ...
State1Static State1 = "Static"
// State1Statres1 ...
State1Statres1 State1 = "Statres1"
// State1Statres2 ...
State1Statres2 State1 = "Statres2"
// State1Statres3 ...
State1Statres3 State1 = "Statres3"
// State1Statres4 ...
State1Statres4 State1 = "Statres4"
// State1Statres5 ...
State1Statres5 State1 = "Statres5"
// State1Undefined ...
State1Undefined State1 = "Undefined"
// State1User1 ...
State1User1 State1 = "User1"
// State1User10 ...
State1User10 State1 = "User10"
// State1User11 ...
State1User11 State1 = "User11"
// State1User12 ...
State1User12 State1 = "User12"
// State1User13 ...
State1User13 State1 = "User13"
// State1User14 ...
State1User14 State1 = "User14"
// State1User15 ...
State1User15 State1 = "User15"
// State1User16 ...
State1User16 State1 = "User16"
// State1User2 ...
State1User2 State1 = "User2"
// State1User3 ...
State1User3 State1 = "User3"
// State1User4 ...
State1User4 State1 = "User4"
// State1User5 ...
State1User5 State1 = "User5"
// State1User6 ...
State1User6 State1 = "User6"
// State1User7 ...
State1User7 State1 = "User7"
// State1User8 ...
State1User8 State1 = "User8"
// State1User9 ...
State1User9 State1 = "User9"
// State1UserDefined ...
State1UserDefined State1 = "UserDefined"
    )

// State10 enumerates the values for state 10.
type State10 string

const (
// Active ...
Active State10 = "Active"
// Inactive ...
Inactive State10 = "Inactive"
    )

// State11 enumerates the values for state 11.
type State11 string

const (
// State11CheckedOut ...
State11CheckedOut State11 = "CheckedOut"
// State11Dynamic ...
State11Dynamic State11 = "Dynamic"
// State11Dynres1 ...
State11Dynres1 State11 = "Dynres1"
// State11Dynres2 ...
State11Dynres2 State11 = "Dynres2"
// State11Dynres3 ...
State11Dynres3 State11 = "Dynres3"
// State11Dynres4 ...
State11Dynres4 State11 = "Dynres4"
// State11Fetching ...
State11Fetching State11 = "Fetching"
// State11Internal ...
State11Internal State11 = "Internal"
// State11Linked ...
State11Linked State11 = "Linked"
// State11Locked ...
State11Locked State11 = "Locked"
// State11MaxStates ...
State11MaxStates State11 = "MaxStates"
// State11New ...
State11New State11 = "New"
// State11OnClientCache ...
State11OnClientCache State11 = "OnClientCache"
// State11OnServerCache ...
State11OnServerCache State11 = "OnServerCache"
// State11Reserved ...
State11Reserved State11 = "Reserved"
// State11Static ...
State11Static State11 = "Static"
// State11Statres1 ...
State11Statres1 State11 = "Statres1"
// State11Statres2 ...
State11Statres2 State11 = "Statres2"
// State11Statres3 ...
State11Statres3 State11 = "Statres3"
// State11Statres4 ...
State11Statres4 State11 = "Statres4"
// State11Statres5 ...
State11Statres5 State11 = "Statres5"
// State11Undefined ...
State11Undefined State11 = "Undefined"
// State11User1 ...
State11User1 State11 = "User1"
// State11User10 ...
State11User10 State11 = "User10"
// State11User11 ...
State11User11 State11 = "User11"
// State11User12 ...
State11User12 State11 = "User12"
// State11User13 ...
State11User13 State11 = "User13"
// State11User14 ...
State11User14 State11 = "User14"
// State11User15 ...
State11User15 State11 = "User15"
// State11User16 ...
State11User16 State11 = "User16"
// State11User2 ...
State11User2 State11 = "User2"
// State11User3 ...
State11User3 State11 = "User3"
// State11User4 ...
State11User4 State11 = "User4"
// State11User5 ...
State11User5 State11 = "User5"
// State11User6 ...
State11User6 State11 = "User6"
// State11User7 ...
State11User7 State11 = "User7"
// State11User8 ...
State11User8 State11 = "User8"
// State11User9 ...
State11User9 State11 = "User9"
// State11UserDefined ...
State11UserDefined State11 = "UserDefined"
    )

// State12 enumerates the values for state 12.
type State12 string

const (
// State12CheckedOut ...
State12CheckedOut State12 = "CheckedOut"
// State12Dynamic ...
State12Dynamic State12 = "Dynamic"
// State12Dynres1 ...
State12Dynres1 State12 = "Dynres1"
// State12Dynres2 ...
State12Dynres2 State12 = "Dynres2"
// State12Dynres3 ...
State12Dynres3 State12 = "Dynres3"
// State12Dynres4 ...
State12Dynres4 State12 = "Dynres4"
// State12Fetching ...
State12Fetching State12 = "Fetching"
// State12Internal ...
State12Internal State12 = "Internal"
// State12Linked ...
State12Linked State12 = "Linked"
// State12Locked ...
State12Locked State12 = "Locked"
// State12MaxStates ...
State12MaxStates State12 = "MaxStates"
// State12New ...
State12New State12 = "New"
// State12OnClientCache ...
State12OnClientCache State12 = "OnClientCache"
// State12OnServerCache ...
State12OnServerCache State12 = "OnServerCache"
// State12Reserved ...
State12Reserved State12 = "Reserved"
// State12Static ...
State12Static State12 = "Static"
// State12Statres1 ...
State12Statres1 State12 = "Statres1"
// State12Statres2 ...
State12Statres2 State12 = "Statres2"
// State12Statres3 ...
State12Statres3 State12 = "Statres3"
// State12Statres4 ...
State12Statres4 State12 = "Statres4"
// State12Statres5 ...
State12Statres5 State12 = "Statres5"
// State12Undefined ...
State12Undefined State12 = "Undefined"
// State12User1 ...
State12User1 State12 = "User1"
// State12User10 ...
State12User10 State12 = "User10"
// State12User11 ...
State12User11 State12 = "User11"
// State12User12 ...
State12User12 State12 = "User12"
// State12User13 ...
State12User13 State12 = "User13"
// State12User14 ...
State12User14 State12 = "User14"
// State12User15 ...
State12User15 State12 = "User15"
// State12User16 ...
State12User16 State12 = "User16"
// State12User2 ...
State12User2 State12 = "User2"
// State12User3 ...
State12User3 State12 = "User3"
// State12User4 ...
State12User4 State12 = "User4"
// State12User5 ...
State12User5 State12 = "User5"
// State12User6 ...
State12User6 State12 = "User6"
// State12User7 ...
State12User7 State12 = "User7"
// State12User8 ...
State12User8 State12 = "User8"
// State12User9 ...
State12User9 State12 = "User9"
// State12UserDefined ...
State12UserDefined State12 = "UserDefined"
    )

// State13 enumerates the values for state 13.
type State13 string

const (
// State13Active ...
State13Active State13 = "Active"
// State13Inactive ...
State13Inactive State13 = "Inactive"
// State13Unspecified ...
State13Unspecified State13 = "Unspecified"
    )

// State14 enumerates the values for state 14.
type State14 string

const (
// State14Active ...
State14Active State14 = "Active"
// State14Inactive ...
State14Inactive State14 = "Inactive"
// State14Unspecified ...
State14Unspecified State14 = "Unspecified"
    )

// State15 enumerates the values for state 15.
type State15 string

const (
// State15Active ...
State15Active State15 = "Active"
// State15Inactive ...
State15Inactive State15 = "Inactive"
    )

// State16 enumerates the values for state 16.
type State16 string

const (
// State16Active ...
State16Active State16 = "Active"
// State16Inactive ...
State16Inactive State16 = "Inactive"
    )

// State17 enumerates the values for state 17.
type State17 string

const (
// State17Active ...
State17Active State17 = "Active"
// State17Inactive ...
State17Inactive State17 = "Inactive"
    )

// State18 enumerates the values for state 18.
type State18 string

const (
// State18Active ...
State18Active State18 = "Active"
// State18Inactive ...
State18Inactive State18 = "Inactive"
    )

// State19 enumerates the values for state 19.
type State19 string

const (
// State19Active ...
State19Active State19 = "Active"
// State19Inactive ...
State19Inactive State19 = "Inactive"
    )

// State2 enumerates the values for state 2.
type State2 string

const (
// State2Archived ...
State2Archived State2 = "Archived"
// State2Available ...
State2Available State2 = "Available"
// State2Canceled ...
State2Canceled State2 = "Canceled"
// State2Complete ...
State2Complete State2 = "Complete"
// State2Deleted ...
State2Deleted State2 = "Deleted"
// State2Locked ...
State2Locked State2 = "Locked"
// State2Rejected ...
State2Rejected State2 = "Rejected"
// State2Reviewed ...
State2Reviewed State2 = "Reviewed"
// State2ReviewedComplete ...
State2ReviewedComplete State2 = "ReviewedComplete"
// State2ReviewedRoutingSlipOpen ...
State2ReviewedRoutingSlipOpen State2 = "ReviewedRoutingSlipOpen"
// State2ReviewedSuspended ...
State2ReviewedSuspended State2 = "ReviewedSuspended"
// State2RoutingSlipOpen ...
State2RoutingSlipOpen State2 = "RoutingSlipOpen"
// State2Suspended ...
State2Suspended State2 = "Suspended"
// State2Undefined ...
State2Undefined State2 = "Undefined"
    )

// State20 enumerates the values for state 20.
type State20 string

const (
// State20Active ...
State20Active State20 = "Active"
// State20Inactive ...
State20Inactive State20 = "Inactive"
    )

// State21 enumerates the values for state 21.
type State21 string

const (
// State21Active ...
State21Active State21 = "Active"
// State21Inactive ...
State21Inactive State21 = "Inactive"
    )

// State3 enumerates the values for state 3.
type State3 string

const (
// State3Archived ...
State3Archived State3 = "Archived"
// State3Available ...
State3Available State3 = "Available"
// State3Canceled ...
State3Canceled State3 = "Canceled"
// State3Complete ...
State3Complete State3 = "Complete"
// State3Deleted ...
State3Deleted State3 = "Deleted"
// State3Locked ...
State3Locked State3 = "Locked"
// State3Rejected ...
State3Rejected State3 = "Rejected"
// State3Reviewed ...
State3Reviewed State3 = "Reviewed"
// State3ReviewedComplete ...
State3ReviewedComplete State3 = "ReviewedComplete"
// State3ReviewedRoutingSlipOpen ...
State3ReviewedRoutingSlipOpen State3 = "ReviewedRoutingSlipOpen"
// State3ReviewedSuspended ...
State3ReviewedSuspended State3 = "ReviewedSuspended"
// State3RoutingSlipOpen ...
State3RoutingSlipOpen State3 = "RoutingSlipOpen"
// State3Suspended ...
State3Suspended State3 = "Suspended"
// State3Undefined ...
State3Undefined State3 = "Undefined"
    )

// State4 enumerates the values for state 4.
type State4 string

const (
// State4Archived ...
State4Archived State4 = "Archived"
// State4Available ...
State4Available State4 = "Available"
// State4Canceled ...
State4Canceled State4 = "Canceled"
// State4Complete ...
State4Complete State4 = "Complete"
// State4Deleted ...
State4Deleted State4 = "Deleted"
// State4Locked ...
State4Locked State4 = "Locked"
// State4Rejected ...
State4Rejected State4 = "Rejected"
// State4Reviewed ...
State4Reviewed State4 = "Reviewed"
// State4ReviewedComplete ...
State4ReviewedComplete State4 = "ReviewedComplete"
// State4ReviewedRoutingSlipOpen ...
State4ReviewedRoutingSlipOpen State4 = "ReviewedRoutingSlipOpen"
// State4ReviewedSuspended ...
State4ReviewedSuspended State4 = "ReviewedSuspended"
// State4RoutingSlipOpen ...
State4RoutingSlipOpen State4 = "RoutingSlipOpen"
// State4Suspended ...
State4Suspended State4 = "Suspended"
// State4Undefined ...
State4Undefined State4 = "Undefined"
    )

// State5 enumerates the values for state 5.
type State5 string

const (
// State5Archived ...
State5Archived State5 = "Archived"
// State5Available ...
State5Available State5 = "Available"
// State5Canceled ...
State5Canceled State5 = "Canceled"
// State5Complete ...
State5Complete State5 = "Complete"
// State5Deleted ...
State5Deleted State5 = "Deleted"
// State5Locked ...
State5Locked State5 = "Locked"
// State5Rejected ...
State5Rejected State5 = "Rejected"
// State5Reviewed ...
State5Reviewed State5 = "Reviewed"
// State5ReviewedComplete ...
State5ReviewedComplete State5 = "ReviewedComplete"
// State5ReviewedRoutingSlipOpen ...
State5ReviewedRoutingSlipOpen State5 = "ReviewedRoutingSlipOpen"
// State5ReviewedSuspended ...
State5ReviewedSuspended State5 = "ReviewedSuspended"
// State5RoutingSlipOpen ...
State5RoutingSlipOpen State5 = "RoutingSlipOpen"
// State5Suspended ...
State5Suspended State5 = "Suspended"
// State5Undefined ...
State5Undefined State5 = "Undefined"
    )

// State6 enumerates the values for state 6.
type State6 string

const (
// State6None ...
State6None State6 = "None"
// State6Override ...
State6Override State6 = "Override"
// State6OverrideR ...
State6OverrideR State6 = "OverrideR"
// State6Pending ...
State6Pending State6 = "Pending"
// State6Processed ...
State6Processed State6 = "Processed"
// State6ProcessedR ...
State6ProcessedR State6 = "ProcessedR"
// State6Waiting ...
State6Waiting State6 = "Waiting"
// State6WaitingR ...
State6WaitingR State6 = "WaitingR"
    )

// State7 enumerates the values for state 7.
type State7 string

const (
// State7None ...
State7None State7 = "None"
// State7Override ...
State7Override State7 = "Override"
// State7OverrideR ...
State7OverrideR State7 = "OverrideR"
// State7Pending ...
State7Pending State7 = "Pending"
// State7Processed ...
State7Processed State7 = "Processed"
// State7ProcessedR ...
State7ProcessedR State7 = "ProcessedR"
// State7Waiting ...
State7Waiting State7 = "Waiting"
// State7WaitingR ...
State7WaitingR State7 = "WaitingR"
    )

// State8 enumerates the values for state 8.
type State8 string

const (
// State8Active ...
State8Active State8 = "Active"
// State8Inactive ...
State8Inactive State8 = "Inactive"
    )

// State9 enumerates the values for state 9.
type State9 string

const (
// State9Active ...
State9Active State9 = "Active"
// State9Inactive ...
State9Inactive State9 = "Inactive"
    )

// Status enumerates the values for status.
type Status string

const (
// StatusApproved ...
StatusApproved Status = "Approved"
// StatusApprovedR ...
StatusApprovedR Status = "ApprovedR"
// StatusNone ...
StatusNone Status = "None"
// StatusNoneR ...
StatusNoneR Status = "NoneR"
// StatusRejected ...
StatusRejected Status = "Rejected"
// StatusSuspended ...
StatusSuspended Status = "Suspended"
    )

// Status1 enumerates the values for status 1.
type Status1 string

const (
// Status1Approved ...
Status1Approved Status1 = "Approved"
// Status1ApprovedR ...
Status1ApprovedR Status1 = "ApprovedR"
// Status1None ...
Status1None Status1 = "None"
// Status1NoneR ...
Status1NoneR Status1 = "NoneR"
// Status1Rejected ...
Status1Rejected Status1 = "Rejected"
// Status1Suspended ...
Status1Suspended Status1 = "Suspended"
    )

// TaskSortColumn enumerates the values for task sort column.
type TaskSortColumn string

const (
// TaskSortColumnAddressID ...
TaskSortColumnAddressID TaskSortColumn = "AddressID"
// TaskSortColumnDescription ...
TaskSortColumnDescription TaskSortColumn = "Description"
// TaskSortColumnDrawerID ...
TaskSortColumnDrawerID TaskSortColumn = "DrawerID"
// TaskSortColumnEffectiveGroupID ...
TaskSortColumnEffectiveGroupID TaskSortColumn = "EffectiveGroupID"
// TaskSortColumnEffectiveUserID ...
TaskSortColumnEffectiveUserID TaskSortColumn = "EffectiveUserID"
// TaskSortColumnInsertionTime ...
TaskSortColumnInsertionTime TaskSortColumn = "InsertionTime"
// TaskSortColumnMessage1 ...
TaskSortColumnMessage1 TaskSortColumn = "Message1"
// TaskSortColumnMessage2 ...
TaskSortColumnMessage2 TaskSortColumn = "Message2"
// TaskSortColumnMessage3 ...
TaskSortColumnMessage3 TaskSortColumn = "Message3"
// TaskSortColumnMessage4 ...
TaskSortColumnMessage4 TaskSortColumn = "Message4"
// TaskSortColumnMessage5 ...
TaskSortColumnMessage5 TaskSortColumn = "Message5"
// TaskSortColumnNextQueueID ...
TaskSortColumnNextQueueID TaskSortColumn = "NextQueueID"
// TaskSortColumnObjectID ...
TaskSortColumnObjectID TaskSortColumn = "ObjectID"
// TaskSortColumnObjectType ...
TaskSortColumnObjectType TaskSortColumn = "ObjectType"
// TaskSortColumnOwnerGroupID ...
TaskSortColumnOwnerGroupID TaskSortColumn = "OwnerGroupID"
// TaskSortColumnOwnerUserID ...
TaskSortColumnOwnerUserID TaskSortColumn = "OwnerUserID"
// TaskSortColumnPreviousQueueID ...
TaskSortColumnPreviousQueueID TaskSortColumn = "PreviousQueueID"
// TaskSortColumnPriority ...
TaskSortColumnPriority TaskSortColumn = "Priority"
// TaskSortColumnQueueID ...
TaskSortColumnQueueID TaskSortColumn = "QueueID"
// TaskSortColumnReservedInt1 ...
TaskSortColumnReservedInt1 TaskSortColumn = "ReservedInt1"
// TaskSortColumnReservedString1 ...
TaskSortColumnReservedString1 TaskSortColumn = "ReservedString1"
// TaskSortColumnResolutionTime ...
TaskSortColumnResolutionTime TaskSortColumn = "ResolutionTime"
// TaskSortColumnState ...
TaskSortColumnState TaskSortColumn = "State"
// TaskSortColumnTaskFileAttachment ...
TaskSortColumnTaskFileAttachment TaskSortColumn = "TaskFileAttachment"
// TaskSortColumnTaskID ...
TaskSortColumnTaskID TaskSortColumn = "TaskID"
    )

// TaskSortColumn1 enumerates the values for task sort column 1.
type TaskSortColumn1 string

const (
// TaskSortColumn1AddressID ...
TaskSortColumn1AddressID TaskSortColumn1 = "AddressID"
// TaskSortColumn1Description ...
TaskSortColumn1Description TaskSortColumn1 = "Description"
// TaskSortColumn1DrawerID ...
TaskSortColumn1DrawerID TaskSortColumn1 = "DrawerID"
// TaskSortColumn1EffectiveGroupID ...
TaskSortColumn1EffectiveGroupID TaskSortColumn1 = "EffectiveGroupID"
// TaskSortColumn1EffectiveUserID ...
TaskSortColumn1EffectiveUserID TaskSortColumn1 = "EffectiveUserID"
// TaskSortColumn1InsertionTime ...
TaskSortColumn1InsertionTime TaskSortColumn1 = "InsertionTime"
// TaskSortColumn1Message1 ...
TaskSortColumn1Message1 TaskSortColumn1 = "Message1"
// TaskSortColumn1Message2 ...
TaskSortColumn1Message2 TaskSortColumn1 = "Message2"
// TaskSortColumn1Message3 ...
TaskSortColumn1Message3 TaskSortColumn1 = "Message3"
// TaskSortColumn1Message4 ...
TaskSortColumn1Message4 TaskSortColumn1 = "Message4"
// TaskSortColumn1Message5 ...
TaskSortColumn1Message5 TaskSortColumn1 = "Message5"
// TaskSortColumn1NextQueueID ...
TaskSortColumn1NextQueueID TaskSortColumn1 = "NextQueueID"
// TaskSortColumn1ObjectID ...
TaskSortColumn1ObjectID TaskSortColumn1 = "ObjectID"
// TaskSortColumn1ObjectType ...
TaskSortColumn1ObjectType TaskSortColumn1 = "ObjectType"
// TaskSortColumn1OwnerGroupID ...
TaskSortColumn1OwnerGroupID TaskSortColumn1 = "OwnerGroupID"
// TaskSortColumn1OwnerUserID ...
TaskSortColumn1OwnerUserID TaskSortColumn1 = "OwnerUserID"
// TaskSortColumn1PreviousQueueID ...
TaskSortColumn1PreviousQueueID TaskSortColumn1 = "PreviousQueueID"
// TaskSortColumn1Priority ...
TaskSortColumn1Priority TaskSortColumn1 = "Priority"
// TaskSortColumn1QueueID ...
TaskSortColumn1QueueID TaskSortColumn1 = "QueueID"
// TaskSortColumn1ReservedInt1 ...
TaskSortColumn1ReservedInt1 TaskSortColumn1 = "ReservedInt1"
// TaskSortColumn1ReservedString1 ...
TaskSortColumn1ReservedString1 TaskSortColumn1 = "ReservedString1"
// TaskSortColumn1ResolutionTime ...
TaskSortColumn1ResolutionTime TaskSortColumn1 = "ResolutionTime"
// TaskSortColumn1State ...
TaskSortColumn1State TaskSortColumn1 = "State"
// TaskSortColumn1TaskFileAttachment ...
TaskSortColumn1TaskFileAttachment TaskSortColumn1 = "TaskFileAttachment"
// TaskSortColumn1TaskID ...
TaskSortColumn1TaskID TaskSortColumn1 = "TaskID"
    )

// TaskSortColumn2 enumerates the values for task sort column 2.
type TaskSortColumn2 string

const (
// TaskSortColumn2AddressID ...
TaskSortColumn2AddressID TaskSortColumn2 = "AddressID"
// TaskSortColumn2Description ...
TaskSortColumn2Description TaskSortColumn2 = "Description"
// TaskSortColumn2DrawerID ...
TaskSortColumn2DrawerID TaskSortColumn2 = "DrawerID"
// TaskSortColumn2EffectiveGroupID ...
TaskSortColumn2EffectiveGroupID TaskSortColumn2 = "EffectiveGroupID"
// TaskSortColumn2EffectiveUserID ...
TaskSortColumn2EffectiveUserID TaskSortColumn2 = "EffectiveUserID"
// TaskSortColumn2InsertionTime ...
TaskSortColumn2InsertionTime TaskSortColumn2 = "InsertionTime"
// TaskSortColumn2Message1 ...
TaskSortColumn2Message1 TaskSortColumn2 = "Message1"
// TaskSortColumn2Message2 ...
TaskSortColumn2Message2 TaskSortColumn2 = "Message2"
// TaskSortColumn2Message3 ...
TaskSortColumn2Message3 TaskSortColumn2 = "Message3"
// TaskSortColumn2Message4 ...
TaskSortColumn2Message4 TaskSortColumn2 = "Message4"
// TaskSortColumn2Message5 ...
TaskSortColumn2Message5 TaskSortColumn2 = "Message5"
// TaskSortColumn2NextQueueID ...
TaskSortColumn2NextQueueID TaskSortColumn2 = "NextQueueID"
// TaskSortColumn2ObjectID ...
TaskSortColumn2ObjectID TaskSortColumn2 = "ObjectID"
// TaskSortColumn2ObjectType ...
TaskSortColumn2ObjectType TaskSortColumn2 = "ObjectType"
// TaskSortColumn2OwnerGroupID ...
TaskSortColumn2OwnerGroupID TaskSortColumn2 = "OwnerGroupID"
// TaskSortColumn2OwnerUserID ...
TaskSortColumn2OwnerUserID TaskSortColumn2 = "OwnerUserID"
// TaskSortColumn2PreviousQueueID ...
TaskSortColumn2PreviousQueueID TaskSortColumn2 = "PreviousQueueID"
// TaskSortColumn2Priority ...
TaskSortColumn2Priority TaskSortColumn2 = "Priority"
// TaskSortColumn2QueueID ...
TaskSortColumn2QueueID TaskSortColumn2 = "QueueID"
// TaskSortColumn2ReservedInt1 ...
TaskSortColumn2ReservedInt1 TaskSortColumn2 = "ReservedInt1"
// TaskSortColumn2ReservedString1 ...
TaskSortColumn2ReservedString1 TaskSortColumn2 = "ReservedString1"
// TaskSortColumn2ResolutionTime ...
TaskSortColumn2ResolutionTime TaskSortColumn2 = "ResolutionTime"
// TaskSortColumn2State ...
TaskSortColumn2State TaskSortColumn2 = "State"
// TaskSortColumn2TaskFileAttachment ...
TaskSortColumn2TaskFileAttachment TaskSortColumn2 = "TaskFileAttachment"
// TaskSortColumn2TaskID ...
TaskSortColumn2TaskID TaskSortColumn2 = "TaskID"
    )

// Type enumerates the values for type.
type Type string

const (
// EntityLink ...
EntityLink Type = "EntityLink"
// Standard ...
Standard Type = "Standard"
// WebLink ...
WebLink Type = "WebLink"
    )

// Type1 enumerates the values for type 1.
type Type1 string

const (
// Type1EntityLink ...
Type1EntityLink Type1 = "EntityLink"
// Type1Standard ...
Type1Standard Type1 = "Standard"
// Type1WebLink ...
Type1WebLink Type1 = "WebLink"
    )

// Type10 enumerates the values for type 10.
type Type10 string

const (
// Access ...
Access Type10 = "Access"
// Generic ...
Generic Type10 = "Generic"
// Role ...
Role Type10 = "Role"
    )

// Type11 enumerates the values for type 11.
type Type11 string

const (
// Type11Access ...
Type11Access Type11 = "Access"
// Type11Generic ...
Type11Generic Type11 = "Generic"
// Type11Role ...
Type11Role Type11 = "Role"
    )

// Type12 enumerates the values for type 12.
type Type12 string

const (
// Type12Primary ...
Type12Primary Type12 = "Primary"
// Type12Secondary ...
Type12Secondary Type12 = "Secondary"
// Type12Unspecified ...
Type12Unspecified Type12 = "Unspecified"
    )

// Type13 enumerates the values for type 13.
type Type13 string

const (
// Type13Primary ...
Type13Primary Type13 = "Primary"
// Type13Secondary ...
Type13Secondary Type13 = "Secondary"
// Type13Unspecified ...
Type13Unspecified Type13 = "Unspecified"
    )

// Type14 enumerates the values for type 14.
type Type14 string

const (
// Type14Primary ...
Type14Primary Type14 = "Primary"
// Type14Secondary ...
Type14Secondary Type14 = "Secondary"
// Type14Unspecified ...
Type14Unspecified Type14 = "Unspecified"
    )

// Type15 enumerates the values for type 15.
type Type15 string

const (
// Type15Access ...
Type15Access Type15 = "Access"
// Type15Any ...
Type15Any Type15 = "Any"
// Type15CdoFolder ...
Type15CdoFolder Type15 = "CdoFolder"
// Type15CdoInfostore ...
Type15CdoInfostore Type15 = "CdoInfostore"
// Type15Fax ...
Type15Fax Type15 = "Fax"
// Type15Inbound ...
Type15Inbound Type15 = "Inbound"
// Type15Ocr ...
Type15Ocr Type15 = "Ocr"
// Type15Other ...
Type15Other Type15 = "Other"
// Type15Outbound ...
Type15Outbound Type15 = "Outbound"
// Type15Print ...
Type15Print Type15 = "Print"
// Type15Public ...
Type15Public Type15 = "Public"
// Type15Recycle ...
Type15Recycle Type15 = "Recycle"
// Type15Scan ...
Type15Scan Type15 = "Scan"
// Type15Schedule ...
Type15Schedule Type15 = "Schedule"
// Type15Shared ...
Type15Shared Type15 = "Shared"
// Type15System ...
Type15System Type15 = "System"
// Type15Workflow ...
Type15Workflow Type15 = "Workflow"
    )

// Type16 enumerates the values for type 16.
type Type16 string

const (
// Type16Access ...
Type16Access Type16 = "Access"
// Type16Any ...
Type16Any Type16 = "Any"
// Type16CdoFolder ...
Type16CdoFolder Type16 = "CdoFolder"
// Type16CdoInfostore ...
Type16CdoInfostore Type16 = "CdoInfostore"
// Type16Fax ...
Type16Fax Type16 = "Fax"
// Type16Inbound ...
Type16Inbound Type16 = "Inbound"
// Type16Ocr ...
Type16Ocr Type16 = "Ocr"
// Type16Other ...
Type16Other Type16 = "Other"
// Type16Outbound ...
Type16Outbound Type16 = "Outbound"
// Type16Print ...
Type16Print Type16 = "Print"
// Type16Public ...
Type16Public Type16 = "Public"
// Type16Recycle ...
Type16Recycle Type16 = "Recycle"
// Type16Scan ...
Type16Scan Type16 = "Scan"
// Type16Schedule ...
Type16Schedule Type16 = "Schedule"
// Type16Shared ...
Type16Shared Type16 = "Shared"
// Type16System ...
Type16System Type16 = "System"
// Type16Workflow ...
Type16Workflow Type16 = "Workflow"
    )

// Type17 enumerates the values for type 17.
type Type17 string

const (
// Type17Access ...
Type17Access Type17 = "Access"
// Type17Any ...
Type17Any Type17 = "Any"
// Type17CdoFolder ...
Type17CdoFolder Type17 = "CdoFolder"
// Type17CdoInfostore ...
Type17CdoInfostore Type17 = "CdoInfostore"
// Type17Fax ...
Type17Fax Type17 = "Fax"
// Type17Inbound ...
Type17Inbound Type17 = "Inbound"
// Type17Ocr ...
Type17Ocr Type17 = "Ocr"
// Type17Other ...
Type17Other Type17 = "Other"
// Type17Outbound ...
Type17Outbound Type17 = "Outbound"
// Type17Print ...
Type17Print Type17 = "Print"
// Type17Public ...
Type17Public Type17 = "Public"
// Type17Recycle ...
Type17Recycle Type17 = "Recycle"
// Type17Scan ...
Type17Scan Type17 = "Scan"
// Type17Schedule ...
Type17Schedule Type17 = "Schedule"
// Type17Shared ...
Type17Shared Type17 = "Shared"
// Type17System ...
Type17System Type17 = "System"
// Type17Workflow ...
Type17Workflow Type17 = "Workflow"
    )

// Type18 enumerates the values for type 18.
type Type18 string

const (
// Type18Access ...
Type18Access Type18 = "Access"
// Type18Any ...
Type18Any Type18 = "Any"
// Type18CdoFolder ...
Type18CdoFolder Type18 = "CdoFolder"
// Type18CdoInfostore ...
Type18CdoInfostore Type18 = "CdoInfostore"
// Type18Fax ...
Type18Fax Type18 = "Fax"
// Type18Inbound ...
Type18Inbound Type18 = "Inbound"
// Type18Ocr ...
Type18Ocr Type18 = "Ocr"
// Type18Other ...
Type18Other Type18 = "Other"
// Type18Outbound ...
Type18Outbound Type18 = "Outbound"
// Type18Print ...
Type18Print Type18 = "Print"
// Type18Public ...
Type18Public Type18 = "Public"
// Type18Recycle ...
Type18Recycle Type18 = "Recycle"
// Type18Scan ...
Type18Scan Type18 = "Scan"
// Type18Schedule ...
Type18Schedule Type18 = "Schedule"
// Type18Shared ...
Type18Shared Type18 = "Shared"
// Type18System ...
Type18System Type18 = "System"
// Type18Workflow ...
Type18Workflow Type18 = "Workflow"
    )

// Type19 enumerates the values for type 19.
type Type19 string

const (
// AdminDesk ...
AdminDesk Type19 = "AdminDesk"
// Benchmark ...
Benchmark Type19 = "Benchmark"
// CaptureDesk ...
CaptureDesk Type19 = "CaptureDesk"
// ColdDesk ...
ColdDesk Type19 = "ColdDesk"
// DocumentDesk ...
DocumentDesk Type19 = "DocumentDesk"
// FaxDesk ...
FaxDesk Type19 = "FaxDesk"
// ImageDesk ...
ImageDesk Type19 = "ImageDesk"
// PortalDesk ...
PortalDesk Type19 = "PortalDesk"
// PortalUser ...
PortalUser Type19 = "PortalUser"
// Poweruser ...
Poweruser Type19 = "Poweruser"
// PublishDesk ...
PublishDesk Type19 = "PublishDesk"
// RecognitionDesk ...
RecognitionDesk Type19 = "RecognitionDesk"
// ReportDesk ...
ReportDesk Type19 = "ReportDesk"
// WorkflowArchitect ...
WorkflowArchitect Type19 = "WorkflowArchitect"
// WorkflowDesk ...
WorkflowDesk Type19 = "WorkflowDesk"
    )

// Type2 enumerates the values for type 2.
type Type2 string

const (
// Type2DDE ...
Type2DDE Type2 = "DDE"
// Type2Debug ...
Type2Debug Type2 = "Debug"
// Type2Fatal ...
Type2Fatal Type2 = "Fatal"
// Type2Info ...
Type2Info Type2 = "Info"
// Type2Process ...
Type2Process Type2 = "Process"
// Type2RPC ...
Type2RPC Type2 = "RPC"
// Type2SQL ...
Type2SQL Type2 = "SQL"
// Type2Undefined ...
Type2Undefined Type2 = "Undefined"
// Type2Warning ...
Type2Warning Type2 = "Warning"
    )

// Type20 enumerates the values for type 20.
type Type20 string

const (
// Type20AdminDesk ...
Type20AdminDesk Type20 = "AdminDesk"
// Type20Benchmark ...
Type20Benchmark Type20 = "Benchmark"
// Type20CaptureDesk ...
Type20CaptureDesk Type20 = "CaptureDesk"
// Type20ColdDesk ...
Type20ColdDesk Type20 = "ColdDesk"
// Type20DocumentDesk ...
Type20DocumentDesk Type20 = "DocumentDesk"
// Type20FaxDesk ...
Type20FaxDesk Type20 = "FaxDesk"
// Type20ImageDesk ...
Type20ImageDesk Type20 = "ImageDesk"
// Type20PortalDesk ...
Type20PortalDesk Type20 = "PortalDesk"
// Type20PortalUser ...
Type20PortalUser Type20 = "PortalUser"
// Type20Poweruser ...
Type20Poweruser Type20 = "Poweruser"
// Type20PublishDesk ...
Type20PublishDesk Type20 = "PublishDesk"
// Type20RecognitionDesk ...
Type20RecognitionDesk Type20 = "RecognitionDesk"
// Type20ReportDesk ...
Type20ReportDesk Type20 = "ReportDesk"
// Type20WorkflowArchitect ...
Type20WorkflowArchitect Type20 = "WorkflowArchitect"
// Type20WorkflowDesk ...
Type20WorkflowDesk Type20 = "WorkflowDesk"
    )

// Type21 enumerates the values for type 21.
type Type21 string

const (
// Type21AdminDesk ...
Type21AdminDesk Type21 = "AdminDesk"
// Type21Benchmark ...
Type21Benchmark Type21 = "Benchmark"
// Type21CaptureDesk ...
Type21CaptureDesk Type21 = "CaptureDesk"
// Type21ColdDesk ...
Type21ColdDesk Type21 = "ColdDesk"
// Type21DocumentDesk ...
Type21DocumentDesk Type21 = "DocumentDesk"
// Type21FaxDesk ...
Type21FaxDesk Type21 = "FaxDesk"
// Type21ImageDesk ...
Type21ImageDesk Type21 = "ImageDesk"
// Type21PortalDesk ...
Type21PortalDesk Type21 = "PortalDesk"
// Type21PortalUser ...
Type21PortalUser Type21 = "PortalUser"
// Type21Poweruser ...
Type21Poweruser Type21 = "Poweruser"
// Type21PublishDesk ...
Type21PublishDesk Type21 = "PublishDesk"
// Type21RecognitionDesk ...
Type21RecognitionDesk Type21 = "RecognitionDesk"
// Type21ReportDesk ...
Type21ReportDesk Type21 = "ReportDesk"
// Type21WorkflowArchitect ...
Type21WorkflowArchitect Type21 = "WorkflowArchitect"
// Type21WorkflowDesk ...
Type21WorkflowDesk Type21 = "WorkflowDesk"
    )

// Type22 enumerates the values for type 22.
type Type22 string

const (
// Type22AdminDesk ...
Type22AdminDesk Type22 = "AdminDesk"
// Type22Benchmark ...
Type22Benchmark Type22 = "Benchmark"
// Type22CaptureDesk ...
Type22CaptureDesk Type22 = "CaptureDesk"
// Type22ColdDesk ...
Type22ColdDesk Type22 = "ColdDesk"
// Type22DocumentDesk ...
Type22DocumentDesk Type22 = "DocumentDesk"
// Type22FaxDesk ...
Type22FaxDesk Type22 = "FaxDesk"
// Type22ImageDesk ...
Type22ImageDesk Type22 = "ImageDesk"
// Type22PortalDesk ...
Type22PortalDesk Type22 = "PortalDesk"
// Type22PortalUser ...
Type22PortalUser Type22 = "PortalUser"
// Type22Poweruser ...
Type22Poweruser Type22 = "Poweruser"
// Type22PublishDesk ...
Type22PublishDesk Type22 = "PublishDesk"
// Type22RecognitionDesk ...
Type22RecognitionDesk Type22 = "RecognitionDesk"
// Type22ReportDesk ...
Type22ReportDesk Type22 = "ReportDesk"
// Type22WorkflowArchitect ...
Type22WorkflowArchitect Type22 = "WorkflowArchitect"
// Type22WorkflowDesk ...
Type22WorkflowDesk Type22 = "WorkflowDesk"
    )

// Type23 enumerates the values for type 23.
type Type23 string

const (
// Type23Access ...
Type23Access Type23 = "Access"
// Type23Any ...
Type23Any Type23 = "Any"
// Type23CdoFolder ...
Type23CdoFolder Type23 = "CdoFolder"
// Type23CdoInfostore ...
Type23CdoInfostore Type23 = "CdoInfostore"
// Type23Fax ...
Type23Fax Type23 = "Fax"
// Type23Inbound ...
Type23Inbound Type23 = "Inbound"
// Type23Ocr ...
Type23Ocr Type23 = "Ocr"
// Type23Other ...
Type23Other Type23 = "Other"
// Type23Outbound ...
Type23Outbound Type23 = "Outbound"
// Type23Print ...
Type23Print Type23 = "Print"
// Type23Public ...
Type23Public Type23 = "Public"
// Type23Recycle ...
Type23Recycle Type23 = "Recycle"
// Type23Scan ...
Type23Scan Type23 = "Scan"
// Type23Schedule ...
Type23Schedule Type23 = "Schedule"
// Type23Shared ...
Type23Shared Type23 = "Shared"
// Type23System ...
Type23System Type23 = "System"
// Type23Workflow ...
Type23Workflow Type23 = "Workflow"
    )

// Type3 enumerates the values for type 3.
type Type3 string

const (
// Type3DDE ...
Type3DDE Type3 = "DDE"
// Type3Debug ...
Type3Debug Type3 = "Debug"
// Type3Fatal ...
Type3Fatal Type3 = "Fatal"
// Type3Info ...
Type3Info Type3 = "Info"
// Type3Process ...
Type3Process Type3 = "Process"
// Type3RPC ...
Type3RPC Type3 = "RPC"
// Type3SQL ...
Type3SQL Type3 = "SQL"
// Type3Undefined ...
Type3Undefined Type3 = "Undefined"
// Type3Warning ...
Type3Warning Type3 = "Warning"
    )

// Type4 enumerates the values for type 4.
type Type4 string

const (
// Type4Dde ...
Type4Dde Type4 = "Dde"
// Type4Debug ...
Type4Debug Type4 = "Debug"
// Type4Fatal ...
Type4Fatal Type4 = "Fatal"
// Type4Info ...
Type4Info Type4 = "Info"
// Type4None ...
Type4None Type4 = "None"
// Type4Process ...
Type4Process Type4 = "Process"
// Type4RPC ...
Type4RPC Type4 = "Rpc"
// Type4SQL ...
Type4SQL Type4 = "Sql"
// Type4Warning ...
Type4Warning Type4 = "Warning"
// Type4Workflow ...
Type4Workflow Type4 = "Workflow"
    )

// Type5 enumerates the values for type 5.
type Type5 string

const (
// Type5Dde ...
Type5Dde Type5 = "Dde"
// Type5Debug ...
Type5Debug Type5 = "Debug"
// Type5Fatal ...
Type5Fatal Type5 = "Fatal"
// Type5Info ...
Type5Info Type5 = "Info"
// Type5None ...
Type5None Type5 = "None"
// Type5Process ...
Type5Process Type5 = "Process"
// Type5RPC ...
Type5RPC Type5 = "Rpc"
// Type5SQL ...
Type5SQL Type5 = "Sql"
// Type5Warning ...
Type5Warning Type5 = "Warning"
// Type5Workflow ...
Type5Workflow Type5 = "Workflow"
    )

// Type6 enumerates the values for type 6.
type Type6 string

const (
// Type6ComboBoxItem ...
Type6ComboBoxItem Type6 = "ComboBoxItem"
// Type6ForwardAction ...
Type6ForwardAction Type6 = "ForwardAction"
// Type6ListBoxItem ...
Type6ListBoxItem Type6 = "ListBoxItem"
// Type6RadioButton ...
Type6RadioButton Type6 = "RadioButton"
// Type6ReplyAction ...
Type6ReplyAction Type6 = "ReplyAction"
// Type6Undefined ...
Type6Undefined Type6 = "Undefined"
    )

// Type7 enumerates the values for type 7.
type Type7 string

const (
// Type7CheckBox ...
Type7CheckBox Type7 = "CheckBox"
// Type7ComboBox ...
Type7ComboBox Type7 = "ComboBox"
// Type7ComboString ...
Type7ComboString Type7 = "ComboString"
// Type7DateTime ...
Type7DateTime Type7 = "DateTime"
// Type7Double ...
Type7Double Type7 = "Double"
// Type7Integer ...
Type7Integer Type7 = "Integer"
// Type7LargeText ...
Type7LargeText Type7 = "LargeText"
// Type7ListBox ...
Type7ListBox Type7 = "ListBox"
// Type7Paragraph ...
Type7Paragraph Type7 = "Paragraph"
// Type7RadioButton ...
Type7RadioButton Type7 = "RadioButton"
// Type7String ...
Type7String Type7 = "String"
// Type7Table ...
Type7Table Type7 = "Table"
// Type7Undefined ...
Type7Undefined Type7 = "Undefined"
    )

// Type8 enumerates the values for type 8.
type Type8 string

const (
// Type8Access ...
Type8Access Type8 = "Access"
// Type8Generic ...
Type8Generic Type8 = "Generic"
// Type8Role ...
Type8Role Type8 = "Role"
    )

// Type9 enumerates the values for type 9.
type Type9 string

const (
// Type9Access ...
Type9Access Type9 = "Access"
// Type9Generic ...
Type9Generic Type9 = "Generic"
// Type9Role ...
Type9Role Type9 = "Role"
    )

// UpdateAction enumerates the values for update action.
type UpdateAction string

const (
// UpdateActionAdd ...
UpdateActionAdd UpdateAction = "Add"
// UpdateActionNone ...
UpdateActionNone UpdateAction = "None"
// UpdateActionRemove ...
UpdateActionRemove UpdateAction = "Remove"
// UpdateActionUpdate ...
UpdateActionUpdate UpdateAction = "Update"
    )

// WorkflowType enumerates the values for workflow type.
type WorkflowType string

const (
// Any ...
Any WorkflowType = "Any"
// Auto ...
Auto WorkflowType = "Auto"
// Exception ...
Exception WorkflowType = "Exception"
// Holding ...
Holding WorkflowType = "Holding"
// StraightThrough ...
StraightThrough WorkflowType = "StraightThrough"
// Uncategorized ...
Uncategorized WorkflowType = "Uncategorized"
    )

// ApplicationModel the model that is sent in response to a GET request for Application
type ApplicationModel struct {
    autorest.Response `json:"-"`
    // ID - Gets or sets the identifier.
    ID *int32 `json:"ID,omitempty"`
    // Name - Gets or sets the name.
    Name *string `json:"Name,omitempty"`
}

// AttachmentModel the model that is sent in response to a GET request for Attachment
type AttachmentModel struct {
    autorest.Response `json:"-"`
    // Type - Gets or sets the type. Possible values include: 'Type1Standard', 'Type1EntityLink', 'Type1WebLink'
    Type Type `json:"Type,omitempty"`
    // Size - Gets or sets the size.
    Size *int64 `json:"Size,omitempty"`
    // Extension - Gets or sets the extension.
    Extension *string `json:"Extension,omitempty"`
    // FileName - Gets or sets the filename.
    FileName *string `json:"FileName,omitempty"`
    // Version - Gets or sets the version.
    Version *int32 `json:"Version,omitempty"`
    // Release - Gets or sets the release.
    Release *int32 `json:"Release,omitempty"`
    // Category - Gets or sets the category.
    Category *int32 `json:"Category,omitempty"`
    // ID - Gets or sets the identifier.
    ID *int32 `json:"ID,omitempty"`
    // DrawerID - Gets or sets the drawer identifier.
    DrawerID *int32 `json:"DrawerID,omitempty"`
    // EntityID - Gets or sets the entity identifier.
    EntityID *int32 `json:"EntityID,omitempty"`
    // OwnerUserID - Gets or sets the owner user identifier.
    OwnerUserID *int32 `json:"OwnerUserID,omitempty"`
    // OwnerUserFullName - Gets or sets the full name of the owner user.
    OwnerUserFullName *string `json:"OwnerUserFullName,omitempty"`
    // OwnerGroupID - Gets or sets the owner group identifier.
    OwnerGroupID *int32 `json:"OwnerGroupID,omitempty"`
    // OwnerGroupName - Gets or sets the name of the owner group.
    OwnerGroupName *string `json:"OwnerGroupName,omitempty"`
    // IncluderUserID - Gets or sets the includer user identifier.
    IncluderUserID *int32 `json:"IncluderUserID,omitempty"`
    // IncluderUserFullName - Gets or sets the full name of the includer user.
    IncluderUserFullName *string `json:"IncluderUserFullName,omitempty"`
    // ModifierUserID - Gets or sets the modifier user identifier.
    ModifierUserID *int32 `json:"ModifierUserID,omitempty"`
    // ModifierUserFullName - Gets or sets the full name of the modifier user.
    ModifierUserFullName *string `json:"ModifierUserFullName,omitempty"`
    // InsertionTime - Gets or sets the insertion time.
    InsertionTime *date.Time `json:"InsertionTime,omitempty"`
    // ModificationTime - Gets or sets the modification time.
    ModificationTime *date.Time `json:"ModificationTime,omitempty"`
    // Class - Gets or sets the class.
    Class *int32 `json:"Class,omitempty"`
    // Name - Gets or sets the name.
    Name *string `json:"Name,omitempty"`
    // ACL - Gets or sets the acl.
    ACL *int32 `json:"Acl,omitempty"`
    // PageNumber - Gets or sets the page number.
    PageNumber *int32 `json:"PageNumber,omitempty"`
    // State - Gets or sets the state. Possible values include: 'StateUndefined', 'StateMaxStates', 'StateReserved', 'StateUserDefined', 'StateDynamic', 'StateStatic', 'StateNew', 'StateCheckedOut', 'StateInternal', 'StateStatres5', 'StateLinked', 'StateStatres4', 'StateStatres3', 'StateStatres2', 'StateStatres1', 'StateLocked', 'StateOnServerCache', 'StateOnClientCache', 'StateFetching', 'StateDynres4', 'StateDynres3', 'StateDynres2', 'StateDynres1', 'StateUser1', 'StateUser2', 'StateUser3', 'StateUser4', 'StateUser5', 'StateUser6', 'StateUser7', 'StateUser8', 'StateUser9', 'StateUser10', 'StateUser11', 'StateUser12', 'StateUser13', 'StateUser14', 'StateUser15', 'StateUser16'
    State State `json:"State,omitempty"`
    // Note - Gets or sets the note.
    Note *string `json:"Note,omitempty"`
}

// AttachmentVersionModel attachment Version Model
type AttachmentVersionModel struct {
    // Version - Gets or sets the indexed version value.
    Version *int32 `json:"Version,omitempty"`
    // AttachmentID - Gets or sets the attachment identifier.
    AttachmentID *int32 `json:"AttachmentID,omitempty"`
    // Name - Gets or sets the string.
    Name *string `json:"Name,omitempty"`
    // CreatorUserID - Gets or sets the creator identifier.
    CreatorUserID *int32 `json:"CreatorUserID,omitempty"`
    // AccessorUserID - Gets or sets the identifier of the user who accessed the attachment version.
    AccessorUserID *int32 `json:"AccessorUserID,omitempty"`
    // AccessTime - Gets or sets the time the version was last accessed.
    AccessTime *date.Time `json:"AccessTime,omitempty"`
    // CreationTime - Gets or sets the creation time of the attachment version.
    CreationTime *date.Time `json:"CreationTime,omitempty"`
    // ModificationTime - Gets or sets the modification time of the attachment version.
    ModificationTime *date.Time `json:"ModificationTime,omitempty"`
    // Comment - Gets or sets the description comment of changes that were made.
    Comment *string `json:"Comment,omitempty"`
    // ReservedInt1 - Gets or sets the reserved int1.
    ReservedInt1 *int32 `json:"ReservedInt1,omitempty"`
    // ReservedInt2 - Gets or sets the reserved int2.
    ReservedInt2 *int32 `json:"ReservedInt2,omitempty"`
    // ReservedInt3 - Gets or sets the reserved int3.
    ReservedInt3 *int32 `json:"ReservedInt3,omitempty"`
    // ReservedInt4 - Gets or sets the reserved int4.
    ReservedInt4 *int32 `json:"ReservedInt4,omitempty"`
    // ReservedString1 - Gets or sets the reserved string1.
    ReservedString1 *string `json:"ReservedString1,omitempty"`
    // ReservedString2 - Gets or sets the reserved string2.
    ReservedString2 *string `json:"ReservedString2,omitempty"`
}

// DrawerBase the Drawer Base class.
type DrawerBase struct {
    // Name - Gets or sets the name.
    Name *string `json:"Name,omitempty"`
    // Edition - Gets or sets the edition.
    Edition *int32 `json:"Edition,omitempty"`
    // State - Gets or sets the state.
    State *int32 `json:"State,omitempty"`
    // EntityFeature - Gets or sets the entity feature.
    EntityFeature *int32 `json:"EntityFeature,omitempty"`
    // AttachmentFeature - Gets or sets the attachment feature.
    AttachmentFeature *int32 `json:"AttachmentFeature,omitempty"`
    // NoteFeature - Gets or sets the note feature.
    NoteFeature *int32 `json:"NoteFeature,omitempty"`
    // ReservedInt1 - Gets or sets the reserved integer 1.
    ReservedInt1 *int32 `json:"ReservedInt1,omitempty"`
    // ReservedInt2 - Gets or sets the reserved integer 2.
    ReservedInt2 *int32 `json:"ReservedInt2,omitempty"`
    // ReservedString1 - Gets or sets the reserved string1.
    ReservedString1 *string `json:"ReservedString1,omitempty"`
    // ReservedString2 - Gets or sets the reserved string2.
    ReservedString2 *string `json:"ReservedString2,omitempty"`
}

// DrawerModel the model that is sent in response to a GET request for Drawers
type DrawerModel struct {
    autorest.Response `json:"-"`
    // ID - Gets or sets the identifier.
    ID *int32 `json:"ID,omitempty"`
    // CabinetID - Gets or sets the cabinet identifier.
    CabinetID *int32 `json:"CabinetID,omitempty"`
    // UserID - Gets or sets the user identifier.
    UserID *int32 `json:"UserID,omitempty"`
    // UserFullName - Gets or sets the full name of the user.
    UserFullName *string `json:"UserFullName,omitempty"`
    // Name - Gets or sets the name.
    Name *string `json:"Name,omitempty"`
    // Edition - Gets or sets the edition.
    Edition *int32 `json:"Edition,omitempty"`
    // State - Gets or sets the state.
    State *int32 `json:"State,omitempty"`
    // EntityFeature - Gets or sets the entity feature.
    EntityFeature *int32 `json:"EntityFeature,omitempty"`
    // AttachmentFeature - Gets or sets the attachment feature.
    AttachmentFeature *int32 `json:"AttachmentFeature,omitempty"`
    // NoteFeature - Gets or sets the note feature.
    NoteFeature *int32 `json:"NoteFeature,omitempty"`
    // ReservedInt1 - Gets or sets the reserved integer 1.
    ReservedInt1 *int32 `json:"ReservedInt1,omitempty"`
    // ReservedInt2 - Gets or sets the reserved integer 2.
    ReservedInt2 *int32 `json:"ReservedInt2,omitempty"`
    // ReservedString1 - Gets or sets the reserved string1.
    ReservedString1 *string `json:"ReservedString1,omitempty"`
    // ReservedString2 - Gets or sets the reserved string2.
    ReservedString2 *string `json:"ReservedString2,omitempty"`
}

// EntityContentModel entity Content Model
type EntityContentModel struct {
    // EntityContent - Gets or sets the content of the entity. Possible values include: 'EntityContentNone', 'EntityContentAll', 'EntityContentProfiles', 'EntityContentAttachments', 'EntityContentNotes', 'EntityContentLinks', 'EntityContentEvents'
    EntityContent EntityContent `json:"EntityContent,omitempty"`
}

// EntityDefinitionBase the entity definition base, also acts as the insert model.
type EntityDefinitionBase struct {
    // Type - Gets or sets the type of template.
    Type *int32 `json:"Type,omitempty"`
    // Category - Gets or sets the category of template.
    Category *string `json:"Category,omitempty"`
    // Name - Gets or sets the name of template.
    Name *string `json:"Name,omitempty"`
    // HasClass - Gets or sets if the template has classes.
    HasClass *bool `json:"HasClass,omitempty"`
    // HasSecurity - Gets or sets if the template has security.
    HasSecurity *bool `json:"HasSecurity,omitempty"`
    // HasProfiles - Gets or sets if the template has profiles.
    HasProfiles *bool `json:"HasProfiles,omitempty"`
    // HasItems - Gets or sets the has items.
    HasItems *bool `json:"HasItems,omitempty"`
    // SmallImage - Gets or sets the small image.
    SmallImage *string `json:"SmallImage,omitempty"`
    // LargeImage - Gets or sets the large image.
    LargeImage *string `json:"LargeImage,omitempty"`
    // HasAudit - Gets or sets if the template has auditing enabled.
    HasAudit *bool `json:"HasAudit,omitempty"`
    // AllowsViewImages - Gets or sets if the template allows viewing images.
    AllowsViewImages *bool `json:"AllowsViewImages,omitempty"`
    // IsReviewState - Gets or sets if the entity is created in a review state.
    IsReviewState *bool `json:"IsReviewState,omitempty"`
    // ReservedString1 - Gets or sets the reserved string1.
    ReservedString1 *string `json:"ReservedString1,omitempty"`
    // ReservedString2 - Gets or sets the reserved string2.
    ReservedString2 *string `json:"ReservedString2,omitempty"`
    // ReservedInt1 - Gets or sets the reserved int1.
    ReservedInt1 *int32 `json:"ReservedInt1,omitempty"`
    // ReservedInt2 - Gets or sets the reserved int2.
    ReservedInt2 *int32 `json:"ReservedInt2,omitempty"`
    // Drawers - Gets or sets the drawers.
    Drawers *[]int32 `json:"Drawers,omitempty"`
    // Profiles - Gets or sets the profiles.
    Profiles *[]ProfileDefinitionModel `json:"Profiles,omitempty"`
}

// EntityDefinitionModel model for entity templates
type EntityDefinitionModel struct {
    autorest.Response `json:"-"`
    // ID - Gets or sets the identifier.
    ID *string `json:"ID,omitempty"`
    // CreationTime - Gets or sets the creation time.
    CreationTime *date.Time `json:"CreationTime,omitempty"`
    // ModificationTime - Gets or sets the modification time.
    ModificationTime *date.Time `json:"ModificationTime,omitempty"`
    // Type - Gets or sets the type of template.
    Type *int32 `json:"Type,omitempty"`
    // Category - Gets or sets the category of template.
    Category *string `json:"Category,omitempty"`
    // Name - Gets or sets the name of template.
    Name *string `json:"Name,omitempty"`
    // HasClass - Gets or sets if the template has classes.
    HasClass *bool `json:"HasClass,omitempty"`
    // HasSecurity - Gets or sets if the template has security.
    HasSecurity *bool `json:"HasSecurity,omitempty"`
    // HasProfiles - Gets or sets if the template has profiles.
    HasProfiles *bool `json:"HasProfiles,omitempty"`
    // HasItems - Gets or sets the has items.
    HasItems *bool `json:"HasItems,omitempty"`
    // SmallImage - Gets or sets the small image.
    SmallImage *string `json:"SmallImage,omitempty"`
    // LargeImage - Gets or sets the large image.
    LargeImage *string `json:"LargeImage,omitempty"`
    // HasAudit - Gets or sets if the template has auditing enabled.
    HasAudit *bool `json:"HasAudit,omitempty"`
    // AllowsViewImages - Gets or sets if the template allows viewing images.
    AllowsViewImages *bool `json:"AllowsViewImages,omitempty"`
    // IsReviewState - Gets or sets if the entity is created in a review state.
    IsReviewState *bool `json:"IsReviewState,omitempty"`
    // ReservedString1 - Gets or sets the reserved string1.
    ReservedString1 *string `json:"ReservedString1,omitempty"`
    // ReservedString2 - Gets or sets the reserved string2.
    ReservedString2 *string `json:"ReservedString2,omitempty"`
    // ReservedInt1 - Gets or sets the reserved int1.
    ReservedInt1 *int32 `json:"ReservedInt1,omitempty"`
    // ReservedInt2 - Gets or sets the reserved int2.
    ReservedInt2 *int32 `json:"ReservedInt2,omitempty"`
    // Drawers - Gets or sets the drawers.
    Drawers *[]int32 `json:"Drawers,omitempty"`
    // Profiles - Gets or sets the profiles.
    Profiles *[]ProfileDefinitionModel `json:"Profiles,omitempty"`
}

// EntityLinkModel the model that is sent in response to a GET request for Link
type EntityLinkModel struct {
    autorest.Response `json:"-"`
    // ChildDrawerID - Gets or sets the child drawer identifier.
    ChildDrawerID *int32 `json:"ChildDrawerID,omitempty"`
    // ChildEntityID - Gets or sets the child entity identifier.
    ChildEntityID *int32 `json:"ChildEntityID,omitempty"`
    // ChildType - Gets or sets the type of the child.
    ChildType *int32 `json:"ChildType,omitempty"`
    // VirtualName - Gets or sets the name of the virtual.
    VirtualName *string `json:"VirtualName,omitempty"`
    // ID - Gets or sets the identifier.
    ID *int32 `json:"ID,omitempty"`
    // DrawerID - Gets or sets the drawer identifier.
    DrawerID *int32 `json:"DrawerID,omitempty"`
    // EntityID - Gets or sets the entity identifier.
    EntityID *int32 `json:"EntityID,omitempty"`
    // OwnerUserID - Gets or sets the owner user identifier.
    OwnerUserID *int32 `json:"OwnerUserID,omitempty"`
    // OwnerUserFullName - Gets or sets the full name of the owner user.
    OwnerUserFullName *string `json:"OwnerUserFullName,omitempty"`
    // OwnerGroupID - Gets or sets the owner group identifier.
    OwnerGroupID *int32 `json:"OwnerGroupID,omitempty"`
    // OwnerGroupName - Gets or sets the name of the owner group.
    OwnerGroupName *string `json:"OwnerGroupName,omitempty"`
    // IncluderUserID - Gets or sets the includer user identifier.
    IncluderUserID *int32 `json:"IncluderUserID,omitempty"`
    // IncluderUserFullName - Gets or sets the full name of the includer user.
    IncluderUserFullName *string `json:"IncluderUserFullName,omitempty"`
    // ModifierUserID - Gets or sets the modifier user identifier.
    ModifierUserID *int32 `json:"ModifierUserID,omitempty"`
    // ModifierUserFullName - Gets or sets the full name of the modifier user.
    ModifierUserFullName *string `json:"ModifierUserFullName,omitempty"`
    // InsertionTime - Gets or sets the insertion time.
    InsertionTime *date.Time `json:"InsertionTime,omitempty"`
    // ModificationTime - Gets or sets the modification time.
    ModificationTime *date.Time `json:"ModificationTime,omitempty"`
    // Class - Gets or sets the class.
    Class *int32 `json:"Class,omitempty"`
    // Name - Gets or sets the name.
    Name *string `json:"Name,omitempty"`
    // ACL - Gets or sets the acl.
    ACL *int32 `json:"Acl,omitempty"`
    // PageNumber - Gets or sets the page number.
    PageNumber *int32 `json:"PageNumber,omitempty"`
    // State - Gets or sets the state. Possible values include: 'State11Undefined', 'State11MaxStates', 'State11Reserved', 'State11UserDefined', 'State11Dynamic', 'State11Static', 'State11New', 'State11CheckedOut', 'State11Internal', 'State11Statres5', 'State11Linked', 'State11Statres4', 'State11Statres3', 'State11Statres2', 'State11Statres1', 'State11Locked', 'State11OnServerCache', 'State11OnClientCache', 'State11Fetching', 'State11Dynres4', 'State11Dynres3', 'State11Dynres2', 'State11Dynres1', 'State11User1', 'State11User2', 'State11User3', 'State11User4', 'State11User5', 'State11User6', 'State11User7', 'State11User8', 'State11User9', 'State11User10', 'State11User11', 'State11User12', 'State11User13', 'State11User14', 'State11User15', 'State11User16'
    State State `json:"State,omitempty"`
    // Note - Gets or sets the note.
    Note *string `json:"Note,omitempty"`
}

// EntityModel the model that is sent in response to a GET request for Entity
type EntityModel struct {
    autorest.Response `json:"-"`
    // Profiles - Gets or sets the profiles.
    Profiles *[]ProfileModel `json:"Profiles,omitempty"`
    // ID - Gets or sets the entity identifier.
    ID *int32 `json:"ID,omitempty"`
    // DrawerID - Gets or sets the drawer identifier.
    DrawerID *int32 `json:"DrawerID,omitempty"`
    // ACL - Gets or sets the access control list.
    ACL *int32 `json:"Acl,omitempty"`
    // Type - Gets or sets the type.
    Type *int32 `json:"Type,omitempty"`
    // Subtype - Gets or sets the subtype.
    Subtype *int32 `json:"Subtype,omitempty"`
    // Age - Gets or sets the age.
    Age *int32 `json:"Age,omitempty"`
    // ReferenceCount - Gets or sets the reference identifier.
    ReferenceCount *int32 `json:"ReferenceCount,omitempty"`
    // AccessCount - Gets or sets the access count.
    AccessCount *int32 `json:"AccessCount,omitempty"`
    // ProfileCount - Gets or sets the profile count.
    ProfileCount *int32 `json:"ProfileCount,omitempty"`
    // AttachCount - Gets or sets the attach count.
    AttachCount *int32 `json:"AttachCount,omitempty"`
    // NoteCount - Gets or sets the note count.
    NoteCount *int32 `json:"NoteCount,omitempty"`
    // OwnerUserID - Gets or sets the owner user identifier.
    OwnerUserID *int32 `json:"OwnerUserID,omitempty"`
    // OwnerUserFullName - Gets or sets the full name of the owner user.
    OwnerUserFullName *string `json:"OwnerUserFullName,omitempty"`
    // OwnerGroupID - Gets or sets the owner group identifier.
    OwnerGroupID *int32 `json:"OwnerGroupID,omitempty"`
    // OwnerGroupName - Gets or sets the name of the owner group.
    OwnerGroupName *string `json:"OwnerGroupName,omitempty"`
    // CreatorUserID - Gets or sets the creator user identifier.
    CreatorUserID *int32 `json:"CreatorUserID,omitempty"`
    // CreatorUserFullName - Gets or sets the full name of the creator user.
    CreatorUserFullName *string `json:"CreatorUserFullName,omitempty"`
    // CreatorGroupID - Gets or sets the creator group identifier.
    CreatorGroupID *int32 `json:"CreatorGroupID,omitempty"`
    // CreatorGroupName - Gets or sets the name of the creator group.
    CreatorGroupName *string `json:"CreatorGroupName,omitempty"`
    // ModifierUserID - Gets or sets the modifier user identifier.
    ModifierUserID *int32 `json:"ModifierUserID,omitempty"`
    // ModifierUserFullName - Gets or sets the full name of the modifier user.
    ModifierUserFullName *string `json:"ModifierUserFullName,omitempty"`
    // ModifierGroupID - Gets or sets the modifier group identifier.
    ModifierGroupID *int32 `json:"ModifierGroupID,omitempty"`
    // ModifierGroupName - Gets or sets the name of the modifier group.
    ModifierGroupName *string `json:"ModifierGroupName,omitempty"`
    // CreationTime - Gets or sets the creation time.
    CreationTime *date.Time `json:"CreationTime,omitempty"`
    // ModificationTime - Gets or sets the modification time.
    ModificationTime *date.Time `json:"ModificationTime,omitempty"`
    // AccessTime - Gets or sets the access time.
    AccessTime *date.Time `json:"AccessTime,omitempty"`
    // ResolutionTime - Gets or sets the resolution time.
    ResolutionTime *date.Time `json:"ResolutionTime,omitempty"`
    // Category - Gets or sets the category.
    Category *int32 `json:"Category,omitempty"`
    // ReservedInt1 - Gets or sets the reserved int1.
    ReservedInt1 *int32 `json:"ReservedInt1,omitempty"`
    // ReservedInt2 - Gets or sets the reserved int2.
    ReservedInt2 *int32 `json:"ReservedInt2,omitempty"`
    // ReservedString1 - Gets or sets the reserved string1.
    ReservedString1 *string `json:"ReservedString1,omitempty"`
    // State - Gets or sets the state. Possible values include: 'State4Undefined', 'State4Available', 'State4Locked', 'State4Suspended', 'State4Archived', 'State4Deleted', 'State4Canceled', 'State4Complete', 'State4Reviewed', 'State4ReviewedSuspended', 'State4ReviewedComplete', 'State4Rejected', 'State4RoutingSlipOpen', 'State4ReviewedRoutingSlipOpen'
    State State `json:"State,omitempty"`
    // Name - Gets or sets the name.
    Name *string `json:"Name,omitempty"`
}

// EventModel the model that is sent in response to a GET request for Event
type EventModel struct {
    autorest.Response `json:"-"`
    // ID - Gets or sets the identifier.
    ID *int32 `json:"ID,omitempty"`
    // DrawerID - Gets or sets the drawer identifier.
    DrawerID *int32 `json:"DrawerID,omitempty"`
    // EntityID - Gets or sets the entity identifier.
    EntityID *int32 `json:"EntityID,omitempty"`
    // Type - Gets or sets the type. Possible values include: 'Type3Undefined', 'Type3Fatal', 'Type3Warning', 'Type3Info', 'Type3Debug', 'Type3Process', 'Type3RPC', 'Type3SQL', 'Type3DDE'
    Type Type `json:"Type,omitempty"`
    // EventTime - Gets or sets the event time.
    EventTime *date.Time `json:"EventTime,omitempty"`
    // EventUserID - Gets or sets the event user identifier.
    EventUserID *int32 `json:"EventUserID,omitempty"`
    // EventUserFullName - Gets or sets the full name of the event user.
    EventUserFullName *string `json:"EventUserFullName,omitempty"`
    // EventGroupID - Gets or sets the event group identifier.
    EventGroupID *int32 `json:"EventGroupID,omitempty"`
    // EventGroupName - Gets or sets the name of the event group.
    EventGroupName *string `json:"EventGroupName,omitempty"`
    // Category - Gets or sets the category. Possible values include: 'Category1Undefined', 'Category1Entity', 'Category1Profile', 'Category1Attachment', 'Category1Discussion', 'Category1Field', 'Category1Workflow'
    Category Category `json:"Category,omitempty"`
    // Class - Gets or sets the class. Possible values include: 'Class1Undefined', 'Class1Application', 'Class1Security', 'Class1System'
    Class Class `json:"Class,omitempty"`
    // Operation - Gets or sets the operation. Possible values include: 'Operation1Undefined', 'Operation1Insert', 'Operation1Update', 'Operation1Delete', 'Operation1Copy', 'Operation1Lock', 'Operation1Unlock', 'Operation1Open', 'Operation1Close', 'Operation1Checkout', 'Operation1Checkin', 'Operation1View', 'Operation1Merge', 'Operation1Split', 'Operation1Classify', 'Operation1Null', 'Operation1OpenWF', 'Operation1Remove', 'Operation1ReturnToTop', 'Operation1ReturnToBottom', 'Operation1Accept', 'Operation1Suspend', 'Operation1Reject', 'Operation1Route', 'Operation1Forward', 'Operation1Reply', 'Operation1Reassign', 'Operation1Reset', 'Operation1Override', 'Operation1Rollback', 'Operation1Archive'
    Operation Operation `json:"Operation,omitempty"`
    // Source - Gets or sets the source.
    Source *string `json:"Source,omitempty"`
    // Computer - Gets or sets the computer.
    Computer *string `json:"Computer,omitempty"`
    // IPAddress - Gets or sets the ip address.
    IPAddress *string `json:"IPAddress,omitempty"`
    // Description - Gets or sets the description.
    Description *string `json:"Description,omitempty"`
    // ProcessTime - Gets or sets the process time.
    ProcessTime *int32 `json:"ProcessTime,omitempty"`
    // Details - Gets or sets the details.
    Details *map[string]interface{} `json:"Details,omitempty"`
}

// ExtensionModel the model that is sent in response to a GET request for Extension
type ExtensionModel struct {
    // UpdateAction - Gets or sets the update action. Possible values include: 'UpdateActionNone', 'UpdateActionUpdate', 'UpdateActionAdd', 'UpdateActionRemove'
    UpdateAction UpdateAction `json:"UpdateAction,omitempty"`
    // EntityID - Gets or sets the entity identifier.
    EntityID *int32 `json:"EntityID,omitempty"`
    // ProfileID - Gets or sets the profile identifier.
    ProfileID *int32 `json:"ProfileID,omitempty"`
    // ID - Gets or sets the identifier.
    ID *int32 `json:"ID,omitempty"`
    // DrawerID - Gets or sets the drawer identifier.
    DrawerID *int32 `json:"DrawerID,omitempty"`
    // Type - Gets or sets the type.
    Type *int32 `json:"Type,omitempty"`
    // RowNumber - Gets or sets the row number.
    RowNumber *int32 `json:"RowNumber,omitempty"`
    // Strings - Gets or sets the strings.
    Strings *[]string `json:"Strings,omitempty"`
    // Integers - Gets or sets the integers.
    Integers *[]int32 `json:"Integers,omitempty"`
    // Doubles - Gets or sets the doubles.
    Doubles *[]float64 `json:"Doubles,omitempty"`
    // Dates - Gets or sets the dates.
    Dates *[]date.Time `json:"Dates,omitempty"`
}

// FieldDefinitionModel model for Template Fields
type FieldDefinitionModel struct {
    // ID - Gets or sets the identifier.
    ID *string `json:"ID,omitempty"`
    // Name - Gets or sets the name.
    Name *string `json:"Name,omitempty"`
    // XMLTag - Gets or sets the XML tag.
    XMLTag *string `json:"XmlTag,omitempty"`
    // Type - Gets or sets the type. Possible values include: 'Type7Undefined', 'Type7String', 'Type7Integer', 'Type7Double', 'Type7DateTime', 'Type7Paragraph', 'Type7CheckBox', 'Type7RadioButton', 'Type7ComboBox', 'Type7ListBox', 'Type7Table', 'Type7LargeText', 'Type7ComboString'
    Type Type `json:"Type,omitempty"`
    // Index - Gets or sets the index.
    Index *int32 `json:"Index,omitempty"`
    // Position - Gets or sets the position.
    Position *int32 `json:"Position,omitempty"`
    // Note - Gets or sets the note.
    Note *string `json:"Note,omitempty"`
    // IsEnabled - Gets or sets a value indicating whether this instance is enabled.
    IsEnabled *bool `json:"IsEnabled,omitempty"`
    // IsRequired - Gets or sets a value indicating whether this instance is required. Possible values include: 'NotRequired', 'Always', 'OnAccept'
    IsRequired IsRequired `json:"IsRequired,omitempty"`
    // IsProtected - Gets or sets a value indicating whether this instance is protected.
    IsProtected *bool `json:"IsProtected,omitempty"`
    // Default - Gets or sets the default value.
    Default *string `json:"Default,omitempty"`
    // Mask - Gets or sets the mask.
    Mask *string `json:"Mask,omitempty"`
    // Length - Gets or sets the length.
    Length *int32 `json:"Length,omitempty"`
    // IsMultiline - Gets or sets a value indicating whether this instance is multiline.
    IsMultiline *bool `json:"IsMultiline,omitempty"`
    // Format - Gets or sets the format.
    Format *string `json:"Format,omitempty"`
    // IsSorted - Gets or sets a value indicating whether this instance is sorted.
    IsSorted *bool `json:"IsSorted,omitempty"`
    // Select - Gets or sets the select.
    Select *int32 `json:"Select,omitempty"`
    // Formula - Gets or sets the formula.
    Formula *string `json:"Formula,omitempty"`
    // HasValidation - Gets or sets a value indicating whether this instance has validation.
    HasValidation *bool `json:"HasValidation,omitempty"`
    // ValidationColumn - Gets or sets the validation column.
    ValidationColumn *string `json:"ValidationColumn,omitempty"`
    // FoundOperation - Gets or sets the found operation.
    FoundOperation *int32 `json:"FoundOperation,omitempty"`
    // NotFoundOperation - Gets or sets the not found operation.
    NotFoundOperation *int32 `json:"NotFoundOperation,omitempty"`
    // SampleImage - Gets or sets the sample image.
    SampleImage *int32 `json:"SampleImage,omitempty"`
    // Lookup - Gets or sets the lookup.
    Lookup *string `json:"Lookup,omitempty"`
    // HasLink - Gets or sets a value indicating whether this instance has linking enabled.
    HasLink *bool `json:"HasLink,omitempty"`
    // LinkEntityType - Gets or sets the type of the link entity.
    LinkEntityType *int32 `json:"LinkEntityType,omitempty"`
    // LinkProfile - Gets or sets the link profile.
    LinkProfile *string `json:"LinkProfile,omitempty"`
    // LinkField - Gets or sets the link field.
    LinkField *string `json:"LinkField,omitempty"`
    // ReservedString1 - Gets or sets the reserved string1.
    ReservedString1 *string `json:"ReservedString1,omitempty"`
    // ReservedString2 - Gets or sets the reserved string2.
    ReservedString2 *string `json:"ReservedString2,omitempty"`
    // ReservedInt1 - Gets or sets the reserved int1.
    ReservedInt1 *int32 `json:"ReservedInt1,omitempty"`
    // ReservedInt2 - Gets or sets the reserved int2.
    ReservedInt2 *int32 `json:"ReservedInt2,omitempty"`
    // ReservedBit1 - Gets or sets a value indicating whether [reserved bit1].
    ReservedBit1 *bool `json:"ReservedBit1,omitempty"`
    // ReservedBit2 - Gets or sets a value indicating whether [reserved bit2].
    ReservedBit2 *bool `json:"ReservedBit2,omitempty"`
    // Items - Gets or sets the template items.
    Items *[]ItemDefinitionModel `json:"Items,omitempty"`
    // Fields - Gets or sets the fields.
    Fields *[]FieldDefinitionModel `json:"Fields,omitempty"`
}

// FieldValidationModel model for Template Field Validation
type FieldValidationModel struct {
    autorest.Response `json:"-"`
    // Lookup - Gets or sets the lookup.
    Lookup *[]LookupField `json:"Lookup,omitempty"`
    // Values - Gets or sets the values.
    Values *[]map[string]*string `json:"Values,omitempty"`
}

// FlowModel the model that is sent in response to a GET request for Flow
type FlowModel struct {
    autorest.Response `json:"-"`
    // ID - Gets or sets the identifier.
    ID *int32 `json:"ID,omitempty"`
    // DrawerID - Gets or sets the drawer identifier.
    DrawerID *int32 `json:"DrawerID,omitempty"`
    // EntityID - Gets or sets the entity identifier.
    EntityID *int32 `json:"EntityID,omitempty"`
    // Type - Gets or sets the type. Possible values include: 'Type5None', 'Type5Workflow', 'Type5Fatal', 'Type5Warning', 'Type5Info', 'Type5Debug', 'Type5Process', 'Type5RPC', 'Type5SQL', 'Type5Dde'
    Type Type `json:"Type,omitempty"`
    // QueueID - Gets or sets the queue identifier.
    QueueID *int32 `json:"QueueID,omitempty"`
    // WorkflowTime - Gets or sets the workflow time.
    WorkflowTime *date.Time `json:"WorkflowTime,omitempty"`
    // InsertionTime - Gets or sets the insertion time.
    InsertionTime *date.Time `json:"InsertionTime,omitempty"`
    // WorkflowUserID - Gets or sets the workflow user identifier.
    WorkflowUserID *int32 `json:"WorkflowUserID,omitempty"`
    // WorkflowUserFullName - Gets or sets the full name of the workflow user.
    WorkflowUserFullName *string `json:"WorkflowUserFullName,omitempty"`
    // WorkflowGroupID - Gets or sets the workflow group identifier.
    WorkflowGroupID *int32 `json:"WorkflowGroupID,omitempty"`
    // WorkflowGroupName - Gets or sets the name of the workflow group.
    WorkflowGroupName *string `json:"WorkflowGroupName,omitempty"`
    // Operation - Gets or sets the operation. Possible values include: 'Operation3None', 'Operation3Update', 'Operation3Reset', 'Operation3Override', 'Operation3Null'
    Operation Operation `json:"Operation,omitempty"`
    // Category - Gets or sets the category. Possible values include: 'Category3None', 'Category3Direct', 'Category3AdHoc', 'Category3Production', 'Category3Review', 'Category3Reset', 'Category3RoutingSlip', 'Category3ReviewRoutingSlip', 'Category3Override'
    Category Category `json:"Category,omitempty"`
    // Status - Gets or sets the status. Possible values include: 'Status1None', 'Status1Approved', 'Status1Rejected', 'Status1Suspended', 'Status1ApprovedR', 'Status1NoneR'
    Status Status `json:"Status,omitempty"`
    // State - Gets or sets the state. Possible values include: 'State7None', 'State7Processed', 'State7Pending', 'State7Waiting', 'State7ProcessedR', 'State7Override', 'State7OverrideR', 'State7WaitingR'
    State State `json:"State,omitempty"`
    // Source - Gets or sets the source.
    Source *string `json:"Source,omitempty"`
    // IPAddress - Gets or sets the ip address.
    IPAddress *string `json:"IPAddress,omitempty"`
    // Computer - Gets or sets the computer.
    Computer *string `json:"Computer,omitempty"`
    // Description - Gets or sets the description.
    Description *string `json:"Description,omitempty"`
    // Index1 - Gets or sets the index1.
    Index1 *int32 `json:"Index1,omitempty"`
    // Index2 - Gets or sets the index2.
    Index2 *int32 `json:"Index2,omitempty"`
}

// GetAssociationRequestModel model for the GET Association input parameters
type GetAssociationRequestModel struct {
    // ACL - Gets or sets the access control level permissions.
    ACL *int32 `json:"Acl,omitempty"`
    // Page - Gets or sets the page number.
    Page *int32 `json:"Page,omitempty"`
    // PageSize - Gets or sets the size of the page.
    PageSize *int32 `json:"PageSize,omitempty"`
    // SortOrder - Gets or sets the order. Possible values include: 'SortOrderUnspecified', 'SortOrderAscending', 'SortOrderDescending'
    SortOrder SortOrder `json:"SortOrder,omitempty"`
    // SortBy - Gets or sets the column to order by. Possible values include: 'SortByUnspecified', 'SortByDrawerID', 'SortByApplicationID', 'SortByGroupID', 'SortByUserID', 'SortByQueueID', 'SortByACL'
    SortBy SortBy `json:"SortBy,omitempty"`
}

// GetAttachmentRequestModel model for the GET Attachment input parameters
type GetAttachmentRequestModel struct {
    // Type - Gets or sets the type. Possible values include: 'Standard', 'EntityLink', 'WebLink'
    Type Type `json:"Type,omitempty"`
    // Extension - Gets or sets the extension.
    Extension *string `json:"Extension,omitempty"`
    // MinSize - Gets or sets the minimum size.
    MinSize *int64 `json:"MinSize,omitempty"`
    // MaxSize - Gets or sets the maximum size.
    MaxSize *int64 `json:"MaxSize,omitempty"`
    // ACL - Gets or sets the access control list.
    ACL *int32 `json:"Acl,omitempty"`
    // EntityID - Gets or sets the entity identifier.
    EntityID *int32 `json:"EntityID,omitempty"`
    // DrawerID - Gets or sets the drawer identifier.
    DrawerID *int32 `json:"DrawerID,omitempty"`
    // Name - Gets or sets the name.
    Name *string `json:"Name,omitempty"`
    // CreatorUserID - Gets or sets the creator user identifier.
    CreatorUserID *int32 `json:"CreatorUserID,omitempty"`
    // ModifierUserID - Gets or sets the modifier user identifier.
    ModifierUserID *int32 `json:"ModifierUserID,omitempty"`
    // MinInsertionTime - Gets or sets the minimum insertion time.
    MinInsertionTime *date.Time `json:"MinInsertionTime,omitempty"`
    // MaxInsertionTime - Gets or sets the maximum insertion time.
    MaxInsertionTime *date.Time `json:"MaxInsertionTime,omitempty"`
    // MinModificationTime - Gets or sets the minimum modification time.
    MinModificationTime *date.Time `json:"MinModificationTime,omitempty"`
    // MaxModificationTime - Gets or sets the maximum modification time.
    MaxModificationTime *date.Time `json:"MaxModificationTime,omitempty"`
    // Page - Gets or sets the page number.
    Page *int32 `json:"Page,omitempty"`
    // PageSize - Gets or sets the size of the page.
    PageSize *int32 `json:"PageSize,omitempty"`
    // SortOrder - Gets or sets the order. Possible values include: 'SortOrder1Unspecified', 'SortOrder1Ascending', 'SortOrder1Descending'
    SortOrder SortOrder `json:"SortOrder,omitempty"`
    // SortBy - Gets or sets the column to order by. Possible values include: 'SortBy1PageNumber', 'SortBy1ID', 'SortBy1Type', 'SortBy1InsertionTime', 'SortBy1ModificationTime', 'SortBy1CrossReferenceID', 'SortBy1SubType', 'SortBy1Extension', 'SortBy1Name'
    SortBy SortBy `json:"SortBy,omitempty"`
}

// GetAttachmentVersionRequestModel model for the GET Attachment Version input parameters
type GetAttachmentVersionRequestModel struct {
    // Version - Gets or sets the indexed version value.
    Version *int32 `json:"Version,omitempty"`
    // CreatorUserID - Gets or sets the creator identifier.
    CreatorUserID *int32 `json:"CreatorUserID,omitempty"`
    // AccessorUserID - Gets or sets the identifier of the user who accessed the attachment version.
    AccessorUserID *int32 `json:"AccessorUserID,omitempty"`
    // MinAccessTime - Gets or sets the min time the version was last accessed.
    MinAccessTime *date.Time `json:"MinAccessTime,omitempty"`
    // MaxAccessTime - Gets or sets the max time the version was last accessed.
    MaxAccessTime *date.Time `json:"MaxAccessTime,omitempty"`
    // MinCreationTime - Gets or sets the min creation time of the attachment version.
    MinCreationTime *date.Time `json:"MinCreationTime,omitempty"`
    // MaxCreationTime - Gets or sets the max creation time of the attachment version.
    MaxCreationTime *date.Time `json:"MaxCreationTime,omitempty"`
    // MinModificationTime - Gets or sets the min modification time of the attachment version.
    MinModificationTime *date.Time `json:"MinModificationTime,omitempty"`
    // MaxModificationTime - Gets or sets the max modification time of the attachment version.
    MaxModificationTime *date.Time `json:"MaxModificationTime,omitempty"`
    // Page - Gets or sets the page number.
    Page *int32 `json:"Page,omitempty"`
    // PageSize - Gets or sets the size of the page.
    PageSize *int32 `json:"PageSize,omitempty"`
    // SortOrder - Gets or sets the order. Possible values include: 'SortOrder2Unspecified', 'SortOrder2Ascending', 'SortOrder2Descending'
    SortOrder SortOrder `json:"SortOrder,omitempty"`
    // SortBy - Gets or sets the column to order by. Possible values include: 'SortBy2Version', 'SortBy2CreatorUserID', 'SortBy2AccessorUserID', 'SortBy2AccessTime', 'SortBy2CreationTime', 'SortBy2ModificationTime'
    SortBy SortBy `json:"SortBy,omitempty"`
}

// GetDefinitionModel model for the GET Template input parameters
type GetDefinitionModel struct {
    // DrawerID - Gets or sets the drawer identifier.
    DrawerID *int32 `json:"DrawerID,omitempty"`
    // Name - Gets or sets the name.
    Name *string `json:"Name,omitempty"`
    // Category - Gets or sets the category.
    Category *string `json:"Category,omitempty"`
    // Page - Gets or sets the page number.
    Page *int32 `json:"Page,omitempty"`
    // PageSize - Gets or sets the size of the page.
    PageSize *int32 `json:"PageSize,omitempty"`
    // SortOrder - Gets or sets the order. Possible values include: 'SortOrder7Unspecified', 'SortOrder7Ascending', 'SortOrder7Descending'
    SortOrder SortOrder `json:"SortOrder,omitempty"`
    // SortBy - Gets or sets the column to order by.
    SortBy *int32 `json:"SortBy,omitempty"`
}

// GetEntityBaseResponse the summary model that is sent in response to a GET request for Entity
type GetEntityBaseResponse struct {
    // ID - Gets or sets the entity identifier.
    ID *int32 `json:"ID,omitempty"`
    // DrawerID - Gets or sets the drawer identifier.
    DrawerID *int32 `json:"DrawerID,omitempty"`
    // ACL - Gets or sets the access control list.
    ACL *int32 `json:"Acl,omitempty"`
    // Type - Gets or sets the type.
    Type *int32 `json:"Type,omitempty"`
    // Subtype - Gets or sets the subtype.
    Subtype *int32 `json:"Subtype,omitempty"`
    // Age - Gets or sets the age.
    Age *int32 `json:"Age,omitempty"`
    // ReferenceCount - Gets or sets the reference identifier.
    ReferenceCount *int32 `json:"ReferenceCount,omitempty"`
    // AccessCount - Gets or sets the access count.
    AccessCount *int32 `json:"AccessCount,omitempty"`
    // ProfileCount - Gets or sets the profile count.
    ProfileCount *int32 `json:"ProfileCount,omitempty"`
    // AttachCount - Gets or sets the attach count.
    AttachCount *int32 `json:"AttachCount,omitempty"`
    // NoteCount - Gets or sets the note count.
    NoteCount *int32 `json:"NoteCount,omitempty"`
    // OwnerUserID - Gets or sets the owner user identifier.
    OwnerUserID *int32 `json:"OwnerUserID,omitempty"`
    // OwnerUserFullName - Gets or sets the full name of the owner user.
    OwnerUserFullName *string `json:"OwnerUserFullName,omitempty"`
    // OwnerGroupID - Gets or sets the owner group identifier.
    OwnerGroupID *int32 `json:"OwnerGroupID,omitempty"`
    // OwnerGroupName - Gets or sets the name of the owner group.
    OwnerGroupName *string `json:"OwnerGroupName,omitempty"`
    // CreatorUserID - Gets or sets the creator user identifier.
    CreatorUserID *int32 `json:"CreatorUserID,omitempty"`
    // CreatorUserFullName - Gets or sets the full name of the creator user.
    CreatorUserFullName *string `json:"CreatorUserFullName,omitempty"`
    // CreatorGroupID - Gets or sets the creator group identifier.
    CreatorGroupID *int32 `json:"CreatorGroupID,omitempty"`
    // CreatorGroupName - Gets or sets the name of the creator group.
    CreatorGroupName *string `json:"CreatorGroupName,omitempty"`
    // ModifierUserID - Gets or sets the modifier user identifier.
    ModifierUserID *int32 `json:"ModifierUserID,omitempty"`
    // ModifierUserFullName - Gets or sets the full name of the modifier user.
    ModifierUserFullName *string `json:"ModifierUserFullName,omitempty"`
    // ModifierGroupID - Gets or sets the modifier group identifier.
    ModifierGroupID *int32 `json:"ModifierGroupID,omitempty"`
    // ModifierGroupName - Gets or sets the name of the modifier group.
    ModifierGroupName *string `json:"ModifierGroupName,omitempty"`
    // CreationTime - Gets or sets the creation time.
    CreationTime *date.Time `json:"CreationTime,omitempty"`
    // ModificationTime - Gets or sets the modification time.
    ModificationTime *date.Time `json:"ModificationTime,omitempty"`
    // AccessTime - Gets or sets the access time.
    AccessTime *date.Time `json:"AccessTime,omitempty"`
    // ResolutionTime - Gets or sets the resolution time.
    ResolutionTime *date.Time `json:"ResolutionTime,omitempty"`
    // Category - Gets or sets the category.
    Category *int32 `json:"Category,omitempty"`
    // ReservedInt1 - Gets or sets the reserved int1.
    ReservedInt1 *int32 `json:"ReservedInt1,omitempty"`
    // ReservedInt2 - Gets or sets the reserved int2.
    ReservedInt2 *int32 `json:"ReservedInt2,omitempty"`
    // ReservedString1 - Gets or sets the reserved string1.
    ReservedString1 *string `json:"ReservedString1,omitempty"`
    // State - Gets or sets the state. Possible values include: 'State3Undefined', 'State3Available', 'State3Locked', 'State3Suspended', 'State3Archived', 'State3Deleted', 'State3Canceled', 'State3Complete', 'State3Reviewed', 'State3ReviewedSuspended', 'State3ReviewedComplete', 'State3Rejected', 'State3RoutingSlipOpen', 'State3ReviewedRoutingSlipOpen'
    State State `json:"State,omitempty"`
    // Name - Gets or sets the name.
    Name *string `json:"Name,omitempty"`
}

// GetEntityLinkRequestModel model for the GET Link input parameters
type GetEntityLinkRequestModel struct {
    // ChildEntityID - Gets or sets the child entity identifier.
    ChildEntityID *int32 `json:"ChildEntityID,omitempty"`
    // ChildDrawerID - Gets or sets the child drawer identifier.
    ChildDrawerID *int32 `json:"ChildDrawerID,omitempty"`
    // ChildType - Gets or sets the type of the child.
    ChildType *int32 `json:"ChildType,omitempty"`
    // ACL - Gets or sets the access control list.
    ACL *int32 `json:"Acl,omitempty"`
    // EntityID - Gets or sets the entity identifier.
    EntityID *int32 `json:"EntityID,omitempty"`
    // DrawerID - Gets or sets the drawer identifier.
    DrawerID *int32 `json:"DrawerID,omitempty"`
    // Name - Gets or sets the name.
    Name *string `json:"Name,omitempty"`
    // CreatorUserID - Gets or sets the creator user identifier.
    CreatorUserID *int32 `json:"CreatorUserID,omitempty"`
    // ModifierUserID - Gets or sets the modifier user identifier.
    ModifierUserID *int32 `json:"ModifierUserID,omitempty"`
    // MinInsertionTime - Gets or sets the minimum insertion time.
    MinInsertionTime *date.Time `json:"MinInsertionTime,omitempty"`
    // MaxInsertionTime - Gets or sets the maximum insertion time.
    MaxInsertionTime *date.Time `json:"MaxInsertionTime,omitempty"`
    // MinModificationTime - Gets or sets the minimum modification time.
    MinModificationTime *date.Time `json:"MinModificationTime,omitempty"`
    // MaxModificationTime - Gets or sets the maximum modification time.
    MaxModificationTime *date.Time `json:"MaxModificationTime,omitempty"`
    // Page - Gets or sets the page number.
    Page *int32 `json:"Page,omitempty"`
    // PageSize - Gets or sets the size of the page.
    PageSize *int32 `json:"PageSize,omitempty"`
    // SortOrder - Gets or sets the order. Possible values include: 'SortOrder10Unspecified', 'SortOrder10Ascending', 'SortOrder10Descending'
    SortOrder SortOrder `json:"SortOrder,omitempty"`
    // SortBy - Gets or sets the column to order by. Possible values include: 'SortBy8PageNumber', 'SortBy8ID', 'SortBy8Type', 'SortBy8InsertionTime', 'SortBy8ModificationTime', 'SortBy8CrossReferenceID', 'SortBy8SubType', 'SortBy8Extension', 'SortBy8Name'
    SortBy SortBy `json:"SortBy,omitempty"`
}

// GetEntityRequestModel model for the GET Entity input parameters
type GetEntityRequestModel struct {
    // DrawerID - Gets or sets the drawer identifier.
    DrawerID *int32 `json:"DrawerID,omitempty"`
    // ACL - Gets or sets the access control list.
    ACL *int32 `json:"Acl,omitempty"`
    // Type - Gets or sets the type of the entity.
    Type *int32 `json:"Type,omitempty"`
    // Name - Gets or sets the name.
    Name *string `json:"Name,omitempty"`
    // State - Gets or sets the state. Possible values include: 'State2Undefined', 'State2Available', 'State2Locked', 'State2Suspended', 'State2Archived', 'State2Deleted', 'State2Canceled', 'State2Complete', 'State2Reviewed', 'State2ReviewedSuspended', 'State2ReviewedComplete', 'State2Rejected', 'State2RoutingSlipOpen', 'State2ReviewedRoutingSlipOpen'
    State State `json:"State,omitempty"`
    // ReferenceCount - Gets or sets the reference count.
    ReferenceCount *int32 `json:"ReferenceCount,omitempty"`
    // AttachCount - Gets or sets the attach count.
    AttachCount *int32 `json:"AttachCount,omitempty"`
    // NoteCount - Gets or sets the note count.
    NoteCount *int32 `json:"NoteCount,omitempty"`
    // OwnerUserID - Gets or sets the owner user identifier.
    OwnerUserID *int32 `json:"OwnerUserID,omitempty"`
    // OwnerGroupID - Gets or sets the owner group identifier.
    OwnerGroupID *int32 `json:"OwnerGroupID,omitempty"`
    // CreatorUserID - Gets or sets the creator user identifier.
    CreatorUserID *int32 `json:"CreatorUserID,omitempty"`
    // CreatorGroupID - Gets or sets the creator group identifier.
    CreatorGroupID *int32 `json:"CreatorGroupID,omitempty"`
    // ModifierUserID - Gets or sets the modifier user identifier.
    ModifierUserID *int32 `json:"ModifierUserID,omitempty"`
    // ModifierGroupID - Gets or sets the modifier group identifier.
    ModifierGroupID *int32 `json:"ModifierGroupID,omitempty"`
    // MinCreationTime - Gets or sets the minimum creation time.
    MinCreationTime *date.Time `json:"MinCreationTime,omitempty"`
    // MaxCreationTime - Gets or sets the maximum creation time.
    MaxCreationTime *date.Time `json:"MaxCreationTime,omitempty"`
    // MinModificationTime - Gets or sets the minimum modification time.
    MinModificationTime *date.Time `json:"MinModificationTime,omitempty"`
    // MaxModificationTime - Gets or sets the maximum modification time.
    MaxModificationTime *date.Time `json:"MaxModificationTime,omitempty"`
    // Metadata - Gets or sets the metadata.
    Metadata *[]GetProfileFieldRequestModel `json:"Metadata,omitempty"`
    // Page - Gets or sets the page number.
    Page *int32 `json:"Page,omitempty"`
    // PageSize - Gets or sets the size of the page.
    PageSize *int32 `json:"PageSize,omitempty"`
    // SortOrder - Gets or sets the order. Possible values include: 'SortOrder3Unspecified', 'SortOrder3Ascending', 'SortOrder3Descending'
    SortOrder SortOrder `json:"SortOrder,omitempty"`
    // SortBy - Gets or sets the column to order by. Possible values include: 'SortBy3ID', 'SortBy3Type', 'SortBy3CreationTime', 'SortBy3ModificationTime', 'SortBy3State', 'SortBy3Name'
    SortBy SortBy `json:"SortBy,omitempty"`
}

// GetEventRequestModel model for the GET Event input parameters
type GetEventRequestModel struct {
    // DrawerID - Gets or sets the drawer identifier.
    DrawerID *int32 `json:"DrawerID,omitempty"`
    // EntityID - Gets or sets the entity identifier.
    EntityID *int32 `json:"EntityID,omitempty"`
    // Type - Gets or sets the type. Possible values include: 'Type2Undefined', 'Type2Fatal', 'Type2Warning', 'Type2Info', 'Type2Debug', 'Type2Process', 'Type2RPC', 'Type2SQL', 'Type2DDE'
    Type Type `json:"Type,omitempty"`
    // MinEventTime - Gets or sets the minimum event time.
    MinEventTime *date.Time `json:"MinEventTime,omitempty"`
    // MaxEventTime - Gets or sets the maximum event time.
    MaxEventTime *date.Time `json:"MaxEventTime,omitempty"`
    // EventUserID - Gets or sets the event user identifier.
    EventUserID *int32 `json:"EventUserID,omitempty"`
    // EventGroupID - Gets or sets the event group identifier.
    EventGroupID *int32 `json:"EventGroupID,omitempty"`
    // Category - Gets or sets the category. Possible values include: 'Undefined', 'Entity', 'Profile', 'Attachment', 'Discussion', 'Field', 'Workflow'
    Category Category `json:"Category,omitempty"`
    // Class - Gets or sets the class. Possible values include: 'ClassUndefined', 'ClassApplication', 'ClassSecurity', 'ClassSystem'
    Class Class `json:"Class,omitempty"`
    // Operation - Gets or sets the operation. Possible values include: 'OperationUndefined', 'OperationInsert', 'OperationUpdate', 'OperationDelete', 'OperationCopy', 'OperationLock', 'OperationUnlock', 'OperationOpen', 'OperationClose', 'OperationCheckout', 'OperationCheckin', 'OperationView', 'OperationMerge', 'OperationSplit', 'OperationClassify', 'OperationNull', 'OperationOpenWF', 'OperationRemove', 'OperationReturnToTop', 'OperationReturnToBottom', 'OperationAccept', 'OperationSuspend', 'OperationReject', 'OperationRoute', 'OperationForward', 'OperationReply', 'OperationReassign', 'OperationReset', 'OperationOverride', 'OperationRollback', 'OperationArchive'
    Operation Operation `json:"Operation,omitempty"`
    // MinProcessingTime - Gets or sets the minimum processing time.
    MinProcessingTime *int32 `json:"MinProcessingTime,omitempty"`
    // MaxProcessingTime - Gets or sets the maximum processing time.
    MaxProcessingTime *int32 `json:"MaxProcessingTime,omitempty"`
    // Page - Gets or sets the page number.
    Page *int32 `json:"Page,omitempty"`
    // PageSize - Gets or sets the size of the page.
    PageSize *int32 `json:"PageSize,omitempty"`
    // SortOrder - Gets or sets the order. Possible values include: 'SortOrder4Unspecified', 'SortOrder4Ascending', 'SortOrder4Descending'
    SortOrder SortOrder `json:"SortOrder,omitempty"`
    // SortBy - Gets or sets the column to order by. Possible values include: 'SortBy4ID', 'SortBy4Type', 'SortBy4EventTime'
    SortBy SortBy `json:"SortBy,omitempty"`
}

// GetExtensionRequestModel model for the GET Extension input parameters
type GetExtensionRequestModel struct {
    // DrawerID - Gets or sets the drawer identifier.
    DrawerID *int32 `json:"DrawerID,omitempty"`
    // EntityID - Gets or sets the entity identifier.
    EntityID *int32 `json:"EntityID,omitempty"`
    // ProfileID - Gets or sets the profile identifier.
    ProfileID *int32 `json:"ProfileID,omitempty"`
    // ID - Gets or sets the extension identifier.
    ID *int32 `json:"ID,omitempty"`
    // Type - Gets or sets the type of the extension.
    Type *int32 `json:"Type,omitempty"`
    // Page - Gets or sets the page number.
    Page *int32 `json:"Page,omitempty"`
    // PageSize - Gets or sets the size of the page.
    PageSize *int32 `json:"PageSize,omitempty"`
    // SortOrder - Gets or sets the order. Possible values include: 'SortOrder5Unspecified', 'SortOrder5Ascending', 'SortOrder5Descending'
    SortOrder SortOrder `json:"SortOrder,omitempty"`
    // SortBy - Gets or sets the column to order by. Possible values include: 'SortBy5RowNumber', 'SortBy5ID', 'SortBy5Type', 'SortBy5String', 'SortBy5Integer', 'SortBy5Double', 'SortBy5Date'
    SortBy SortBy `json:"SortBy,omitempty"`
}

// GetFieldValidationModel model for the GET Template input parameters
type GetFieldValidationModel struct {
    // SortColumn - Gets or sets the sort column.
    SortColumn *string `json:"SortColumn,omitempty"`
    // Metadata - Gets or sets the metadata search options.
    Metadata *[]GetLookupFieldModel `json:"Metadata,omitempty"`
    // Page - Gets or sets the page number.
    Page *int32 `json:"Page,omitempty"`
    // PageSize - Gets or sets the size of the page.
    PageSize *int32 `json:"PageSize,omitempty"`
    // SortOrder - Gets or sets the order. Possible values include: 'SortOrder8Unspecified', 'SortOrder8Ascending', 'SortOrder8Descending'
    SortOrder SortOrder `json:"SortOrder,omitempty"`
    // SortBy - Gets or sets the column to order by.
    SortBy *int32 `json:"SortBy,omitempty"`
}

// GetFlowRequestModel model for the GET Flow input parameters
type GetFlowRequestModel struct {
    // DrawerID - Gets or sets the drawer identifier.
    DrawerID *int32 `json:"DrawerID,omitempty"`
    // EntityID - Gets or sets the entity identifier.
    EntityID *int32 `json:"EntityID,omitempty"`
    // Type - Gets or sets the type. Possible values include: 'Type4None', 'Type4Workflow', 'Type4Fatal', 'Type4Warning', 'Type4Info', 'Type4Debug', 'Type4Process', 'Type4RPC', 'Type4SQL', 'Type4Dde'
    Type Type `json:"Type,omitempty"`
    // QueueID - Gets or sets the queue identifier.
    QueueID *int32 `json:"QueueID,omitempty"`
    // MinWorkflowTime - Gets or sets the minimum workflow time.
    MinWorkflowTime *date.Time `json:"MinWorkflowTime,omitempty"`
    // MaxWorkflowTime - Gets or sets the maximum workflow time.
    MaxWorkflowTime *date.Time `json:"MaxWorkflowTime,omitempty"`
    // MinInsertionTime - Gets or sets the minimum insertion time.
    MinInsertionTime *date.Time `json:"MinInsertionTime,omitempty"`
    // MaxInsertionTime - Gets or sets the maximum insertion time.
    MaxInsertionTime *date.Time `json:"MaxInsertionTime,omitempty"`
    // WorkflowUserID - Gets or sets the workflow user identifier.
    WorkflowUserID *int32 `json:"WorkflowUserID,omitempty"`
    // WorkflowGroupID - Gets or sets the workflow group identifier.
    WorkflowGroupID *int32 `json:"WorkflowGroupID,omitempty"`
    // Operation - Gets or sets the operation. Possible values include: 'Operation2None', 'Operation2Update', 'Operation2Reset', 'Operation2Override', 'Operation2Null'
    Operation Operation `json:"Operation,omitempty"`
    // Category - Gets or sets the category. Possible values include: 'Category2None', 'Category2Direct', 'Category2AdHoc', 'Category2Production', 'Category2Review', 'Category2Reset', 'Category2RoutingSlip', 'Category2ReviewRoutingSlip', 'Category2Override'
    Category Category `json:"Category,omitempty"`
    // Status - Gets or sets the status. Possible values include: 'StatusNone', 'StatusApproved', 'StatusRejected', 'StatusSuspended', 'StatusApprovedR', 'StatusNoneR'
    Status Status `json:"Status,omitempty"`
    // State - Gets or sets the state. Possible values include: 'State6None', 'State6Processed', 'State6Pending', 'State6Waiting', 'State6ProcessedR', 'State6Override', 'State6OverrideR', 'State6WaitingR'
    State State `json:"State,omitempty"`
    // MinIndex1 - Gets or sets the minimum index 1.
    MinIndex1 *int32 `json:"MinIndex1,omitempty"`
    // MaxIndex1 - Gets or sets the maximum index 1.
    MaxIndex1 *int32 `json:"MaxIndex1,omitempty"`
    // MinIndex2 - Gets or sets the minimum index 2.
    MinIndex2 *int32 `json:"MinIndex2,omitempty"`
    // MaxIndex2 - Gets or sets the maximum index 2.
    MaxIndex2 *int32 `json:"MaxIndex2,omitempty"`
    // Page - Gets or sets the page number.
    Page *int32 `json:"Page,omitempty"`
    // PageSize - Gets or sets the size of the page.
    PageSize *int32 `json:"PageSize,omitempty"`
    // SortOrder - Gets or sets the order. Possible values include: 'SortOrder6Unspecified', 'SortOrder6Ascending', 'SortOrder6Descending'
    SortOrder SortOrder `json:"SortOrder,omitempty"`
    // SortBy - Gets or sets the column to order by. Possible values include: 'SortBy6ID', 'SortBy6Type', 'SortBy6QueueID', 'SortBy6WorkflowTime', 'SortBy6InsertionTime', 'SortBy6Index'
    SortBy SortBy `json:"SortBy,omitempty"`
}

// GetGroupRequestModel model for the GET Group input parameters
type GetGroupRequestModel struct {
    // ID - Gets or sets the group identifier.
    ID *int32 `json:"ID,omitempty"`
    // UserID - Gets or sets the user identifier.
    UserID *int32 `json:"UserID,omitempty"`
    // Name - Gets or sets the name.
    Name *string `json:"Name,omitempty"`
    // Type - Gets or sets the type. Possible values include: 'Type8Generic', 'Type8Access', 'Type8Role'
    Type Type `json:"Type,omitempty"`
    // State - Gets or sets the state. Possible values include: 'State8Inactive', 'State8Active'
    State State `json:"State,omitempty"`
    // Page - Gets or sets the page number.
    Page *int32 `json:"Page,omitempty"`
    // PageSize - Gets or sets the size of the page.
    PageSize *int32 `json:"PageSize,omitempty"`
    // SortOrder - Gets or sets the order. Possible values include: 'SortOrder9Unspecified', 'SortOrder9Ascending', 'SortOrder9Descending'
    SortOrder SortOrder `json:"SortOrder,omitempty"`
    // SortBy - Gets or sets the column to order by. Possible values include: 'SortBy7ID', 'SortBy7Name', 'SortBy7Type', 'SortBy7State'
    SortBy SortBy `json:"SortBy,omitempty"`
}

// GetLookupFieldModel model for the GET Lookup Fields input parameters
type GetLookupFieldModel struct {
    // ColumnName - Gets or sets the name of the column.
    ColumnName *string `json:"ColumnName,omitempty"`
    // ColumnValue - Gets or sets the column value.
    ColumnValue *string `json:"ColumnValue,omitempty"`
}

// GetNoteRequestModel model for the GET Note input parameters
type GetNoteRequestModel struct {
    // DrawerID - Gets or sets the drawer identifier.
    DrawerID *int32 `json:"DrawerID,omitempty"`
    // EntityID - Gets or sets the entity identifier.
    EntityID *int32 `json:"EntityID,omitempty"`
    // Name - Gets or sets the name.
    Name *string `json:"Name,omitempty"`
    // CreatorUserID - Gets or sets the creator user identifier.
    CreatorUserID *int32 `json:"CreatorUserID,omitempty"`
    // ModifierUserID - Gets or sets the modifier user identifier.
    ModifierUserID *int32 `json:"ModifierUserID,omitempty"`
    // MinCreationTime - Gets or sets the minimum creation time.
    MinCreationTime *date.Time `json:"MinCreationTime,omitempty"`
    // MaxCreationTime - Gets or sets the maximum creation time.
    MaxCreationTime *date.Time `json:"MaxCreationTime,omitempty"`
    // MinModificationTime - Gets or sets the minimum modification time.
    MinModificationTime *date.Time `json:"MinModificationTime,omitempty"`
    // MaxModificationTime - Gets or sets the maximum modification time.
    MaxModificationTime *date.Time `json:"MaxModificationTime,omitempty"`
    // ParentID - Gets or sets the parent note identifier.
    ParentID *int32 `json:"ParentID,omitempty"`
    // Page - Gets or sets the page number.
    Page *int32 `json:"Page,omitempty"`
    // PageSize - Gets or sets the size of the page.
    PageSize *int32 `json:"PageSize,omitempty"`
    // SortOrder - Gets or sets the order. Possible values include: 'SortOrder11Unspecified', 'SortOrder11Ascending', 'SortOrder11Descending'
    SortOrder SortOrder `json:"SortOrder,omitempty"`
    // SortBy - Gets or sets the column to order by. Possible values include: 'ID', 'EntityID', 'Name', 'CreationTime', 'ModificationTime'
    SortBy SortBy `json:"SortBy,omitempty"`
}

// GetProfileFieldRequestModel represents a profile search field
type GetProfileFieldRequestModel struct {
    // ProfileType - Gets or sets the type of the profile.
    ProfileType *int32 `json:"ProfileType,omitempty"`
    // FieldType - Gets or sets the type of the field. Possible values include: 'String', 'Integer', 'Double', 'DateTime'
    FieldType FieldType `json:"FieldType,omitempty"`
    // FieldIndex - Gets or sets the index of the field.
    FieldIndex *int32 `json:"FieldIndex,omitempty"`
    // FieldValue - Gets or sets the field value.
    FieldValue *string `json:"FieldValue,omitempty"`
}

// GetQueueAssignmentModel defines the criteria to perform a query on assignments
type GetQueueAssignmentModel struct {
    // QueueID - Gets or sets the unique queue identifier.
    QueueID *int32 `json:"QueueID,omitempty"`
    // UserID - Gets or sets the user identifier.
    UserID *int32 `json:"UserID,omitempty"`
    // GroupID - Gets or sets the group identifier.
    GroupID *int32 `json:"GroupID,omitempty"`
    // Type - Gets or sets the queue assignment type. Possible values include: 'Type12Unspecified', 'Type12Primary', 'Type12Secondary'
    Type Type `json:"Type,omitempty"`
    // Order - Gets or sets the sort order.
    Order *int32 `json:"Order,omitempty"`
    // TaskSortColumn - Gets or sets the task sort column. Possible values include: 'TaskSortColumnTaskID', 'TaskSortColumnQueueID', 'TaskSortColumnDrawerID', 'TaskSortColumnAddressID', 'TaskSortColumnObjectID', 'TaskSortColumnObjectType', 'TaskSortColumnState', 'TaskSortColumnPriority', 'TaskSortColumnDescription', 'TaskSortColumnMessage1', 'TaskSortColumnMessage2', 'TaskSortColumnMessage3', 'TaskSortColumnMessage4', 'TaskSortColumnMessage5', 'TaskSortColumnOwnerUserID', 'TaskSortColumnOwnerGroupID', 'TaskSortColumnEffectiveUserID', 'TaskSortColumnEffectiveGroupID', 'TaskSortColumnPreviousQueueID', 'TaskSortColumnNextQueueID', 'TaskSortColumnInsertionTime', 'TaskSortColumnResolutionTime', 'TaskSortColumnTaskFileAttachment', 'TaskSortColumnReservedInt1', 'TaskSortColumnReservedString1'
    TaskSortColumn TaskSortColumn `json:"TaskSortColumn,omitempty"`
    // State - Gets or sets the state. Possible values include: 'State13Unspecified', 'State13Inactive', 'State13Active'
    State State `json:"State,omitempty"`
    // FetchType - Gets or sets the type of the fetch. Possible values include: 'Unspecified', 'Manual', 'Push'
    FetchType FetchType `json:"FetchType,omitempty"`
    // Page - Gets or sets the page number.
    Page *int32 `json:"Page,omitempty"`
    // PageSize - Gets or sets the size of the page.
    PageSize *int32 `json:"PageSize,omitempty"`
    // SortOrder - Gets or sets the order. Possible values include: 'SortOrder12Unspecified', 'SortOrder12Ascending', 'SortOrder12Descending'
    SortOrder SortOrder `json:"SortOrder,omitempty"`
    // SortBy - Gets or sets the column to order by. Possible values include: 'SortBy10QueueID', 'SortBy10UserID', 'SortBy10GroupID', 'SortBy10Type', 'SortBy10State', 'SortBy10Order', 'SortBy10FetchType'
    SortBy SortBy `json:"SortBy,omitempty"`
}

// GetQueueModel defines the criteria to perform a query on queues
type GetQueueModel struct {
    // ID - Gets or sets the queue identifier.
    ID *int32 `json:"ID,omitempty"`
    // Name - Gets or sets the name.
    Name *string `json:"Name,omitempty"`
    // Alias - Gets or sets the alias.
    Alias *string `json:"Alias,omitempty"`
    // Type - Gets or sets the type. Possible values include: 'Type15Inbound', 'Type15Outbound', 'Type15Access', 'Type15Any', 'Type15Shared', 'Type15Public', 'Type15Recycle', 'Type15Fax', 'Type15Print', 'Type15Scan', 'Type15Ocr', 'Type15Workflow', 'Type15Schedule', 'Type15System', 'Type15Other', 'Type15CdoInfostore', 'Type15CdoFolder'
    Type Type `json:"Type,omitempty"`
    // Access - Gets or sets the access level.
    Access *int32 `json:"Access,omitempty"`
    // BypassSecurity - Gets or sets a value indicating whether to bypass security checks.
    BypassSecurity *bool `json:"BypassSecurity,omitempty"`
    // Page - Gets or sets the page number.
    Page *int32 `json:"Page,omitempty"`
    // PageSize - Gets or sets the size of the page.
    PageSize *int32 `json:"PageSize,omitempty"`
    // SortOrder - Gets or sets the order. Possible values include: 'SortOrder13Unspecified', 'SortOrder13Ascending', 'SortOrder13Descending'
    SortOrder SortOrder `json:"SortOrder,omitempty"`
    // SortBy - Gets or sets the column to order by. Possible values include: 'SortBy11ID', 'SortBy11Type', 'SortBy11Name', 'SortBy11Alias'
    SortBy SortBy `json:"SortBy,omitempty"`
}

// GetTaskModel model for the GET Task input parameters
type GetTaskModel struct {
    // LastTaskID - Gets or sets the last task identifier.
    LastTaskID *int32 `json:"LastTaskID,omitempty"`
    // ID - Gets or sets the entity identifier.
    ID *int32 `json:"ID,omitempty"`
    // Type - Gets or sets the type of the entity.
    Type *int32 `json:"Type,omitempty"`
    // QueueID - Gets or sets the queue identifier.
    QueueID *int32 `json:"QueueID,omitempty"`
    // QueueType - Gets or sets the type of the queue.
    QueueType *int32 `json:"QueueType,omitempty"`
    // DrawerID - Gets or sets the drawer identifier.
    DrawerID *int32 `json:"DrawerID,omitempty"`
    // Description - Gets or sets the task description.
    Description *string `json:"Description,omitempty"`
    // TaskID - Gets or sets the task identifier.
    TaskID *int32 `json:"TaskID,omitempty"`
    // Page - Gets or sets the page number.
    Page *int32 `json:"Page,omitempty"`
    // PageSize - Gets or sets the size of the page.
    PageSize *int32 `json:"PageSize,omitempty"`
    // SortOrder - Gets or sets the order. Possible values include: 'SortOrder14Unspecified', 'SortOrder14Ascending', 'SortOrder14Descending'
    SortOrder SortOrder `json:"SortOrder,omitempty"`
    // SortBy - Gets or sets the column to order by. Possible values include: 'TaskID', 'QueueID', 'ObjectID', 'Priority', 'Description', 'InsertionTime', 'ResolutionTime', 'ReservedInt1'
    SortBy SortBy `json:"SortBy,omitempty"`
}

// GetUserRequestModel model for the GET User input parameters
type GetUserRequestModel struct {
    // ID - Gets or sets the identifier.
    ID *int32 `json:"ID,omitempty"`
    // PrimaryGroupID - Gets or sets the primary group identifier.
    PrimaryGroupID *int32 `json:"PrimaryGroupID,omitempty"`
    // GroupID - Gets or sets the group identifier.
    GroupID *int32 `json:"GroupID,omitempty"`
    // GroupName - Gets or sets the name of the group.
    GroupName *string `json:"GroupName,omitempty"`
    // Username - Gets or sets the username.
    Username *string `json:"Username,omitempty"`
    // Type - Gets or sets the type. Possible values include: 'ImageDesk', 'PublishDesk', 'FaxDesk', 'CaptureDesk', 'RecognitionDesk', 'PortalUser', 'AdminDesk', 'WorkflowDesk', 'Benchmark', 'ReportDesk', 'ColdDesk', 'PortalDesk', 'WorkflowArchitect', 'DocumentDesk', 'Poweruser'
    Type Type `json:"Type,omitempty"`
    // State - Gets or sets the state. Possible values include: 'State17Active', 'State17Inactive'
    State State `json:"State,omitempty"`
    // FullName - Gets or sets the full name.
    FullName *string `json:"FullName,omitempty"`
    // Page - Gets or sets the page number.
    Page *int32 `json:"Page,omitempty"`
    // PageSize - Gets or sets the size of the page.
    PageSize *int32 `json:"PageSize,omitempty"`
    // SortOrder - Gets or sets the order. Possible values include: 'SortOrder15Unspecified', 'SortOrder15Ascending', 'SortOrder15Descending'
    SortOrder SortOrder `json:"SortOrder,omitempty"`
    // SortBy - Gets or sets the column to order by. Possible values include: 'SortBy13ID', 'SortBy13PrimaryGroupID', 'SortBy13Username', 'SortBy13UserFullName', 'SortBy13Type', 'SortBy13State'
    SortBy SortBy `json:"SortBy,omitempty"`
}

// GetWorkflowModel model for the GET Workflow input parameters
type GetWorkflowModel struct {
    // ApplicationID - Gets or sets the application identifier.
    ApplicationID *int32 `json:"ApplicationID,omitempty"`
    // EntityType - Gets or sets the type of the entity.
    EntityType *int32 `json:"EntityType,omitempty"`
    // Name - Gets or sets the name.
    Name *string `json:"Name,omitempty"`
    // Page - Gets or sets the page number.
    Page *int32 `json:"Page,omitempty"`
    // PageSize - Gets or sets the size of the page.
    PageSize *int32 `json:"PageSize,omitempty"`
    // SortOrder - Gets or sets the order. Possible values include: 'SortOrder16Unspecified', 'SortOrder16Ascending', 'SortOrder16Descending'
    SortOrder SortOrder `json:"SortOrder,omitempty"`
    // SortBy - Gets or sets the column to order by.
    SortBy *int32 `json:"SortBy,omitempty"`
}

// GroupApplicationModel the model that is sent in response to a GET request for GroupsApplication associations
type GroupApplicationModel struct {
    // GroupID - Gets or sets the group identifier.
    GroupID *int32 `json:"GroupID,omitempty"`
    // GroupName - Gets or sets the name of the group.
    GroupName *string `json:"GroupName,omitempty"`
    // ApplicationID - Gets or sets the application identifier.
    ApplicationID *int32 `json:"ApplicationID,omitempty"`
    // ApplicationName - Gets or sets the name of the application.
    ApplicationName *string `json:"ApplicationName,omitempty"`
    // ACL - Gets or sets the acl.
    ACL *int32 `json:"Acl,omitempty"`
}

// GroupBase the Group Base class.
type GroupBase struct {
    // UserID - Gets or sets the user identifier.
    UserID *int32 `json:"UserID,omitempty"`
    // Name - Gets or sets the name.
    Name *string `json:"Name,omitempty"`
    // Type - Gets or sets the type. Possible values include: 'Type11Generic', 'Type11Access', 'Type11Role'
    Type Type `json:"Type,omitempty"`
    // State - Gets or sets the state. Possible values include: 'Inactive', 'Active'
    State State `json:"State,omitempty"`
    // ReservedInt1 - Gets or sets the reserved int1.
    ReservedInt1 *int32 `json:"ReservedInt1,omitempty"`
    // ReservedInt2 - Gets or sets the reserved int2.
    ReservedInt2 *int32 `json:"ReservedInt2,omitempty"`
    // ReservedString1 - Gets or sets the reserved string1.
    ReservedString1 *string `json:"ReservedString1,omitempty"`
    // ReservedString2 - Gets or sets the reserved string2.
    ReservedString2 *string `json:"ReservedString2,omitempty"`
}

// GroupDrawerModel the model that is sent in response to a GET request for GroupsDrawer associations
type GroupDrawerModel struct {
    // GroupID - Gets or sets the group identifier.
    GroupID *int32 `json:"GroupID,omitempty"`
    // GroupName - Gets or sets the name of the group.
    GroupName *string `json:"GroupName,omitempty"`
    // DrawerID - Gets or sets the drawer identifier.
    DrawerID *int32 `json:"DrawerID,omitempty"`
    // DrawerName - Gets or sets the name of the drawer.
    DrawerName *string `json:"DrawerName,omitempty"`
    // ACL - Gets or sets the access control level permissions.
    ACL *int32 `json:"Acl,omitempty"`
}

// GroupModel the model that is sent in response to a GET request for Groups
type GroupModel struct {
    autorest.Response `json:"-"`
    // ID - Gets or sets the group identifier.
    ID *int32 `json:"ID,omitempty"`
    // QueueCount - Gets or sets the queue count.
    QueueCount *int32 `json:"QueueCount,omitempty"`
    // UserCount - Gets or sets the user count.
    UserCount *int32 `json:"UserCount,omitempty"`
    // UserID - Gets or sets the user identifier.
    UserID *int32 `json:"UserID,omitempty"`
    // Name - Gets or sets the name.
    Name *string `json:"Name,omitempty"`
    // Type - Gets or sets the type. Possible values include: 'Type9Generic', 'Type9Access', 'Type9Role'
    Type Type `json:"Type,omitempty"`
    // State - Gets or sets the state. Possible values include: 'State9Inactive', 'State9Active'
    State State `json:"State,omitempty"`
    // ReservedInt1 - Gets or sets the reserved int1.
    ReservedInt1 *int32 `json:"ReservedInt1,omitempty"`
    // ReservedInt2 - Gets or sets the reserved int2.
    ReservedInt2 *int32 `json:"ReservedInt2,omitempty"`
    // ReservedString1 - Gets or sets the reserved string1.
    ReservedString1 *string `json:"ReservedString1,omitempty"`
    // ReservedString2 - Gets or sets the reserved string2.
    ReservedString2 *string `json:"ReservedString2,omitempty"`
}

// GroupQueueModel the model that is sent in response to a GET request for GroupsQueue associations
type GroupQueueModel struct {
    // GroupID - Gets or sets the group identifier.
    GroupID *int32 `json:"GroupID,omitempty"`
    // GroupName - Gets or sets the name of the group.
    GroupName *string `json:"GroupName,omitempty"`
    // QueueID - Gets or sets the queue identifier.
    QueueID *int32 `json:"QueueID,omitempty"`
    // QueueName - Gets or sets the name of the queue.
    QueueName *string `json:"QueueName,omitempty"`
    // ACL - Gets or sets the access control level permissions.
    ACL *int32 `json:"Acl,omitempty"`
}

// GroupUserModel the model that is sent in response to a GET request for GroupUser associations
type GroupUserModel struct {
    // GroupID - Gets or sets the group identifier.
    GroupID *int32 `json:"GroupID,omitempty"`
    // GroupName - Gets or sets the name of the group.
    GroupName *string `json:"GroupName,omitempty"`
    // UserID - Gets or sets the user identifier.
    UserID *int32 `json:"UserID,omitempty"`
    // UserFullName - Gets or sets the full name of the user.
    UserFullName *string `json:"UserFullName,omitempty"`
}

// InsertEntityLinkRequestModel the EntityLink model for POST Requests.
type InsertEntityLinkRequestModel struct {
    // Class - Gets or sets the class.
    Class *int32 `json:"Class,omitempty"`
    // Name - Gets or sets the name.
    Name *string `json:"Name,omitempty"`
    // ACL - Gets or sets the acl.
    ACL *int32 `json:"Acl,omitempty"`
    // PageNumber - Gets or sets the page number.
    PageNumber *int32 `json:"PageNumber,omitempty"`
    // Note - Gets or sets the note.
    Note *string `json:"Note,omitempty"`
    // ChildDrawerID - Gets or sets the child drawer identifier.
    ChildDrawerID *int32 `json:"ChildDrawerID,omitempty"`
    // ChildEntityID - Gets or sets the child entity identifier.
    ChildEntityID *int32 `json:"ChildEntityID,omitempty"`
    // ChildType - Gets or sets the type of the child.
    ChildType *int32 `json:"ChildType,omitempty"`
    // EntityID - Gets or sets the entity identifier.
    EntityID *int32 `json:"EntityID,omitempty"`
    // VirtualName - Gets or sets the name of the virtual.
    VirtualName *string `json:"VirtualName,omitempty"`
}

// InsertEntityRequestModel the Insert Entity Model.
type InsertEntityRequestModel struct {
    // Profiles - Gets or sets the profiles.
    Profiles *[]ProfileModel `json:"Profiles,omitempty"`
    // ACL - Gets or sets the access control list.
    ACL *int32 `json:"Acl,omitempty"`
    // Type - Gets or sets the type.
    Type *int32 `json:"Type,omitempty"`
    // Name - Gets or sets the Name.
    Name *string `json:"Name,omitempty"`
}

// InsertGroupRequestModel model for POST Group input Parameters.
type InsertGroupRequestModel struct {
    // Name - Gets or sets the name.
    Name *string `json:"Name,omitempty"`
    // Type - Gets or sets the type. Possible values include: 'Generic', 'Access', 'Role'
    Type Type `json:"Type,omitempty"`
}

// InsertNoteRequestModel model for POST Note input parameters.
type InsertNoteRequestModel struct {
    // ACL - Gets or sets the acl.
    ACL *int32 `json:"Acl,omitempty"`
    // EntityID - Gets or sets the entity identifier.
    EntityID *int32 `json:"EntityID,omitempty"`
    // Name - Gets or sets the name.
    Name *string `json:"Name,omitempty"`
    // Note - Gets or sets the note.
    Note *string `json:"Note,omitempty"`
    // ParentID - Gets or sets the parent identifier.
    ParentID *int32 `json:"ParentID,omitempty"`
}

// InsertQueueAssignmentRequestModel model for POST/PUT Queue Assignment input parameters.
type InsertQueueAssignmentRequestModel struct {
    // QueueID - Gets or sets the unique queue identifier.
    QueueID *int32 `json:"QueueID,omitempty"`
    // UserID - Gets or sets the user identifier.
    UserID *int32 `json:"UserID,omitempty"`
    // Type - Gets or sets the queue assignment type. Possible values include: 'Type14Unspecified', 'Type14Primary', 'Type14Secondary'
    Type Type `json:"Type,omitempty"`
    // Order - Gets or sets the sort order.
    Order *int32 `json:"Order,omitempty"`
    // TaskSortColumn - Gets or sets the task sort column. Possible values include: 'TaskSortColumn2TaskID', 'TaskSortColumn2QueueID', 'TaskSortColumn2DrawerID', 'TaskSortColumn2AddressID', 'TaskSortColumn2ObjectID', 'TaskSortColumn2ObjectType', 'TaskSortColumn2State', 'TaskSortColumn2Priority', 'TaskSortColumn2Description', 'TaskSortColumn2Message1', 'TaskSortColumn2Message2', 'TaskSortColumn2Message3', 'TaskSortColumn2Message4', 'TaskSortColumn2Message5', 'TaskSortColumn2OwnerUserID', 'TaskSortColumn2OwnerGroupID', 'TaskSortColumn2EffectiveUserID', 'TaskSortColumn2EffectiveGroupID', 'TaskSortColumn2PreviousQueueID', 'TaskSortColumn2NextQueueID', 'TaskSortColumn2InsertionTime', 'TaskSortColumn2ResolutionTime', 'TaskSortColumn2TaskFileAttachment', 'TaskSortColumn2ReservedInt1', 'TaskSortColumn2ReservedString1'
    TaskSortColumn TaskSortColumn `json:"TaskSortColumn,omitempty"`
    // FetchType - Gets or sets the type of the fetch. Possible values include: 'FetchType2Unspecified', 'FetchType2Manual', 'FetchType2Push'
    FetchType FetchType `json:"FetchType,omitempty"`
}

// InsertQueueRequestModel model for POST Queue input parameters.
type InsertQueueRequestModel struct {
    // Name - Gets or sets the name.
    Name *string `json:"Name,omitempty"`
    // Alias - Gets or sets the alias.
    Alias *string `json:"Alias,omitempty"`
    // Type - Gets or sets the type. Possible values include: 'Type17Inbound', 'Type17Outbound', 'Type17Access', 'Type17Any', 'Type17Shared', 'Type17Public', 'Type17Recycle', 'Type17Fax', 'Type17Print', 'Type17Scan', 'Type17Ocr', 'Type17Workflow', 'Type17Schedule', 'Type17System', 'Type17Other', 'Type17CdoInfostore', 'Type17CdoFolder'
    Type Type `json:"Type,omitempty"`
}

// InsertTaskRequestModel model for POST Task input parameters.
type InsertTaskRequestModel struct {
    // QueueID - Gets or sets the queue identifier.
    QueueID *int32 `json:"QueueID,omitempty"`
    // DrawerID - Gets or sets the drawer identifier.
    DrawerID *int32 `json:"DrawerID,omitempty"`
    // ObjectID - Gets or sets the object identifier (entity).
    ObjectID *int32 `json:"ObjectID,omitempty"`
    // ObjectType - Gets or sets the type of the object (entity).
    ObjectType *int32 `json:"ObjectType,omitempty"`
    // PrevQueueID - Gets or sets the previous queue identifier.
    PrevQueueID *int32 `json:"PrevQueueID,omitempty"`
    // NextQueueID - Gets or sets the next queue identifier.
    NextQueueID *int32 `json:"NextQueueID,omitempty"`
    // AddressID - Gets or sets the address identifier.
    AddressID *int32 `json:"AddressID,omitempty"`
    // Description - Gets or sets the description of the task.
    Description *string `json:"Description,omitempty"`
    // Message1 - Gets or sets message 1.
    Message1 *string `json:"Message1,omitempty"`
    // Message2 - Gets or sets message 2.
    Message2 *string `json:"Message2,omitempty"`
    // Message3 - Gets or sets message 3.
    Message3 *string `json:"Message3,omitempty"`
    // Message4 - Gets or sets message 4.
    Message4 *string `json:"Message4,omitempty"`
    // Message5 - Gets or sets message5.
    Message5 *string `json:"Message5,omitempty"`
    // Message6 - Gets or sets message 6.
    Message6 *string `json:"Message6,omitempty"`
    // Message7 - Gets or sets message 7.
    Message7 *string `json:"Message7,omitempty"`
    // Message8 - Gets or sets message 8.
    Message8 *string `json:"Message8,omitempty"`
    // Message9 - Gets or sets message 9.
    Message9 *string `json:"Message9,omitempty"`
    // Message10 - Gets or sets message 10.
    Message10 *string `json:"Message10,omitempty"`
    // Message11 - Gets or sets message 11.
    Message11 *string `json:"Message11,omitempty"`
    // Message12 - Gets or sets message 12.
    Message12 *string `json:"Message12,omitempty"`
    // Message13 - Gets or sets message 13.
    Message13 *string `json:"Message13,omitempty"`
    // Message14 - Gets or sets message 14.
    Message14 *string `json:"Message14,omitempty"`
    // Message15 - Gets or sets message 15.
    Message15 *string `json:"Message15,omitempty"`
    // Message16 - Gets or sets message 16.
    Message16 *string `json:"Message16,omitempty"`
    // State - Gets or sets the task state.
    State *int32 `json:"State,omitempty"`
    // Priority - Gets or sets the task priority.
    Priority *int32 `json:"Priority,omitempty"`
    // ResolutionTime - Gets or sets the task resolution time.
    ResolutionTime *date.Time `json:"ResolutionTime,omitempty"`
    // TaskFileAttachment - Gets or sets the task file attachment name.
    TaskFileAttachment *string `json:"TaskFileAttachment,omitempty"`
    // ReservedInt1 - Gets or sets reserved integer 1.
    ReservedInt1 *int32 `json:"ReservedInt1,omitempty"`
    // ReservedString1 - Gets or sets reserved string 1.
    ReservedString1 *string `json:"ReservedString1,omitempty"`
}

// InsertUserRequestModel model for POST User input parameters.
type InsertUserRequestModel struct {
    // Username - Gets or sets the username.
    Username *string `json:"Username,omitempty"`
    // State - Gets or sets the state. Possible values include: 'State19Active', 'State19Inactive'
    State State `json:"State,omitempty"`
    // Type - Gets or sets the type. Possible values include: 'Type21ImageDesk', 'Type21PublishDesk', 'Type21FaxDesk', 'Type21CaptureDesk', 'Type21RecognitionDesk', 'Type21PortalUser', 'Type21AdminDesk', 'Type21WorkflowDesk', 'Type21Benchmark', 'Type21ReportDesk', 'Type21ColdDesk', 'Type21PortalDesk', 'Type21WorkflowArchitect', 'Type21DocumentDesk', 'Type21Poweruser'
    Type Type `json:"Type,omitempty"`
    // FullName - Gets or sets the full name.
    FullName *string `json:"FullName,omitempty"`
    // IPAddress - Gets or sets the ip address.
    IPAddress *string `json:"IPAddress,omitempty"`
    // EntityACL - Gets or sets the entity acl.
    EntityACL *int32 `json:"EntityAcl,omitempty"`
    // AttachmentACL - Gets or sets the attachment acl.
    AttachmentACL *int32 `json:"AttachmentAcl,omitempty"`
    // NoteACL - Gets or sets the note acl.
    NoteACL *int32 `json:"NoteAcl,omitempty"`
    // EntityFeature - Gets or sets the entity feature.
    EntityFeature *int32 `json:"EntityFeature,omitempty"`
    // AttachmentFeature - Gets or sets the attachment feature.
    AttachmentFeature *int32 `json:"AttachmentFeature,omitempty"`
    // NoteFeature - Gets or sets the note feature.
    NoteFeature *int32 `json:"NoteFeature,omitempty"`
    // AdminMask - Gets or sets the admin mask. Possible values include: 'AdminMask1None', 'AdminMask1CabinetAdmin', 'AdminMask1DrawerAdmin', 'AdminMask1GroupAdmin', 'AdminMask1UserAdmin', 'AdminMask1WorkflowAdmin', 'AdminMask1VersionAdmin', 'AdminMask1TemplateAdmin', 'AdminMask1ApplicationAdmin'
    AdminMask AdminMask `json:"AdminMask,omitempty"`
    // Address - Gets or sets the address.
    Address *string `json:"Address,omitempty"`
}

// ItemDefinitionModel model for template items (drop down values)
type ItemDefinitionModel struct {
    // ID - Gets or sets the identifier.
    ID *string `json:"ID,omitempty"`
    // Name - Gets or sets the name.
    Name *string `json:"Name,omitempty"`
    // Value - Gets or sets the value.
    Value *int32 `json:"Value,omitempty"`
    // Type - Gets or sets the type. Possible values include: 'Type6Undefined', 'Type6ComboBoxItem', 'Type6ListBoxItem', 'Type6RadioButton', 'Type6ForwardAction', 'Type6ReplyAction'
    Type Type `json:"Type,omitempty"`
}

// ListApplicationModel ...
type ListApplicationModel struct {
    autorest.Response `json:"-"`
    Value *[]ApplicationModel `json:"value,omitempty"`
}

// ListAttachmentModel ...
type ListAttachmentModel struct {
    autorest.Response `json:"-"`
    Value *[]AttachmentModel `json:"value,omitempty"`
}

// ListAttachmentVersionModel ...
type ListAttachmentVersionModel struct {
    autorest.Response `json:"-"`
    Value *[]AttachmentVersionModel `json:"value,omitempty"`
}

// ListDrawerModel ...
type ListDrawerModel struct {
    autorest.Response `json:"-"`
    Value *[]DrawerModel `json:"value,omitempty"`
}

// ListEntityDefinitionModel ...
type ListEntityDefinitionModel struct {
    autorest.Response `json:"-"`
    Value *[]EntityDefinitionModel `json:"value,omitempty"`
}

// ListEntityLinkModel ...
type ListEntityLinkModel struct {
    autorest.Response `json:"-"`
    Value *[]EntityLinkModel `json:"value,omitempty"`
}

// ListEventModel ...
type ListEventModel struct {
    autorest.Response `json:"-"`
    Value *[]EventModel `json:"value,omitempty"`
}

// ListExtensionModel ...
type ListExtensionModel struct {
    autorest.Response `json:"-"`
    Value *[]ExtensionModel `json:"value,omitempty"`
}

// ListFlowModel ...
type ListFlowModel struct {
    autorest.Response `json:"-"`
    Value *[]FlowModel `json:"value,omitempty"`
}

// ListGetEntityBaseResponse ...
type ListGetEntityBaseResponse struct {
    autorest.Response `json:"-"`
    Value *[]GetEntityBaseResponse `json:"value,omitempty"`
}

// ListGroupApplicationModel ...
type ListGroupApplicationModel struct {
    autorest.Response `json:"-"`
    Value *[]GroupApplicationModel `json:"value,omitempty"`
}

// ListGroupDrawerModel ...
type ListGroupDrawerModel struct {
    autorest.Response `json:"-"`
    Value *[]GroupDrawerModel `json:"value,omitempty"`
}

// ListGroupModel ...
type ListGroupModel struct {
    autorest.Response `json:"-"`
    Value *[]GroupModel `json:"value,omitempty"`
}

// ListGroupQueueModel ...
type ListGroupQueueModel struct {
    autorest.Response `json:"-"`
    Value *[]GroupQueueModel `json:"value,omitempty"`
}

// ListGroupUserModel ...
type ListGroupUserModel struct {
    autorest.Response `json:"-"`
    Value *[]GroupUserModel `json:"value,omitempty"`
}

// ListNoteModel ...
type ListNoteModel struct {
    autorest.Response `json:"-"`
    Value *[]NoteModel `json:"value,omitempty"`
}

// ListQueueAssignmentModel ...
type ListQueueAssignmentModel struct {
    autorest.Response `json:"-"`
    Value *[]QueueAssignmentModel `json:"value,omitempty"`
}

// ListQueueModel ...
type ListQueueModel struct {
    autorest.Response `json:"-"`
    Value *[]QueueModel `json:"value,omitempty"`
}

// ListTaskModel ...
type ListTaskModel struct {
    autorest.Response `json:"-"`
    Value *[]TaskModel `json:"value,omitempty"`
}

// ListUserApplicationModel ...
type ListUserApplicationModel struct {
    autorest.Response `json:"-"`
    Value *[]UserApplicationModel `json:"value,omitempty"`
}

// ListUserDrawerModel ...
type ListUserDrawerModel struct {
    autorest.Response `json:"-"`
    Value *[]UserDrawerModel `json:"value,omitempty"`
}

// ListUserModel ...
type ListUserModel struct {
    autorest.Response `json:"-"`
    Value *[]UserModel `json:"value,omitempty"`
}

// ListUserQueueModel ...
type ListUserQueueModel struct {
    autorest.Response `json:"-"`
    Value *[]UserQueueModel `json:"value,omitempty"`
}

// ListWorkflowModel ...
type ListWorkflowModel struct {
    autorest.Response `json:"-"`
    Value *[]WorkflowModel `json:"value,omitempty"`
}

// ListWorkflowQueueModel ...
type ListWorkflowQueueModel struct {
    autorest.Response `json:"-"`
    Value *[]WorkflowQueueModel `json:"value,omitempty"`
}

// LockModel the model that is sent in response to a GET request for Locks
type LockModel struct {
    autorest.Response `json:"-"`
    // EntityID - Gets or sets the entity identifier.
    EntityID *int32 `json:"EntityID,omitempty"`
    // SessionID - Gets or sets the user session identifier.
    SessionID *int32 `json:"SessionID,omitempty"`
    // UserID - Gets or sets the identifier of the user who inserted the entity lock.
    UserID *int32 `json:"UserID,omitempty"`
    // UserFullName - Gets or sets the full name of the user who inserted the lock.
    UserFullName *string `json:"UserFullName,omitempty"`
    // LockTime - Gets or sets the time when the lock was placed on the entity.
    LockTime *date.Time `json:"LockTime,omitempty"`
    // ExpirationTime - Gets or sets the expiration time of the lock.
    ExpirationTime *date.Time `json:"ExpirationTime,omitempty"`
    // ACL - Gets or sets the access control level permissions of the lock.
    ACL *int32 `json:"Acl,omitempty"`
    // ApplicationName - Gets or sets the name of the application creating the lock.
    ApplicationName *string `json:"ApplicationName,omitempty"`
}

// LookupField ...
type LookupField struct {
    Column *string `json:"Column,omitempty"`
    ProfileIndex *int32 `json:"ProfileIndex,omitempty"`
    FieldIndex *int32 `json:"FieldIndex,omitempty"`
    ExtensionIndex *int32 `json:"ExtensionIndex,omitempty"`
}

// NoteBase note Base Class.
type NoteBase struct {
    // ACL - Gets or sets the acl.
    ACL *int32 `json:"Acl,omitempty"`
    // Name - Gets or sets the name.
    Name *string `json:"Name,omitempty"`
    // Note - Gets or sets the note.
    Note *string `json:"Note,omitempty"`
}

// NoteModel the model that is sent in response to a GET request for Notes
type NoteModel struct {
    autorest.Response `json:"-"`
    // ID - Gets or sets the identifier.
    ID *int32 `json:"ID,omitempty"`
    // DrawerID - Gets or sets the drawer identifier.
    DrawerID *int32 `json:"DrawerID,omitempty"`
    // EntityID - Gets or sets the entity identifier.
    EntityID *int32 `json:"EntityID,omitempty"`
    // OwnerUserID - Gets or sets the owner user identifier.
    OwnerUserID *int32 `json:"OwnerUserID,omitempty"`
    // OwnerUserFullName - Gets or sets the full name of the owner user.
    OwnerUserFullName *string `json:"OwnerUserFullName,omitempty"`
    // OwnerGroupID - Gets or sets the owner group identifier.
    OwnerGroupID *int32 `json:"OwnerGroupID,omitempty"`
    // OwnerGroupName - Gets or sets the name of the owner group.
    OwnerGroupName *string `json:"OwnerGroupName,omitempty"`
    // CreatorUserID - Gets or sets the creator user identifier.
    CreatorUserID *int32 `json:"CreatorUserID,omitempty"`
    // CreatorUserFullName - Gets or sets the full name of the creator user.
    CreatorUserFullName *string `json:"CreatorUserFullName,omitempty"`
    // ModifierUserID - Gets or sets the modifier user identifier.
    ModifierUserID *int32 `json:"ModifierUserID,omitempty"`
    // ModifierUserFullName - Gets or sets the full name of the modifier user.
    ModifierUserFullName *string `json:"ModifierUserFullName,omitempty"`
    // CreationTime - Gets or sets the creation time.
    CreationTime *date.Time `json:"CreationTime,omitempty"`
    // ModificationTime - Gets or sets the modification time.
    ModificationTime *date.Time `json:"ModificationTime,omitempty"`
    // ParentID - Gets or sets the parent identifier.
    ParentID *int32 `json:"ParentID,omitempty"`
    // ACL - Gets or sets the acl.
    ACL *int32 `json:"Acl,omitempty"`
    // Name - Gets or sets the name.
    Name *string `json:"Name,omitempty"`
    // Note - Gets or sets the note.
    Note *string `json:"Note,omitempty"`
}

// ProfileDefinitionModel model for Template Profiles
type ProfileDefinitionModel struct {
    // ID - Gets or sets the identifier.
    ID *string `json:"ID,omitempty"`
    // Type - Gets or sets the type.
    Type *int32 `json:"Type,omitempty"`
    // Name - Gets or sets the name.
    Name *string `json:"Name,omitempty"`
    // ReservedString1 - Gets or sets the reserved string1.
    ReservedString1 *string `json:"ReservedString1,omitempty"`
    // ReservedInt1 - Gets or sets the reserved int1.
    ReservedInt1 *int32 `json:"ReservedInt1,omitempty"`
    // Fields - Gets or sets the fields.
    Fields *[]FieldDefinitionModel `json:"Fields,omitempty"`
}

// ProfileModel the model that is sent in response to a GET request for Entity
type ProfileModel struct {
    // ID - Gets or sets the profile identifier.
    ID *int32 `json:"ID,omitempty"`
    // ACL - Gets or sets the access control list.
    ACL *int32 `json:"Acl,omitempty"`
    // Type - Gets or sets the type.
    Type *int32 `json:"Type,omitempty"`
    // ExtensionCount - Gets or sets the extension count.
    ExtensionCount *int32 `json:"ExtensionCount,omitempty"`
    // OwnerUserID - Gets or sets the owner user identifier.
    OwnerUserID *int32 `json:"OwnerUserID,omitempty"`
    // OwnerUserFullName - Gets or sets the full name of the owner user.
    OwnerUserFullName *string `json:"OwnerUserFullName,omitempty"`
    // OwnerGroupID - Gets or sets the owner group identifier.
    OwnerGroupID *int32 `json:"OwnerGroupID,omitempty"`
    // OwnerGroupName - Gets or sets the name of the owner group.
    OwnerGroupName *string `json:"OwnerGroupName,omitempty"`
    // ModifierUserID - Gets or sets the modifier user identifier.
    ModifierUserID *int32 `json:"ModifierUserID,omitempty"`
    // ModifierUserFullName - Gets or sets the full name of the modifier user.
    ModifierUserFullName *string `json:"ModifierUserFullName,omitempty"`
    // ModificationTime - Gets or sets the modification time.
    ModificationTime *date.Time `json:"ModificationTime,omitempty"`
    // Strings - Gets or sets the strings.
    Strings *[]string `json:"Strings,omitempty"`
    // Integers - Gets or sets the integers.
    Integers *[]int32 `json:"Integers,omitempty"`
    // Doubles - Gets or sets the doubles.
    Doubles *[]float64 `json:"Doubles,omitempty"`
    // Dates - Gets or sets the dates.
    Dates *[]date.Time `json:"Dates,omitempty"`
    // Extensions - Gets or sets the extensions.
    Extensions *[]ExtensionModel `json:"Extensions,omitempty"`
}

// QueueAssignmentModel defines properties and methods for Queue Assignment
type QueueAssignmentModel struct {
    autorest.Response `json:"-"`
    // QueueID - Gets or sets the unique queue identifier.
    QueueID *int32 `json:"QueueID,omitempty"`
    // UserID - Gets or sets the user identifier.
    UserID *int32 `json:"UserID,omitempty"`
    // GroupID - Gets or sets the group identifier.
    GroupID *int32 `json:"GroupID,omitempty"`
    // Type - Gets or sets the queue assignment type. Possible values include: 'Type13Unspecified', 'Type13Primary', 'Type13Secondary'
    Type Type `json:"Type,omitempty"`
    // Order - Gets or sets the sort order.
    Order *int32 `json:"Order,omitempty"`
    // TaskSortColumn - Gets or sets the task sort column. Possible values include: 'TaskSortColumn1TaskID', 'TaskSortColumn1QueueID', 'TaskSortColumn1DrawerID', 'TaskSortColumn1AddressID', 'TaskSortColumn1ObjectID', 'TaskSortColumn1ObjectType', 'TaskSortColumn1State', 'TaskSortColumn1Priority', 'TaskSortColumn1Description', 'TaskSortColumn1Message1', 'TaskSortColumn1Message2', 'TaskSortColumn1Message3', 'TaskSortColumn1Message4', 'TaskSortColumn1Message5', 'TaskSortColumn1OwnerUserID', 'TaskSortColumn1OwnerGroupID', 'TaskSortColumn1EffectiveUserID', 'TaskSortColumn1EffectiveGroupID', 'TaskSortColumn1PreviousQueueID', 'TaskSortColumn1NextQueueID', 'TaskSortColumn1InsertionTime', 'TaskSortColumn1ResolutionTime', 'TaskSortColumn1TaskFileAttachment', 'TaskSortColumn1ReservedInt1', 'TaskSortColumn1ReservedString1'
    TaskSortColumn TaskSortColumn `json:"TaskSortColumn,omitempty"`
    // State - Gets or sets the state. Possible values include: 'State14Unspecified', 'State14Inactive', 'State14Active'
    State State `json:"State,omitempty"`
    // FetchType - Gets or sets the type of the fetch. Possible values include: 'FetchType1Unspecified', 'FetchType1Manual', 'FetchType1Push'
    FetchType FetchType `json:"FetchType,omitempty"`
}

// QueueBase model for PUT Queue parameters.
type QueueBase struct {
    // Name - Gets or sets the name.
    Name *string `json:"Name,omitempty"`
    // Alias - Gets or sets the alias.
    Alias *string `json:"Alias,omitempty"`
    // State - Gets or sets the state. Possible values include: 'State16Inactive', 'State16Active'
    State State `json:"State,omitempty"`
    // Type - Gets or sets the type. Possible values include: 'Type18Inbound', 'Type18Outbound', 'Type18Access', 'Type18Any', 'Type18Shared', 'Type18Public', 'Type18Recycle', 'Type18Fax', 'Type18Print', 'Type18Scan', 'Type18Ocr', 'Type18Workflow', 'Type18Schedule', 'Type18System', 'Type18Other', 'Type18CdoInfostore', 'Type18CdoFolder'
    Type Type `json:"Type,omitempty"`
    // Category - Gets or sets the category.
    Category *string `json:"Category,omitempty"`
    // Description - Gets or sets the description.
    Description *string `json:"Description,omitempty"`
    // ReservedInt1 - Gets or sets the reserved integer 1.
    ReservedInt1 *int32 `json:"ReservedInt1,omitempty"`
    // ReservedInt2 - Gets or sets the reserved integer 2.
    ReservedInt2 *int32 `json:"ReservedInt2,omitempty"`
    // ReservedString1 - Gets or sets the reserved string 1.
    ReservedString1 *string `json:"ReservedString1,omitempty"`
    // ReservedString2 - Gets or sets the reserved string 2.
    ReservedString2 *string `json:"ReservedString2,omitempty"`
}

// QueueModel defines properties and methods for Queues
type QueueModel struct {
    autorest.Response `json:"-"`
    // ID - Gets or sets the identifier.
    ID *int32 `json:"ID,omitempty"`
    // UserCount - Gets or sets the user count.
    UserCount *int32 `json:"UserCount,omitempty"`
    // TaskCount - Gets or sets the task count.
    TaskCount *int32 `json:"TaskCount,omitempty"`
    // Name - Gets or sets the name.
    Name *string `json:"Name,omitempty"`
    // Alias - Gets or sets the alias.
    Alias *string `json:"Alias,omitempty"`
    // State - Gets or sets the state. Possible values include: 'State15Inactive', 'State15Active'
    State State `json:"State,omitempty"`
    // Type - Gets or sets the type. Possible values include: 'Type16Inbound', 'Type16Outbound', 'Type16Access', 'Type16Any', 'Type16Shared', 'Type16Public', 'Type16Recycle', 'Type16Fax', 'Type16Print', 'Type16Scan', 'Type16Ocr', 'Type16Workflow', 'Type16Schedule', 'Type16System', 'Type16Other', 'Type16CdoInfostore', 'Type16CdoFolder'
    Type Type `json:"Type,omitempty"`
    // Category - Gets or sets the category.
    Category *string `json:"Category,omitempty"`
    // Description - Gets or sets the description.
    Description *string `json:"Description,omitempty"`
    // ReservedInt1 - Gets or sets the reserved integer 1.
    ReservedInt1 *int32 `json:"ReservedInt1,omitempty"`
    // ReservedInt2 - Gets or sets the reserved integer 2.
    ReservedInt2 *int32 `json:"ReservedInt2,omitempty"`
    // ReservedString1 - Gets or sets the reserved string 1.
    ReservedString1 *string `json:"ReservedString1,omitempty"`
    // ReservedString2 - Gets or sets the reserved string 2.
    ReservedString2 *string `json:"ReservedString2,omitempty"`
}

// SetObject ...
type SetObject struct {
    autorest.Response `json:"-"`
    Value *map[string]interface{} `json:"value,omitempty"`
}

// String ...
type String struct {
    autorest.Response `json:"-"`
    Value *string `json:"value,omitempty"`
}

// TaskBase the task base class, also used as the model for updating tasks.
type TaskBase struct {
    // AddressID - Gets or sets the address identifier.
    AddressID *int32 `json:"AddressID,omitempty"`
    // Description - Gets or sets the description of the task.
    Description *string `json:"Description,omitempty"`
    // Message1 - Gets or sets message 1.
    Message1 *string `json:"Message1,omitempty"`
    // Message2 - Gets or sets message 2.
    Message2 *string `json:"Message2,omitempty"`
    // Message3 - Gets or sets message 3.
    Message3 *string `json:"Message3,omitempty"`
    // Message4 - Gets or sets message 4.
    Message4 *string `json:"Message4,omitempty"`
    // Message5 - Gets or sets message5.
    Message5 *string `json:"Message5,omitempty"`
    // Message6 - Gets or sets message 6.
    Message6 *string `json:"Message6,omitempty"`
    // Message7 - Gets or sets message 7.
    Message7 *string `json:"Message7,omitempty"`
    // Message8 - Gets or sets message 8.
    Message8 *string `json:"Message8,omitempty"`
    // Message9 - Gets or sets message 9.
    Message9 *string `json:"Message9,omitempty"`
    // Message10 - Gets or sets message 10.
    Message10 *string `json:"Message10,omitempty"`
    // Message11 - Gets or sets message 11.
    Message11 *string `json:"Message11,omitempty"`
    // Message12 - Gets or sets message 12.
    Message12 *string `json:"Message12,omitempty"`
    // Message13 - Gets or sets message 13.
    Message13 *string `json:"Message13,omitempty"`
    // Message14 - Gets or sets message 14.
    Message14 *string `json:"Message14,omitempty"`
    // Message15 - Gets or sets message 15.
    Message15 *string `json:"Message15,omitempty"`
    // Message16 - Gets or sets message 16.
    Message16 *string `json:"Message16,omitempty"`
    // State - Gets or sets the task state.
    State *int32 `json:"State,omitempty"`
    // Priority - Gets or sets the task priority.
    Priority *int32 `json:"Priority,omitempty"`
    // ResolutionTime - Gets or sets the task resolution time.
    ResolutionTime *date.Time `json:"ResolutionTime,omitempty"`
    // TaskFileAttachment - Gets or sets the task file attachment name.
    TaskFileAttachment *string `json:"TaskFileAttachment,omitempty"`
    // ReservedInt1 - Gets or sets reserved integer 1.
    ReservedInt1 *int32 `json:"ReservedInt1,omitempty"`
    // ReservedString1 - Gets or sets reserved string 1.
    ReservedString1 *string `json:"ReservedString1,omitempty"`
}

// TaskModel the model that is sent in response to a GET request for Tasks
type TaskModel struct {
    autorest.Response `json:"-"`
    // TaskID - Gets or sets the task identifier.
    TaskID *int32 `json:"TaskID,omitempty"`
    // QueueID - Gets or sets the queue identifier.
    QueueID *int32 `json:"QueueID,omitempty"`
    // DrawerID - Gets or sets the drawer identifier.
    DrawerID *int32 `json:"DrawerID,omitempty"`
    // ObjectID - Gets or sets the object identifier (entity).
    ObjectID *int32 `json:"ObjectID,omitempty"`
    // ObjectType - Gets or sets the type of the object (entity).
    ObjectType *int32 `json:"ObjectType,omitempty"`
    // OwnerUserID - Gets or sets the task owner user identifier.
    OwnerUserID *int32 `json:"OwnerUserID,omitempty"`
    // OwnerUserFullName - Gets or sets the full name of the owner user.
    OwnerUserFullName *string `json:"OwnerUserFullName,omitempty"`
    // OwnerGroupID - Gets or sets the task owner group identifier.
    OwnerGroupID *int32 `json:"OwnerGroupID,omitempty"`
    // OwnerGroupName - Gets or sets the name of the owner group.
    OwnerGroupName *string `json:"OwnerGroupName,omitempty"`
    // EffectiveUserID - Gets or sets the effective user identifier.
    EffectiveUserID *int32 `json:"EffectiveUserID,omitempty"`
    // EffectiveUserFullName - Gets or sets the full name of the effective user.
    EffectiveUserFullName *string `json:"EffectiveUserFullName,omitempty"`
    // EffectiveGroupID - Gets or sets the effective group identifier.
    EffectiveGroupID *int32 `json:"EffectiveGroupID,omitempty"`
    // EffectiveGroupName - Gets or sets the name of the effective group.
    EffectiveGroupName *string `json:"EffectiveGroupName,omitempty"`
    // PrevQueueID - Gets or sets the previous queue identifier.
    PrevQueueID *int32 `json:"PrevQueueID,omitempty"`
    // NextQueueID - Gets or sets the next queue identifier.
    NextQueueID *int32 `json:"NextQueueID,omitempty"`
    // InsertionTime - Gets or sets the task insertion time.
    InsertionTime *date.Time `json:"InsertionTime,omitempty"`
    // AddressID - Gets or sets the address identifier.
    AddressID *int32 `json:"AddressID,omitempty"`
    // Description - Gets or sets the description of the task.
    Description *string `json:"Description,omitempty"`
    // Message1 - Gets or sets message 1.
    Message1 *string `json:"Message1,omitempty"`
    // Message2 - Gets or sets message 2.
    Message2 *string `json:"Message2,omitempty"`
    // Message3 - Gets or sets message 3.
    Message3 *string `json:"Message3,omitempty"`
    // Message4 - Gets or sets message 4.
    Message4 *string `json:"Message4,omitempty"`
    // Message5 - Gets or sets message5.
    Message5 *string `json:"Message5,omitempty"`
    // Message6 - Gets or sets message 6.
    Message6 *string `json:"Message6,omitempty"`
    // Message7 - Gets or sets message 7.
    Message7 *string `json:"Message7,omitempty"`
    // Message8 - Gets or sets message 8.
    Message8 *string `json:"Message8,omitempty"`
    // Message9 - Gets or sets message 9.
    Message9 *string `json:"Message9,omitempty"`
    // Message10 - Gets or sets message 10.
    Message10 *string `json:"Message10,omitempty"`
    // Message11 - Gets or sets message 11.
    Message11 *string `json:"Message11,omitempty"`
    // Message12 - Gets or sets message 12.
    Message12 *string `json:"Message12,omitempty"`
    // Message13 - Gets or sets message 13.
    Message13 *string `json:"Message13,omitempty"`
    // Message14 - Gets or sets message 14.
    Message14 *string `json:"Message14,omitempty"`
    // Message15 - Gets or sets message 15.
    Message15 *string `json:"Message15,omitempty"`
    // Message16 - Gets or sets message 16.
    Message16 *string `json:"Message16,omitempty"`
    // State - Gets or sets the task state.
    State *int32 `json:"State,omitempty"`
    // Priority - Gets or sets the task priority.
    Priority *int32 `json:"Priority,omitempty"`
    // ResolutionTime - Gets or sets the task resolution time.
    ResolutionTime *date.Time `json:"ResolutionTime,omitempty"`
    // TaskFileAttachment - Gets or sets the task file attachment name.
    TaskFileAttachment *string `json:"TaskFileAttachment,omitempty"`
    // ReservedInt1 - Gets or sets reserved integer 1.
    ReservedInt1 *int32 `json:"ReservedInt1,omitempty"`
    // ReservedString1 - Gets or sets reserved string 1.
    ReservedString1 *string `json:"ReservedString1,omitempty"`
}

// UpdateAttachmentRequestModel model for the PUT Attachment input parameters.
type UpdateAttachmentRequestModel struct {
    // Category - Gets or sets the category.
    Category *int32 `json:"Category,omitempty"`
    // Class - Gets or sets the class.
    Class *int32 `json:"Class,omitempty"`
    // Name - Gets or sets the name.
    Name *string `json:"Name,omitempty"`
    // ACL - Gets or sets the acl.
    ACL *int32 `json:"Acl,omitempty"`
    // PageNumber - Gets or sets the page number.
    PageNumber *int32 `json:"PageNumber,omitempty"`
    // State - Gets or sets the state. Possible values include: 'State1Undefined', 'State1MaxStates', 'State1Reserved', 'State1UserDefined', 'State1Dynamic', 'State1Static', 'State1New', 'State1CheckedOut', 'State1Internal', 'State1Statres5', 'State1Linked', 'State1Statres4', 'State1Statres3', 'State1Statres2', 'State1Statres1', 'State1Locked', 'State1OnServerCache', 'State1OnClientCache', 'State1Fetching', 'State1Dynres4', 'State1Dynres3', 'State1Dynres2', 'State1Dynres1', 'State1User1', 'State1User2', 'State1User3', 'State1User4', 'State1User5', 'State1User6', 'State1User7', 'State1User8', 'State1User9', 'State1User10', 'State1User11', 'State1User12', 'State1User13', 'State1User14', 'State1User15', 'State1User16'
    State State `json:"State,omitempty"`
    // Note - Gets or sets the note.
    Note *string `json:"Note,omitempty"`
}

// UpdateEntityDefinitionRequestModel the Entity template update class.
type UpdateEntityDefinitionRequestModel struct {
    // Category - Gets or sets the category of template.
    Category *string `json:"Category,omitempty"`
    // Name - Gets or sets the name of templates.
    Name *string `json:"Name,omitempty"`
    // SmallImage - Gets or sets the small image.
    SmallImage *string `json:"SmallImage,omitempty"`
    // LargeImage - Gets or sets the large image.
    LargeImage *string `json:"LargeImage,omitempty"`
    // HasAudit - Gets or sets if the template has auditing enabled.
    HasAudit *bool `json:"HasAudit,omitempty"`
    // AllowsViewImages - Gets or sets if the template allows viewing images.
    AllowsViewImages *bool `json:"AllowsViewImages,omitempty"`
    // IsReviewState - Gets or sets if the entity is created in a review state.
    IsReviewState *bool `json:"IsReviewState,omitempty"`
    // Profiles - Gets or sets the profiles.
    Profiles *[]ProfileDefinitionModel `json:"Profiles,omitempty"`
}

// UpdateEntityLinkRequestModel the model for PUT EntityLink input parameters.
type UpdateEntityLinkRequestModel struct {
    // VirtualName - Gets or sets the name of the virtual.
    VirtualName *string `json:"VirtualName,omitempty"`
    // Class - Gets or sets the class.
    Class *int32 `json:"Class,omitempty"`
    // Name - Gets or sets the name.
    Name *string `json:"Name,omitempty"`
    // ACL - Gets or sets the acl.
    ACL *int32 `json:"Acl,omitempty"`
    // PageNumber - Gets or sets the page number.
    PageNumber *int32 `json:"PageNumber,omitempty"`
    // State - Gets or sets the state. Possible values include: 'State12Undefined', 'State12MaxStates', 'State12Reserved', 'State12UserDefined', 'State12Dynamic', 'State12Static', 'State12New', 'State12CheckedOut', 'State12Internal', 'State12Statres5', 'State12Linked', 'State12Statres4', 'State12Statres3', 'State12Statres2', 'State12Statres1', 'State12Locked', 'State12OnServerCache', 'State12OnClientCache', 'State12Fetching', 'State12Dynres4', 'State12Dynres3', 'State12Dynres2', 'State12Dynres1', 'State12User1', 'State12User2', 'State12User3', 'State12User4', 'State12User5', 'State12User6', 'State12User7', 'State12User8', 'State12User9', 'State12User10', 'State12User11', 'State12User12', 'State12User13', 'State12User14', 'State12User15', 'State12User16'
    State State `json:"State,omitempty"`
    // Note - Gets or sets the note.
    Note *string `json:"Note,omitempty"`
}

// UpdateEntityRequestModel the model for PUT Entity input parameters.
type UpdateEntityRequestModel struct {
    // Profiles - Gets or sets the profiles.
    Profiles *[]ProfileModel `json:"Profiles,omitempty"`
    // State - Gets or sets the state. Possible values include: 'State5Undefined', 'State5Available', 'State5Locked', 'State5Suspended', 'State5Archived', 'State5Deleted', 'State5Canceled', 'State5Complete', 'State5Reviewed', 'State5ReviewedSuspended', 'State5ReviewedComplete', 'State5Rejected', 'State5RoutingSlipOpen', 'State5ReviewedRoutingSlipOpen'
    State State `json:"State,omitempty"`
    // Name - Gets or sets the name.
    Name *string `json:"Name,omitempty"`
}

// UpdateLockRequestModel update request model for Locks
type UpdateLockRequestModel struct {
    // ExpirationDuration - Gets or sets the expiration duration of the lock in minutes.
    ExpirationDuration *int32 `json:"ExpirationDuration,omitempty"`
    // ACL - Gets or sets the access control level permissions of the lock.
    ACL *int32 `json:"Acl,omitempty"`
    // ApplicationName - Gets or sets the name of the application creating the lock.
    ApplicationName *string `json:"ApplicationName,omitempty"`
}

// UserApplicationModel the model that is sent in response to a GET request for UserApplication associations
type UserApplicationModel struct {
    // UserID - Gets or sets the user identifier.
    UserID *int32 `json:"UserID,omitempty"`
    // UserFullName - Gets or sets the full name of the user.
    UserFullName *string `json:"UserFullName,omitempty"`
    // ApplicationID - Gets or sets the application identifier.
    ApplicationID *int32 `json:"ApplicationID,omitempty"`
    // ApplicationName - Gets or sets the name of the application.
    ApplicationName *string `json:"ApplicationName,omitempty"`
    // ACL - Gets or sets the access control level permissions.
    ACL *int32 `json:"Acl,omitempty"`
}

// UserBase the UserBase Class.
type UserBase struct {
    // PrimaryGroupID - Gets or sets the primary group identifier.
    PrimaryGroupID *int32 `json:"PrimaryGroupID,omitempty"`
    // Type - Gets or sets the type. Possible values include: 'Type22ImageDesk', 'Type22PublishDesk', 'Type22FaxDesk', 'Type22CaptureDesk', 'Type22RecognitionDesk', 'Type22PortalUser', 'Type22AdminDesk', 'Type22WorkflowDesk', 'Type22Benchmark', 'Type22ReportDesk', 'Type22ColdDesk', 'Type22PortalDesk', 'Type22WorkflowArchitect', 'Type22DocumentDesk', 'Type22Poweruser'
    Type Type `json:"Type,omitempty"`
    // State - Gets or sets the state. Possible values include: 'State20Active', 'State20Inactive'
    State State `json:"State,omitempty"`
    // FullName - Gets or sets the full name.
    FullName *string `json:"FullName,omitempty"`
    // ObjectCount - Gets or sets the object count.
    ObjectCount *int32 `json:"ObjectCount,omitempty"`
    // IPAddress - Gets or sets the ip address.
    IPAddress *string `json:"IPAddress,omitempty"`
    // EntityACL - Gets or sets the entity acl.
    EntityACL *int32 `json:"EntityAcl,omitempty"`
    // AttachmentACL - Gets or sets the attachment acl.
    AttachmentACL *int32 `json:"AttachmentAcl,omitempty"`
    // NoteACL - Gets or sets the note acl.
    NoteACL *int32 `json:"NoteAcl,omitempty"`
    // EntityFeature - Gets or sets the entity feature.
    EntityFeature *int32 `json:"EntityFeature,omitempty"`
    // AttachmentFeature - Gets or sets the attachment feature.
    AttachmentFeature *int32 `json:"AttachmentFeature,omitempty"`
    // NoteFeature - Gets or sets the note feature.
    NoteFeature *int32 `json:"NoteFeature,omitempty"`
    // AdminMask - Gets or sets the admin mask. Possible values include: 'AdminMask2None', 'AdminMask2CabinetAdmin', 'AdminMask2DrawerAdmin', 'AdminMask2GroupAdmin', 'AdminMask2UserAdmin', 'AdminMask2WorkflowAdmin', 'AdminMask2VersionAdmin', 'AdminMask2TemplateAdmin', 'AdminMask2ApplicationAdmin'
    AdminMask AdminMask `json:"AdminMask,omitempty"`
    // Address - Gets or sets the address.
    Address *string `json:"Address,omitempty"`
    // ReservedInt1 - Gets or sets the reserved int1.
    ReservedInt1 *int32 `json:"ReservedInt1,omitempty"`
    // ReservedInt2 - Gets or sets the reserved int2.
    ReservedInt2 *int32 `json:"ReservedInt2,omitempty"`
    // ReservedDouble1 - Gets or sets the reserved double1.
    ReservedDouble1 *float64 `json:"ReservedDouble1,omitempty"`
    // ReservedDouble2 - Gets or sets the reserved double2.
    ReservedDouble2 *float64 `json:"ReservedDouble2,omitempty"`
    // ReservedString1 - Gets or sets the reserved string1.
    ReservedString1 *string `json:"ReservedString1,omitempty"`
    // ReservedString2 - Gets or sets the reserved string2.
    ReservedString2 *string `json:"ReservedString2,omitempty"`
    // UserExpiration - Gets or sets the user expiration.
    UserExpiration *date.Time `json:"UserExpiration,omitempty"`
}

// UserDrawerModel the model that is sent in response to a GET request for UserDrawer associations
type UserDrawerModel struct {
    // UserID - Gets or sets the user identifier.
    UserID *int32 `json:"UserID,omitempty"`
    // UserFullName - Gets or sets the full name of the user.
    UserFullName *string `json:"UserFullName,omitempty"`
    // DrawerID - Gets or sets the drawer identifier.
    DrawerID *int32 `json:"DrawerID,omitempty"`
    // DrawerName - Gets or sets the name of the drawer.
    DrawerName *string `json:"DrawerName,omitempty"`
    // ACL - Gets or sets the access control level permissions.
    ACL *int32 `json:"Acl,omitempty"`
}

// UserModel the model that is sent in response to a GET request for Users
type UserModel struct {
    autorest.Response `json:"-"`
    // ID - Gets or sets the identifier.
    ID *int32 `json:"ID,omitempty"`
    // Username - Gets or sets the username.
    Username *string `json:"Username,omitempty"`
    // LoginCount - Gets or sets the login count.
    LoginCount *int32 `json:"LoginCount,omitempty"`
    // DrawerCount - Gets or sets the drawer count.
    DrawerCount *int32 `json:"DrawerCount,omitempty"`
    // GroupCount - Gets or sets the group count.
    GroupCount *int32 `json:"GroupCount,omitempty"`
    // QueueCount - Gets or sets the queue count.
    QueueCount *int32 `json:"QueueCount,omitempty"`
    // LoginTime - Gets or sets the login time.
    LoginTime *int32 `json:"LoginTime,omitempty"`
    // LastLogin - Gets or sets the last login.
    LastLogin *date.Time `json:"LastLogin,omitempty"`
    // PrimaryGroupID - Gets or sets the primary group identifier.
    PrimaryGroupID *int32 `json:"PrimaryGroupID,omitempty"`
    // Type - Gets or sets the type. Possible values include: 'Type20ImageDesk', 'Type20PublishDesk', 'Type20FaxDesk', 'Type20CaptureDesk', 'Type20RecognitionDesk', 'Type20PortalUser', 'Type20AdminDesk', 'Type20WorkflowDesk', 'Type20Benchmark', 'Type20ReportDesk', 'Type20ColdDesk', 'Type20PortalDesk', 'Type20WorkflowArchitect', 'Type20DocumentDesk', 'Type20Poweruser'
    Type Type `json:"Type,omitempty"`
    // State - Gets or sets the state. Possible values include: 'State18Active', 'State18Inactive'
    State State `json:"State,omitempty"`
    // FullName - Gets or sets the full name.
    FullName *string `json:"FullName,omitempty"`
    // ObjectCount - Gets or sets the object count.
    ObjectCount *int32 `json:"ObjectCount,omitempty"`
    // IPAddress - Gets or sets the ip address.
    IPAddress *string `json:"IPAddress,omitempty"`
    // EntityACL - Gets or sets the entity acl.
    EntityACL *int32 `json:"EntityAcl,omitempty"`
    // AttachmentACL - Gets or sets the attachment acl.
    AttachmentACL *int32 `json:"AttachmentAcl,omitempty"`
    // NoteACL - Gets or sets the note acl.
    NoteACL *int32 `json:"NoteAcl,omitempty"`
    // EntityFeature - Gets or sets the entity feature.
    EntityFeature *int32 `json:"EntityFeature,omitempty"`
    // AttachmentFeature - Gets or sets the attachment feature.
    AttachmentFeature *int32 `json:"AttachmentFeature,omitempty"`
    // NoteFeature - Gets or sets the note feature.
    NoteFeature *int32 `json:"NoteFeature,omitempty"`
    // AdminMask - Gets or sets the admin mask. Possible values include: 'None', 'CabinetAdmin', 'DrawerAdmin', 'GroupAdmin', 'UserAdmin', 'WorkflowAdmin', 'VersionAdmin', 'TemplateAdmin', 'ApplicationAdmin'
    AdminMask AdminMask `json:"AdminMask,omitempty"`
    // Address - Gets or sets the address.
    Address *string `json:"Address,omitempty"`
    // ReservedInt1 - Gets or sets the reserved int1.
    ReservedInt1 *int32 `json:"ReservedInt1,omitempty"`
    // ReservedInt2 - Gets or sets the reserved int2.
    ReservedInt2 *int32 `json:"ReservedInt2,omitempty"`
    // ReservedDouble1 - Gets or sets the reserved double1.
    ReservedDouble1 *float64 `json:"ReservedDouble1,omitempty"`
    // ReservedDouble2 - Gets or sets the reserved double2.
    ReservedDouble2 *float64 `json:"ReservedDouble2,omitempty"`
    // ReservedString1 - Gets or sets the reserved string1.
    ReservedString1 *string `json:"ReservedString1,omitempty"`
    // ReservedString2 - Gets or sets the reserved string2.
    ReservedString2 *string `json:"ReservedString2,omitempty"`
    // UserExpiration - Gets or sets the user expiration.
    UserExpiration *date.Time `json:"UserExpiration,omitempty"`
}

// UserQueueModel the model that is sent in response to a GET request for UserQueue associations
type UserQueueModel struct {
    // UserID - Gets or sets the user identifier.
    UserID *int32 `json:"UserID,omitempty"`
    // UserFullName - Gets or sets the full name of the user.
    UserFullName *string `json:"UserFullName,omitempty"`
    // QueueID - Gets or sets the queue identifier.
    QueueID *int32 `json:"QueueID,omitempty"`
    // QueueName - Gets or sets the name of the queue.
    QueueName *string `json:"QueueName,omitempty"`
    // ACL - Gets or sets the access control level permissions.
    ACL *int32 `json:"Acl,omitempty"`
}

// WorkflowActionInitializeModel defines properties and methods for Workflow Initialize
type WorkflowActionInitializeModel struct {
    // DrawerID - Gets or sets the drawer identifier.
    DrawerID *int32 `json:"DrawerID,omitempty"`
    // EntityID - Gets or sets the entity identifier.
    EntityID *int32 `json:"EntityID,omitempty"`
    // QueueID - Gets or sets the queue identifier.
    QueueID *[]int32 `json:"QueueID,omitempty"`
    // QueueName - Gets or sets the name of the queue.
    QueueName *[]string `json:"QueueName,omitempty"`
    // Source - Gets or sets the source.
    Source *string `json:"Source,omitempty"`
    // Computer - Gets or sets the name of the computer.
    Computer *string `json:"Computer,omitempty"`
    // IPAddress - Gets or sets the IP address.
    IPAddress *string `json:"IPAddress,omitempty"`
}

// WorkflowActionModel defines properties and methods for Workflow Action Model
type WorkflowActionModel struct {
    // TaskID - Gets or sets the task identifier.
    TaskID *int32 `json:"TaskID,omitempty"`
    // TargetID - Gets or sets the target id.
    TargetID *int32 `json:"TargetID,omitempty"`
    // QueueName - Gets or sets the name of the queue.
    QueueName *string `json:"QueueName,omitempty"`
    // Source - Gets or sets the source.
    Source *string `json:"Source,omitempty"`
    // Computer - Gets or sets the name of the computer.
    Computer *string `json:"Computer,omitempty"`
    // IPAddress - Gets or sets the IP address.
    IPAddress *string `json:"IPAddress,omitempty"`
}

// WorkflowActionRouteModel defines properties and methods for Workflow Action Route Model
type WorkflowActionRouteModel struct {
    // DrawerID - Gets or sets the drawer identifier.
    DrawerID *int32 `json:"DrawerID,omitempty"`
    // EntityID - Gets or sets the entity identifier.
    EntityID *int32 `json:"EntityID,omitempty"`
    // KeepOriginalTask - Gets or sets a value indicating whether [keep original task].
    KeepOriginalTask *bool `json:"KeepOriginalTask,omitempty"`
    // TaskID - Gets or sets the task identifier.
    TaskID *int32 `json:"TaskID,omitempty"`
    // TargetID - Gets or sets the target id.
    TargetID *int32 `json:"TargetID,omitempty"`
    // QueueName - Gets or sets the name of the queue.
    QueueName *string `json:"QueueName,omitempty"`
    // Source - Gets or sets the source.
    Source *string `json:"Source,omitempty"`
    // Computer - Gets or sets the name of the computer.
    Computer *string `json:"Computer,omitempty"`
    // IPAddress - Gets or sets the IP address.
    IPAddress *string `json:"IPAddress,omitempty"`
}

// WorkflowModel the model that is sent in response to a GET request for Workflow
type WorkflowModel struct {
    autorest.Response `json:"-"`
    // ID - Gets or sets the identifier.
    ID *int32 `json:"ID,omitempty"`
    // Name - Gets or sets the name.
    Name *string `json:"Name,omitempty"`
    // EntityType - Gets or sets the type of the entity.
    EntityType *int32 `json:"EntityType,omitempty"`
    // Alias - Gets or sets the alias.
    Alias *string `json:"Alias,omitempty"`
}

// WorkflowQueueModel defines properties and methods for workflow queues
type WorkflowQueueModel struct {
    // WorkflowType - Gets or sets the type of the workflow. Possible values include: 'Uncategorized', 'Auto', 'StraightThrough', 'Exception', 'Holding', 'Any'
    WorkflowType WorkflowType `json:"WorkflowType,omitempty"`
    // Index - Gets or sets the index.
    Index *int32 `json:"Index,omitempty"`
    // SubIndex - Gets or sets the subindex.
    SubIndex *int32 `json:"SubIndex,omitempty"`
    // ID - Gets or sets the identifier.
    ID *int32 `json:"ID,omitempty"`
    // UserCount - Gets or sets the user count.
    UserCount *int32 `json:"UserCount,omitempty"`
    // TaskCount - Gets or sets the task count.
    TaskCount *int32 `json:"TaskCount,omitempty"`
    // Name - Gets or sets the name.
    Name *string `json:"Name,omitempty"`
    // Alias - Gets or sets the alias.
    Alias *string `json:"Alias,omitempty"`
    // State - Gets or sets the state. Possible values include: 'State21Inactive', 'State21Active'
    State State `json:"State,omitempty"`
    // Type - Gets or sets the type. Possible values include: 'Type23Inbound', 'Type23Outbound', 'Type23Access', 'Type23Any', 'Type23Shared', 'Type23Public', 'Type23Recycle', 'Type23Fax', 'Type23Print', 'Type23Scan', 'Type23Ocr', 'Type23Workflow', 'Type23Schedule', 'Type23System', 'Type23Other', 'Type23CdoInfostore', 'Type23CdoFolder'
    Type Type `json:"Type,omitempty"`
    // Category - Gets or sets the category.
    Category *string `json:"Category,omitempty"`
    // Description - Gets or sets the description.
    Description *string `json:"Description,omitempty"`
    // ReservedInt1 - Gets or sets the reserved integer 1.
    ReservedInt1 *int32 `json:"ReservedInt1,omitempty"`
    // ReservedInt2 - Gets or sets the reserved integer 2.
    ReservedInt2 *int32 `json:"ReservedInt2,omitempty"`
    // ReservedString1 - Gets or sets the reserved string 1.
    ReservedString1 *string `json:"ReservedString1,omitempty"`
    // ReservedString2 - Gets or sets the reserved string 2.
    ReservedString2 *string `json:"ReservedString2,omitempty"`
}

