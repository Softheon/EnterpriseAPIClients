// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Softheon.Enterprise.Api.Client.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Represents a profile search field
    /// </summary>
    public partial class GetProfileFieldRequestModel
    {
        /// <summary>
        /// Initializes a new instance of the GetProfileFieldRequestModel
        /// class.
        /// </summary>
        public GetProfileFieldRequestModel()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the GetProfileFieldRequestModel
        /// class.
        /// </summary>
        /// <param name="profileType">Gets or sets the type of the
        /// profile.</param>
        /// <param name="fieldType">Gets or sets the type of the field.
        /// Possible values include: 'String', 'Integer', 'Double',
        /// 'DateTime'</param>
        /// <param name="fieldIndex">Gets or sets the index of the
        /// field.</param>
        /// <param name="fieldValue">Gets or sets the field value.</param>
        public GetProfileFieldRequestModel(int profileType, string fieldType, int fieldIndex, string fieldValue)
        {
            ProfileType = profileType;
            FieldType = fieldType;
            FieldIndex = fieldIndex;
            FieldValue = fieldValue;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the type of the profile.
        /// </summary>
        [JsonProperty(PropertyName = "ProfileType")]
        public int ProfileType { get; set; }

        /// <summary>
        /// Gets or sets the type of the field. Possible values include:
        /// 'String', 'Integer', 'Double', 'DateTime'
        /// </summary>
        [JsonProperty(PropertyName = "FieldType")]
        public string FieldType { get; set; }

        /// <summary>
        /// Gets or sets the index of the field.
        /// </summary>
        [JsonProperty(PropertyName = "FieldIndex")]
        public int FieldIndex { get; set; }

        /// <summary>
        /// Gets or sets the field value.
        /// </summary>
        [JsonProperty(PropertyName = "FieldValue")]
        public string FieldValue { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (FieldType == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "FieldType");
            }
            if (FieldValue == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "FieldValue");
            }
        }
    }
}
