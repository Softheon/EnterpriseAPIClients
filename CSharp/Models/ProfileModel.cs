// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Softheon.Enterprise.Api.Client.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// The model that is sent in response to a GET request for Entity
    /// </summary>
    public partial class ProfileModel
    {
        /// <summary>
        /// Initializes a new instance of the ProfileModel class.
        /// </summary>
        public ProfileModel()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ProfileModel class.
        /// </summary>
        /// <param name="id">Gets or sets the profile identifier.</param>
        /// <param name="acl">Gets or sets the access control list.</param>
        /// <param name="type">Gets or sets the type.</param>
        /// <param name="extensionCount">Gets or sets the extension
        /// count.</param>
        /// <param name="ownerUserID">Gets or sets the owner user
        /// identifier.</param>
        /// <param name="ownerUserFullName">Gets or sets the full name of the
        /// owner user.</param>
        /// <param name="ownerGroupID">Gets or sets the owner group
        /// identifier.</param>
        /// <param name="ownerGroupName">Gets or sets the name of the owner
        /// group.</param>
        /// <param name="modifierUserID">Gets or sets the modifier user
        /// identifier.</param>
        /// <param name="modifierUserFullName">Gets or sets the full name of
        /// the modifier user.</param>
        /// <param name="modificationTime">Gets or sets the modification
        /// time.</param>
        /// <param name="strings">Gets or sets the strings.</param>
        /// <param name="integers">Gets or sets the integers.</param>
        /// <param name="doubles">Gets or sets the doubles.</param>
        /// <param name="dates">Gets or sets the dates.</param>
        /// <param name="extensions">Gets or sets the extensions.</param>
        public ProfileModel(int? id = default(int?), int? acl = default(int?), int? type = default(int?), int? extensionCount = default(int?), int? ownerUserID = default(int?), string ownerUserFullName = default(string), int? ownerGroupID = default(int?), string ownerGroupName = default(string), int? modifierUserID = default(int?), string modifierUserFullName = default(string), System.DateTime? modificationTime = default(System.DateTime?), IList<string> strings = default(IList<string>), IList<int?> integers = default(IList<int?>), IList<double?> doubles = default(IList<double?>), IList<System.DateTime?> dates = default(IList<System.DateTime?>), IList<ExtensionModel> extensions = default(IList<ExtensionModel>))
        {
            ID = id;
            Acl = acl;
            Type = type;
            ExtensionCount = extensionCount;
            OwnerUserID = ownerUserID;
            OwnerUserFullName = ownerUserFullName;
            OwnerGroupID = ownerGroupID;
            OwnerGroupName = ownerGroupName;
            ModifierUserID = modifierUserID;
            ModifierUserFullName = modifierUserFullName;
            ModificationTime = modificationTime;
            Strings = strings;
            Integers = integers;
            Doubles = doubles;
            Dates = dates;
            Extensions = extensions;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the profile identifier.
        /// </summary>
        [JsonProperty(PropertyName = "ID")]
        public int? ID { get; set; }

        /// <summary>
        /// Gets or sets the access control list.
        /// </summary>
        [JsonProperty(PropertyName = "Acl")]
        public int? Acl { get; set; }

        /// <summary>
        /// Gets or sets the type.
        /// </summary>
        [JsonProperty(PropertyName = "Type")]
        public int? Type { get; set; }

        /// <summary>
        /// Gets or sets the extension count.
        /// </summary>
        [JsonProperty(PropertyName = "ExtensionCount")]
        public int? ExtensionCount { get; set; }

        /// <summary>
        /// Gets or sets the owner user identifier.
        /// </summary>
        [JsonProperty(PropertyName = "OwnerUserID")]
        public int? OwnerUserID { get; set; }

        /// <summary>
        /// Gets or sets the full name of the owner user.
        /// </summary>
        [JsonProperty(PropertyName = "OwnerUserFullName")]
        public string OwnerUserFullName { get; set; }

        /// <summary>
        /// Gets or sets the owner group identifier.
        /// </summary>
        [JsonProperty(PropertyName = "OwnerGroupID")]
        public int? OwnerGroupID { get; set; }

        /// <summary>
        /// Gets or sets the name of the owner group.
        /// </summary>
        [JsonProperty(PropertyName = "OwnerGroupName")]
        public string OwnerGroupName { get; set; }

        /// <summary>
        /// Gets or sets the modifier user identifier.
        /// </summary>
        [JsonProperty(PropertyName = "ModifierUserID")]
        public int? ModifierUserID { get; set; }

        /// <summary>
        /// Gets or sets the full name of the modifier user.
        /// </summary>
        [JsonProperty(PropertyName = "ModifierUserFullName")]
        public string ModifierUserFullName { get; set; }

        /// <summary>
        /// Gets or sets the modification time.
        /// </summary>
        [JsonProperty(PropertyName = "ModificationTime")]
        public System.DateTime? ModificationTime { get; set; }

        /// <summary>
        /// Gets or sets the strings.
        /// </summary>
        [JsonProperty(PropertyName = "Strings")]
        public IList<string> Strings { get; set; }

        /// <summary>
        /// Gets or sets the integers.
        /// </summary>
        [JsonProperty(PropertyName = "Integers")]
        public IList<int?> Integers { get; set; }

        /// <summary>
        /// Gets or sets the doubles.
        /// </summary>
        [JsonProperty(PropertyName = "Doubles")]
        public IList<double?> Doubles { get; set; }

        /// <summary>
        /// Gets or sets the dates.
        /// </summary>
        [JsonProperty(PropertyName = "Dates")]
        public IList<System.DateTime?> Dates { get; set; }

        /// <summary>
        /// Gets or sets the extensions.
        /// </summary>
        [JsonProperty(PropertyName = "Extensions")]
        public IList<ExtensionModel> Extensions { get; set; }

    }
}
