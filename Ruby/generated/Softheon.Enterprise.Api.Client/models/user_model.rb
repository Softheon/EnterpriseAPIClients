# encoding: utf-8
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.

module Softheon.Enterprise.Api.Client
  module Models
    #
    # The model that is sent in response to a GET request for Users
    #
    class UserModel
      # @return [Integer] Gets or sets the identifier.
      attr_accessor :id

      # @return [String] Gets or sets the username.
      attr_accessor :username

      # @return [Integer] Gets or sets the login count.
      attr_accessor :login_count

      # @return [Integer] Gets or sets the drawer count.
      attr_accessor :drawer_count

      # @return [Integer] Gets or sets the group count.
      attr_accessor :group_count

      # @return [Integer] Gets or sets the queue count.
      attr_accessor :queue_count

      # @return [Integer] Gets or sets the login time.
      attr_accessor :login_time

      # @return [DateTime] Gets or sets the last login.
      attr_accessor :last_login

      # @return [Integer] Gets or sets the primary group identifier.
      attr_accessor :primary_group_id

      # @return [Enum] Gets or sets the type. Possible values include:
      # 'ImageDesk', 'PublishDesk', 'FaxDesk', 'CaptureDesk',
      # 'RecognitionDesk', 'PortalUser', 'AdminDesk', 'WorkflowDesk',
      # 'Benchmark', 'ReportDesk', 'ColdDesk', 'PortalDesk',
      # 'WorkflowArchitect', 'DocumentDesk', 'Poweruser'
      attr_accessor :type

      # @return [Enum] Gets or sets the state. Possible values include:
      # 'Active', 'Inactive'
      attr_accessor :state

      # @return [String] Gets or sets the full name.
      attr_accessor :full_name

      # @return [Integer] Gets or sets the object count.
      attr_accessor :object_count

      # @return [String] Gets or sets the ip address.
      attr_accessor :ipaddress

      # @return [Integer] Gets or sets the entity acl.
      attr_accessor :entity_acl

      # @return [Integer] Gets or sets the attachment acl.
      attr_accessor :attachment_acl

      # @return [Integer] Gets or sets the note acl.
      attr_accessor :note_acl

      # @return [Integer] Gets or sets the entity feature.
      attr_accessor :entity_feature

      # @return [Integer] Gets or sets the attachment feature.
      attr_accessor :attachment_feature

      # @return [Integer] Gets or sets the note feature.
      attr_accessor :note_feature

      # @return [Enum] Gets or sets the admin mask. Possible values include:
      # 'None', 'CabinetAdmin', 'DrawerAdmin', 'GroupAdmin', 'UserAdmin',
      # 'WorkflowAdmin', 'VersionAdmin', 'TemplateAdmin', 'ApplicationAdmin'
      attr_accessor :admin_mask

      # @return [String] Gets or sets the address.
      attr_accessor :address

      # @return [Integer] Gets or sets the reserved int1.
      attr_accessor :reserved_int1

      # @return [Integer] Gets or sets the reserved int2.
      attr_accessor :reserved_int2

      # @return [Float] Gets or sets the reserved double1.
      attr_accessor :reserved_double1

      # @return [Float] Gets or sets the reserved double2.
      attr_accessor :reserved_double2

      # @return [String] Gets or sets the reserved string1.
      attr_accessor :reserved_string1

      # @return [String] Gets or sets the reserved string2.
      attr_accessor :reserved_string2

      # @return [DateTime] Gets or sets the user expiration.
      attr_accessor :user_expiration


      #
      # Mapper for UserModel class as Ruby Hash.
      # This will be used for serialization/deserialization.
      #
      def self.mapper()
        {
          client_side_validation: true,
          required: false,
          serialized_name: 'UserModel',
          type: {
            name: 'Composite',
            class_name: 'UserModel',
            model_properties: {
              id: {
                client_side_validation: true,
                required: false,
                serialized_name: 'ID',
                type: {
                  name: 'Number'
                }
              },
              username: {
                client_side_validation: true,
                required: false,
                serialized_name: 'Username',
                type: {
                  name: 'String'
                }
              },
              login_count: {
                client_side_validation: true,
                required: false,
                serialized_name: 'LoginCount',
                type: {
                  name: 'Number'
                }
              },
              drawer_count: {
                client_side_validation: true,
                required: false,
                serialized_name: 'DrawerCount',
                type: {
                  name: 'Number'
                }
              },
              group_count: {
                client_side_validation: true,
                required: false,
                serialized_name: 'GroupCount',
                type: {
                  name: 'Number'
                }
              },
              queue_count: {
                client_side_validation: true,
                required: false,
                serialized_name: 'QueueCount',
                type: {
                  name: 'Number'
                }
              },
              login_time: {
                client_side_validation: true,
                required: false,
                serialized_name: 'LoginTime',
                type: {
                  name: 'Number'
                }
              },
              last_login: {
                client_side_validation: true,
                required: false,
                serialized_name: 'LastLogin',
                type: {
                  name: 'DateTime'
                }
              },
              primary_group_id: {
                client_side_validation: true,
                required: false,
                serialized_name: 'PrimaryGroupID',
                constraints: {
                  InclusiveMaximum: 2147483647,
                  InclusiveMinimum: 0
                },
                type: {
                  name: 'Number'
                }
              },
              type: {
                client_side_validation: true,
                required: false,
                serialized_name: 'Type',
                type: {
                  name: 'String'
                }
              },
              state: {
                client_side_validation: true,
                required: false,
                serialized_name: 'State',
                type: {
                  name: 'String'
                }
              },
              full_name: {
                client_side_validation: true,
                required: false,
                serialized_name: 'FullName',
                constraints: {
                  MaxLength: 255,
                  MinLength: 0
                },
                type: {
                  name: 'String'
                }
              },
              object_count: {
                client_side_validation: true,
                required: false,
                serialized_name: 'ObjectCount',
                constraints: {
                  InclusiveMaximum: 2147483647,
                  InclusiveMinimum: 0
                },
                type: {
                  name: 'Number'
                }
              },
              ipaddress: {
                client_side_validation: true,
                required: false,
                serialized_name: 'IPAddress',
                constraints: {
                  MaxLength: 255,
                  MinLength: 0
                },
                type: {
                  name: 'String'
                }
              },
              entity_acl: {
                client_side_validation: true,
                required: false,
                serialized_name: 'EntityAcl',
                type: {
                  name: 'Number'
                }
              },
              attachment_acl: {
                client_side_validation: true,
                required: false,
                serialized_name: 'AttachmentAcl',
                type: {
                  name: 'Number'
                }
              },
              note_acl: {
                client_side_validation: true,
                required: false,
                serialized_name: 'NoteAcl',
                type: {
                  name: 'Number'
                }
              },
              entity_feature: {
                client_side_validation: true,
                required: false,
                serialized_name: 'EntityFeature',
                type: {
                  name: 'Number'
                }
              },
              attachment_feature: {
                client_side_validation: true,
                required: false,
                serialized_name: 'AttachmentFeature',
                type: {
                  name: 'Number'
                }
              },
              note_feature: {
                client_side_validation: true,
                required: false,
                serialized_name: 'NoteFeature',
                type: {
                  name: 'Number'
                }
              },
              admin_mask: {
                client_side_validation: true,
                required: false,
                serialized_name: 'AdminMask',
                type: {
                  name: 'String'
                }
              },
              address: {
                client_side_validation: true,
                required: false,
                serialized_name: 'Address',
                constraints: {
                  MaxLength: 255,
                  MinLength: 0
                },
                type: {
                  name: 'String'
                }
              },
              reserved_int1: {
                client_side_validation: true,
                required: false,
                serialized_name: 'ReservedInt1',
                type: {
                  name: 'Number'
                }
              },
              reserved_int2: {
                client_side_validation: true,
                required: false,
                serialized_name: 'ReservedInt2',
                type: {
                  name: 'Number'
                }
              },
              reserved_double1: {
                client_side_validation: true,
                required: false,
                serialized_name: 'ReservedDouble1',
                type: {
                  name: 'Double'
                }
              },
              reserved_double2: {
                client_side_validation: true,
                required: false,
                serialized_name: 'ReservedDouble2',
                type: {
                  name: 'Double'
                }
              },
              reserved_string1: {
                client_side_validation: true,
                required: false,
                serialized_name: 'ReservedString1',
                constraints: {
                  MaxLength: 128,
                  MinLength: 0
                },
                type: {
                  name: 'String'
                }
              },
              reserved_string2: {
                client_side_validation: true,
                required: false,
                serialized_name: 'ReservedString2',
                constraints: {
                  MaxLength: 128,
                  MinLength: 0
                },
                type: {
                  name: 'String'
                }
              },
              user_expiration: {
                client_side_validation: true,
                required: false,
                serialized_name: 'UserExpiration',
                type: {
                  name: 'DateTime'
                }
              }
            }
          }
        }
      end
    end
  end
end
