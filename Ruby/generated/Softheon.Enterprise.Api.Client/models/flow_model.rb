# encoding: utf-8
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.

module Softheon.Enterprise.Api.Client
  module Models
    #
    # The model that is sent in response to a GET request for Flow
    #
    class FlowModel
      # @return [Integer] Gets or sets the identifier.
      attr_accessor :id

      # @return [Integer] Gets or sets the drawer identifier.
      attr_accessor :drawer_id

      # @return [Integer] Gets or sets the entity identifier.
      attr_accessor :entity_id

      # @return [Enum] Gets or sets the type. Possible values include: 'None',
      # 'Workflow', 'Fatal', 'Warning', 'Info', 'Debug', 'Process', 'Rpc',
      # 'Sql', 'Dde'
      attr_accessor :type

      # @return [Integer] Gets or sets the queue identifier.
      attr_accessor :queue_id

      # @return [DateTime] Gets or sets the workflow time.
      attr_accessor :workflow_time

      # @return [DateTime] Gets or sets the insertion time.
      attr_accessor :insertion_time

      # @return [Integer] Gets or sets the workflow user identifier.
      attr_accessor :workflow_user_id

      # @return [String] Gets or sets the full name of the workflow user.
      attr_accessor :workflow_user_full_name

      # @return [Integer] Gets or sets the workflow group identifier.
      attr_accessor :workflow_group_id

      # @return [String] Gets or sets the name of the workflow group.
      attr_accessor :workflow_group_name

      # @return [Enum] Gets or sets the operation. Possible values include:
      # 'None', 'Update', 'Reset', 'Override', 'Null'
      attr_accessor :operation

      # @return [Enum] Gets or sets the category. Possible values include:
      # 'None', 'Direct', 'AdHoc', 'Production', 'Review', 'Reset',
      # 'RoutingSlip', 'ReviewRoutingSlip', 'Override'
      attr_accessor :category

      # @return [Enum] Gets or sets the status. Possible values include:
      # 'None', 'Approved', 'Rejected', 'Suspended', 'ApprovedR', 'NoneR'
      attr_accessor :status

      # @return [Enum] Gets or sets the state. Possible values include: 'None',
      # 'Processed', 'Pending', 'Waiting', 'ProcessedR', 'Override',
      # 'OverrideR', 'WaitingR'
      attr_accessor :state

      # @return [String] Gets or sets the source.
      attr_accessor :source

      # @return [String] Gets or sets the ip address.
      attr_accessor :ipaddress

      # @return [String] Gets or sets the computer.
      attr_accessor :computer

      # @return [String] Gets or sets the description.
      attr_accessor :description

      # @return [Integer] Gets or sets the index1.
      attr_accessor :index1

      # @return [Integer] Gets or sets the index2.
      attr_accessor :index2


      #
      # Mapper for FlowModel class as Ruby Hash.
      # This will be used for serialization/deserialization.
      #
      def self.mapper()
        {
          client_side_validation: true,
          required: false,
          serialized_name: 'FlowModel',
          type: {
            name: 'Composite',
            class_name: 'FlowModel',
            model_properties: {
              id: {
                client_side_validation: true,
                required: false,
                serialized_name: 'ID',
                type: {
                  name: 'Number'
                }
              },
              drawer_id: {
                client_side_validation: true,
                required: false,
                serialized_name: 'DrawerID',
                type: {
                  name: 'Number'
                }
              },
              entity_id: {
                client_side_validation: true,
                required: false,
                serialized_name: 'EntityID',
                type: {
                  name: 'Number'
                }
              },
              type: {
                client_side_validation: true,
                required: false,
                serialized_name: 'Type',
                type: {
                  name: 'String'
                }
              },
              queue_id: {
                client_side_validation: true,
                required: false,
                serialized_name: 'QueueID',
                type: {
                  name: 'Number'
                }
              },
              workflow_time: {
                client_side_validation: true,
                required: false,
                serialized_name: 'WorkflowTime',
                type: {
                  name: 'DateTime'
                }
              },
              insertion_time: {
                client_side_validation: true,
                required: false,
                serialized_name: 'InsertionTime',
                type: {
                  name: 'DateTime'
                }
              },
              workflow_user_id: {
                client_side_validation: true,
                required: false,
                serialized_name: 'WorkflowUserID',
                type: {
                  name: 'Number'
                }
              },
              workflow_user_full_name: {
                client_side_validation: true,
                required: false,
                serialized_name: 'WorkflowUserFullName',
                type: {
                  name: 'String'
                }
              },
              workflow_group_id: {
                client_side_validation: true,
                required: false,
                serialized_name: 'WorkflowGroupID',
                type: {
                  name: 'Number'
                }
              },
              workflow_group_name: {
                client_side_validation: true,
                required: false,
                serialized_name: 'WorkflowGroupName',
                type: {
                  name: 'String'
                }
              },
              operation: {
                client_side_validation: true,
                required: false,
                serialized_name: 'Operation',
                type: {
                  name: 'String'
                }
              },
              category: {
                client_side_validation: true,
                required: false,
                serialized_name: 'Category',
                type: {
                  name: 'String'
                }
              },
              status: {
                client_side_validation: true,
                required: false,
                serialized_name: 'Status',
                type: {
                  name: 'String'
                }
              },
              state: {
                client_side_validation: true,
                required: false,
                serialized_name: 'State',
                type: {
                  name: 'String'
                }
              },
              source: {
                client_side_validation: true,
                required: false,
                serialized_name: 'Source',
                type: {
                  name: 'String'
                }
              },
              ipaddress: {
                client_side_validation: true,
                required: false,
                serialized_name: 'IPAddress',
                type: {
                  name: 'String'
                }
              },
              computer: {
                client_side_validation: true,
                required: false,
                serialized_name: 'Computer',
                type: {
                  name: 'String'
                }
              },
              description: {
                client_side_validation: true,
                required: false,
                serialized_name: 'Description',
                type: {
                  name: 'String'
                }
              },
              index1: {
                client_side_validation: true,
                required: false,
                serialized_name: 'Index1',
                type: {
                  name: 'Number'
                }
              },
              index2: {
                client_side_validation: true,
                required: false,
                serialized_name: 'Index2',
                type: {
                  name: 'Number'
                }
              }
            }
          }
        }
      end
    end
  end
end
