# encoding: utf-8
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.

module Softheon.Enterprise.Api.Client
  module Models
    #
    # Model for the GET Task input parameters
    #
    class GetTaskModel
      # @return [Integer] Gets or sets the last task identifier.
      attr_accessor :last_task_id

      # @return [Integer] Gets or sets the entity identifier.
      attr_accessor :id

      # @return [Integer] Gets or sets the type of the entity.
      attr_accessor :type

      # @return [Integer] Gets or sets the queue identifier.
      attr_accessor :queue_id

      # @return [Integer] Gets or sets the type of the queue.
      attr_accessor :queue_type

      # @return [Integer] Gets or sets the drawer identifier.
      attr_accessor :drawer_id

      # @return [String] Gets or sets the task description.
      attr_accessor :description

      # @return [Integer] Gets or sets the task identifier.
      attr_accessor :task_id

      # @return [Integer] Gets or sets the page number.
      attr_accessor :page

      # @return [Integer] Gets or sets the size of the page.
      attr_accessor :page_size

      # @return [Enum] Gets or sets the order. Possible values include:
      # 'Unspecified', 'Ascending', 'Descending'
      attr_accessor :sort_order

      # @return [Enum] Gets or sets the column to order by. Possible values
      # include: 'TaskID', 'QueueID', 'ObjectID', 'Priority', 'Description',
      # 'InsertionTime', 'ResolutionTime', 'ReservedInt1'
      attr_accessor :sort_by


      #
      # Mapper for GetTaskModel class as Ruby Hash.
      # This will be used for serialization/deserialization.
      #
      def self.mapper()
        {
          client_side_validation: true,
          required: false,
          serialized_name: 'GetTaskModel',
          type: {
            name: 'Composite',
            class_name: 'GetTaskModel',
            model_properties: {
              last_task_id: {
                client_side_validation: true,
                required: false,
                serialized_name: 'LastTaskID',
                constraints: {
                  InclusiveMaximum: 2147483647,
                  InclusiveMinimum: 0
                },
                type: {
                  name: 'Number'
                }
              },
              id: {
                client_side_validation: true,
                required: false,
                serialized_name: 'ID',
                constraints: {
                  InclusiveMaximum: 2147483647,
                  InclusiveMinimum: 1
                },
                type: {
                  name: 'Number'
                }
              },
              type: {
                client_side_validation: true,
                required: false,
                serialized_name: 'Type',
                type: {
                  name: 'Number'
                }
              },
              queue_id: {
                client_side_validation: true,
                required: false,
                serialized_name: 'QueueID',
                type: {
                  name: 'Number'
                }
              },
              queue_type: {
                client_side_validation: true,
                required: false,
                serialized_name: 'QueueType',
                constraints: {
                  InclusiveMaximum: 2147483647,
                  InclusiveMinimum: 1
                },
                type: {
                  name: 'Number'
                }
              },
              drawer_id: {
                client_side_validation: true,
                required: false,
                serialized_name: 'DrawerID',
                constraints: {
                  InclusiveMaximum: 2147483647,
                  InclusiveMinimum: 1
                },
                type: {
                  name: 'Number'
                }
              },
              description: {
                client_side_validation: true,
                required: false,
                serialized_name: 'Description',
                constraints: {
                  MaxLength: 255,
                  MinLength: 0
                },
                type: {
                  name: 'String'
                }
              },
              task_id: {
                client_side_validation: true,
                required: false,
                serialized_name: 'TaskID',
                type: {
                  name: 'Number'
                }
              },
              page: {
                client_side_validation: true,
                required: false,
                serialized_name: 'Page',
                constraints: {
                  InclusiveMaximum: 2147483647,
                  InclusiveMinimum: 1
                },
                type: {
                  name: 'Number'
                }
              },
              page_size: {
                client_side_validation: true,
                required: false,
                serialized_name: 'PageSize',
                constraints: {
                  InclusiveMaximum: 1000,
                  InclusiveMinimum: 1
                },
                type: {
                  name: 'Number'
                }
              },
              sort_order: {
                client_side_validation: true,
                required: false,
                serialized_name: 'SortOrder',
                type: {
                  name: 'String'
                }
              },
              sort_by: {
                client_side_validation: true,
                required: false,
                serialized_name: 'SortBy',
                type: {
                  name: 'String'
                }
              }
            }
          }
        }
      end
    end
  end
end
