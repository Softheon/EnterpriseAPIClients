# encoding: utf-8
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.

module Softheon.Enterprise.Api.Client
  module Models
    #
    # Model for the GET User input parameters
    #
    class GetUserRequestModel
      # @return [Integer] Gets or sets the identifier.
      attr_accessor :id

      # @return [Integer] Gets or sets the primary group identifier.
      attr_accessor :primary_group_id

      # @return [Integer] Gets or sets the group identifier.
      attr_accessor :group_id

      # @return [String] Gets or sets the name of the group.
      attr_accessor :group_name

      # @return [String] Gets or sets the username.
      attr_accessor :username

      # @return [Enum] Gets or sets the type. Possible values include:
      # 'ImageDesk', 'PublishDesk', 'FaxDesk', 'CaptureDesk',
      # 'RecognitionDesk', 'PortalUser', 'AdminDesk', 'WorkflowDesk',
      # 'Benchmark', 'ReportDesk', 'ColdDesk', 'PortalDesk',
      # 'WorkflowArchitect', 'DocumentDesk', 'Poweruser'
      attr_accessor :type

      # @return [Enum] Gets or sets the state. Possible values include:
      # 'Active', 'Inactive'
      attr_accessor :state

      # @return [String] Gets or sets the full name.
      attr_accessor :full_name

      # @return [Integer] Gets or sets the page number.
      attr_accessor :page

      # @return [Integer] Gets or sets the size of the page.
      attr_accessor :page_size

      # @return [Enum] Gets or sets the order. Possible values include:
      # 'Unspecified', 'Ascending', 'Descending'
      attr_accessor :sort_order

      # @return [Enum] Gets or sets the column to order by. Possible values
      # include: 'ID', 'PrimaryGroupID', 'Username', 'UserFullName', 'Type',
      # 'State'
      attr_accessor :sort_by


      #
      # Mapper for GetUserRequestModel class as Ruby Hash.
      # This will be used for serialization/deserialization.
      #
      def self.mapper()
        {
          client_side_validation: true,
          required: false,
          serialized_name: 'GetUserRequestModel',
          type: {
            name: 'Composite',
            class_name: 'GetUserRequestModel',
            model_properties: {
              id: {
                client_side_validation: true,
                required: false,
                serialized_name: 'ID',
                type: {
                  name: 'Number'
                }
              },
              primary_group_id: {
                client_side_validation: true,
                required: false,
                serialized_name: 'PrimaryGroupID',
                type: {
                  name: 'Number'
                }
              },
              group_id: {
                client_side_validation: true,
                required: false,
                serialized_name: 'GroupID',
                type: {
                  name: 'Number'
                }
              },
              group_name: {
                client_side_validation: true,
                required: false,
                serialized_name: 'GroupName',
                type: {
                  name: 'String'
                }
              },
              username: {
                client_side_validation: true,
                required: false,
                serialized_name: 'Username',
                type: {
                  name: 'String'
                }
              },
              type: {
                client_side_validation: true,
                required: false,
                serialized_name: 'Type',
                type: {
                  name: 'String'
                }
              },
              state: {
                client_side_validation: true,
                required: false,
                serialized_name: 'State',
                type: {
                  name: 'String'
                }
              },
              full_name: {
                client_side_validation: true,
                required: false,
                serialized_name: 'FullName',
                type: {
                  name: 'String'
                }
              },
              page: {
                client_side_validation: true,
                required: false,
                serialized_name: 'Page',
                constraints: {
                  InclusiveMaximum: 2147483647,
                  InclusiveMinimum: 1
                },
                type: {
                  name: 'Number'
                }
              },
              page_size: {
                client_side_validation: true,
                required: false,
                serialized_name: 'PageSize',
                constraints: {
                  InclusiveMaximum: 1000,
                  InclusiveMinimum: 1
                },
                type: {
                  name: 'Number'
                }
              },
              sort_order: {
                client_side_validation: true,
                required: false,
                serialized_name: 'SortOrder',
                type: {
                  name: 'String'
                }
              },
              sort_by: {
                client_side_validation: true,
                required: false,
                serialized_name: 'SortBy',
                type: {
                  name: 'String'
                }
              }
            }
          }
        }
      end
    end
  end
end
